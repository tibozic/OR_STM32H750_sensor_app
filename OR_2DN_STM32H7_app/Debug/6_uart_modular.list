
6_uart_modular.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000298  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001358  080002a0  080002a0  000102a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000b0  080015f8  080015f8  000115f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .init_array   00000004  080016a8  080016a8  000116a8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .fini_array   00000004  080016ac  080016ac  000116ac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data         00000064  24000000  080016b0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          00000030  24000064  08001714  00020064  2**2
                  ALLOC
  7 ._user_heap_stack 00000604  24000094  08001714  00020094  2**0
                  ALLOC
  8 .ARM.attributes 0000002e  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
  9 .debug_info   0000f412  00000000  00000000  00020092  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 00003712  00000000  00000000  0002f4a4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_aranges 000005b8  00000000  00000000  00032bb8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 00000466  00000000  00000000  00033170  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_macro  0002a3a0  00000000  00000000  000335d6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_line   00005637  00000000  00000000  0005d976  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_str    000ee3df  00000000  00000000  00062fad  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .comment      0000003c  00000000  00000000  0015138c  2**0
                  CONTENTS, READONLY
 17 .debug_frame  00000c30  00000000  00000000  001513c8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line_str 000000b9  00000000  00000000  00151ff8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_loclists 000018b1  00000000  00000000  001520b1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080002a0 <memchr>:
 80002a0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002a4:	2a10      	cmp	r2, #16
 80002a6:	db2b      	blt.n	8000300 <memchr+0x60>
 80002a8:	f010 0f07 	tst.w	r0, #7
 80002ac:	d008      	beq.n	80002c0 <memchr+0x20>
 80002ae:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002b2:	3a01      	subs	r2, #1
 80002b4:	428b      	cmp	r3, r1
 80002b6:	d02d      	beq.n	8000314 <memchr+0x74>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	b342      	cbz	r2, 8000310 <memchr+0x70>
 80002be:	d1f6      	bne.n	80002ae <memchr+0xe>
 80002c0:	b4f0      	push	{r4, r5, r6, r7}
 80002c2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002c6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002ca:	f022 0407 	bic.w	r4, r2, #7
 80002ce:	f07f 0700 	mvns.w	r7, #0
 80002d2:	2300      	movs	r3, #0
 80002d4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002d8:	3c08      	subs	r4, #8
 80002da:	ea85 0501 	eor.w	r5, r5, r1
 80002de:	ea86 0601 	eor.w	r6, r6, r1
 80002e2:	fa85 f547 	uadd8	r5, r5, r7
 80002e6:	faa3 f587 	sel	r5, r3, r7
 80002ea:	fa86 f647 	uadd8	r6, r6, r7
 80002ee:	faa5 f687 	sel	r6, r5, r7
 80002f2:	b98e      	cbnz	r6, 8000318 <memchr+0x78>
 80002f4:	d1ee      	bne.n	80002d4 <memchr+0x34>
 80002f6:	bcf0      	pop	{r4, r5, r6, r7}
 80002f8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002fc:	f002 0207 	and.w	r2, r2, #7
 8000300:	b132      	cbz	r2, 8000310 <memchr+0x70>
 8000302:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000306:	3a01      	subs	r2, #1
 8000308:	ea83 0301 	eor.w	r3, r3, r1
 800030c:	b113      	cbz	r3, 8000314 <memchr+0x74>
 800030e:	d1f8      	bne.n	8000302 <memchr+0x62>
 8000310:	2000      	movs	r0, #0
 8000312:	4770      	bx	lr
 8000314:	3801      	subs	r0, #1
 8000316:	4770      	bx	lr
 8000318:	2d00      	cmp	r5, #0
 800031a:	bf06      	itte	eq
 800031c:	4635      	moveq	r5, r6
 800031e:	3803      	subeq	r0, #3
 8000320:	3807      	subne	r0, #7
 8000322:	f015 0f01 	tst.w	r5, #1
 8000326:	d107      	bne.n	8000338 <memchr+0x98>
 8000328:	3001      	adds	r0, #1
 800032a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800032e:	bf02      	ittt	eq
 8000330:	3001      	addeq	r0, #1
 8000332:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000336:	3001      	addeq	r0, #1
 8000338:	bcf0      	pop	{r4, r5, r6, r7}
 800033a:	3801      	subs	r0, #1
 800033c:	4770      	bx	lr
 800033e:	bf00      	nop

08000340 <__do_global_dtors_aux>:
 8000340:	b510      	push	{r4, lr}
 8000342:	4c05      	ldr	r4, [pc, #20]	; (8000358 <__do_global_dtors_aux+0x18>)
 8000344:	7823      	ldrb	r3, [r4, #0]
 8000346:	b933      	cbnz	r3, 8000356 <__do_global_dtors_aux+0x16>
 8000348:	4b04      	ldr	r3, [pc, #16]	; (800035c <__do_global_dtors_aux+0x1c>)
 800034a:	b113      	cbz	r3, 8000352 <__do_global_dtors_aux+0x12>
 800034c:	4804      	ldr	r0, [pc, #16]	; (8000360 <__do_global_dtors_aux+0x20>)
 800034e:	f3af 8000 	nop.w
 8000352:	2301      	movs	r3, #1
 8000354:	7023      	strb	r3, [r4, #0]
 8000356:	bd10      	pop	{r4, pc}
 8000358:	24000064 	.word	0x24000064
 800035c:	00000000 	.word	0x00000000
 8000360:	080015e0 	.word	0x080015e0

08000364 <frame_dummy>:
 8000364:	b508      	push	{r3, lr}
 8000366:	4b03      	ldr	r3, [pc, #12]	; (8000374 <frame_dummy+0x10>)
 8000368:	b11b      	cbz	r3, 8000372 <frame_dummy+0xe>
 800036a:	4903      	ldr	r1, [pc, #12]	; (8000378 <frame_dummy+0x14>)
 800036c:	4803      	ldr	r0, [pc, #12]	; (800037c <frame_dummy+0x18>)
 800036e:	f3af 8000 	nop.w
 8000372:	bd08      	pop	{r3, pc}
 8000374:	00000000 	.word	0x00000000
 8000378:	24000068 	.word	0x24000068
 800037c:	080015e0 	.word	0x080015e0

08000380 <main>:
// definitions


// functions
int main(void)
{
 8000380:	b580      	push	{r7, lr}
 8000382:	af00      	add	r7, sp, #0
	uart3_tx_init();
 8000384:	f000 f8b6 	bl	80004f4 <uart3_tx_init>

	while(1)
	{
		printf("Hello from STM32H750\n\r");
 8000388:	4801      	ldr	r0, [pc, #4]	; (8000390 <main+0x10>)
 800038a:	f000 f9a1 	bl	80006d0 <iprintf>
 800038e:	e7fb      	b.n	8000388 <main+0x8>
 8000390:	080015f8 	.word	0x080015f8

08000394 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000394:	b580      	push	{r7, lr}
 8000396:	b086      	sub	sp, #24
 8000398:	af00      	add	r7, sp, #0
 800039a:	60f8      	str	r0, [r7, #12]
 800039c:	60b9      	str	r1, [r7, #8]
 800039e:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003a0:	2300      	movs	r3, #0
 80003a2:	617b      	str	r3, [r7, #20]
 80003a4:	e00a      	b.n	80003bc <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80003a6:	f3af 8000 	nop.w
 80003aa:	4601      	mov	r1, r0
 80003ac:	68bb      	ldr	r3, [r7, #8]
 80003ae:	1c5a      	adds	r2, r3, #1
 80003b0:	60ba      	str	r2, [r7, #8]
 80003b2:	b2ca      	uxtb	r2, r1
 80003b4:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003b6:	697b      	ldr	r3, [r7, #20]
 80003b8:	3301      	adds	r3, #1
 80003ba:	617b      	str	r3, [r7, #20]
 80003bc:	697a      	ldr	r2, [r7, #20]
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	429a      	cmp	r2, r3
 80003c2:	dbf0      	blt.n	80003a6 <_read+0x12>
	}

return len;
 80003c4:	687b      	ldr	r3, [r7, #4]
}
 80003c6:	4618      	mov	r0, r3
 80003c8:	3718      	adds	r7, #24
 80003ca:	46bd      	mov	sp, r7
 80003cc:	bd80      	pop	{r7, pc}

080003ce <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80003ce:	b580      	push	{r7, lr}
 80003d0:	b086      	sub	sp, #24
 80003d2:	af00      	add	r7, sp, #0
 80003d4:	60f8      	str	r0, [r7, #12]
 80003d6:	60b9      	str	r1, [r7, #8]
 80003d8:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003da:	2300      	movs	r3, #0
 80003dc:	617b      	str	r3, [r7, #20]
 80003de:	e009      	b.n	80003f4 <_write+0x26>
	{
		__io_putchar(*ptr++);
 80003e0:	68bb      	ldr	r3, [r7, #8]
 80003e2:	1c5a      	adds	r2, r3, #1
 80003e4:	60ba      	str	r2, [r7, #8]
 80003e6:	781b      	ldrb	r3, [r3, #0]
 80003e8:	4618      	mov	r0, r3
 80003ea:	f000 f877 	bl	80004dc <__io_putchar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003ee:	697b      	ldr	r3, [r7, #20]
 80003f0:	3301      	adds	r3, #1
 80003f2:	617b      	str	r3, [r7, #20]
 80003f4:	697a      	ldr	r2, [r7, #20]
 80003f6:	687b      	ldr	r3, [r7, #4]
 80003f8:	429a      	cmp	r2, r3
 80003fa:	dbf1      	blt.n	80003e0 <_write+0x12>
	}
	return len;
 80003fc:	687b      	ldr	r3, [r7, #4]
}
 80003fe:	4618      	mov	r0, r3
 8000400:	3718      	adds	r7, #24
 8000402:	46bd      	mov	sp, r7
 8000404:	bd80      	pop	{r7, pc}

08000406 <_close>:

int _close(int file)
{
 8000406:	b480      	push	{r7}
 8000408:	b083      	sub	sp, #12
 800040a:	af00      	add	r7, sp, #0
 800040c:	6078      	str	r0, [r7, #4]
	return -1;
 800040e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 8000412:	4618      	mov	r0, r3
 8000414:	370c      	adds	r7, #12
 8000416:	46bd      	mov	sp, r7
 8000418:	f85d 7b04 	ldr.w	r7, [sp], #4
 800041c:	4770      	bx	lr

0800041e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800041e:	b480      	push	{r7}
 8000420:	b083      	sub	sp, #12
 8000422:	af00      	add	r7, sp, #0
 8000424:	6078      	str	r0, [r7, #4]
 8000426:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000428:	683b      	ldr	r3, [r7, #0]
 800042a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800042e:	605a      	str	r2, [r3, #4]
	return 0;
 8000430:	2300      	movs	r3, #0
}
 8000432:	4618      	mov	r0, r3
 8000434:	370c      	adds	r7, #12
 8000436:	46bd      	mov	sp, r7
 8000438:	f85d 7b04 	ldr.w	r7, [sp], #4
 800043c:	4770      	bx	lr

0800043e <_isatty>:

int _isatty(int file)
{
 800043e:	b480      	push	{r7}
 8000440:	b083      	sub	sp, #12
 8000442:	af00      	add	r7, sp, #0
 8000444:	6078      	str	r0, [r7, #4]
	return 1;
 8000446:	2301      	movs	r3, #1
}
 8000448:	4618      	mov	r0, r3
 800044a:	370c      	adds	r7, #12
 800044c:	46bd      	mov	sp, r7
 800044e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000452:	4770      	bx	lr

08000454 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000454:	b480      	push	{r7}
 8000456:	b085      	sub	sp, #20
 8000458:	af00      	add	r7, sp, #0
 800045a:	60f8      	str	r0, [r7, #12]
 800045c:	60b9      	str	r1, [r7, #8]
 800045e:	607a      	str	r2, [r7, #4]
	return 0;
 8000460:	2300      	movs	r3, #0
}
 8000462:	4618      	mov	r0, r3
 8000464:	3714      	adds	r7, #20
 8000466:	46bd      	mov	sp, r7
 8000468:	f85d 7b04 	ldr.w	r7, [sp], #4
 800046c:	4770      	bx	lr
	...

08000470 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000470:	b580      	push	{r7, lr}
 8000472:	b086      	sub	sp, #24
 8000474:	af00      	add	r7, sp, #0
 8000476:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000478:	4a14      	ldr	r2, [pc, #80]	; (80004cc <_sbrk+0x5c>)
 800047a:	4b15      	ldr	r3, [pc, #84]	; (80004d0 <_sbrk+0x60>)
 800047c:	1ad3      	subs	r3, r2, r3
 800047e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000480:	697b      	ldr	r3, [r7, #20]
 8000482:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000484:	4b13      	ldr	r3, [pc, #76]	; (80004d4 <_sbrk+0x64>)
 8000486:	681b      	ldr	r3, [r3, #0]
 8000488:	2b00      	cmp	r3, #0
 800048a:	d102      	bne.n	8000492 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800048c:	4b11      	ldr	r3, [pc, #68]	; (80004d4 <_sbrk+0x64>)
 800048e:	4a12      	ldr	r2, [pc, #72]	; (80004d8 <_sbrk+0x68>)
 8000490:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000492:	4b10      	ldr	r3, [pc, #64]	; (80004d4 <_sbrk+0x64>)
 8000494:	681a      	ldr	r2, [r3, #0]
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	4413      	add	r3, r2
 800049a:	693a      	ldr	r2, [r7, #16]
 800049c:	429a      	cmp	r2, r3
 800049e:	d207      	bcs.n	80004b0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80004a0:	f000 f8e4 	bl	800066c <__errno>
 80004a4:	4603      	mov	r3, r0
 80004a6:	220c      	movs	r2, #12
 80004a8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80004aa:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80004ae:	e009      	b.n	80004c4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80004b0:	4b08      	ldr	r3, [pc, #32]	; (80004d4 <_sbrk+0x64>)
 80004b2:	681b      	ldr	r3, [r3, #0]
 80004b4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80004b6:	4b07      	ldr	r3, [pc, #28]	; (80004d4 <_sbrk+0x64>)
 80004b8:	681a      	ldr	r2, [r3, #0]
 80004ba:	687b      	ldr	r3, [r7, #4]
 80004bc:	4413      	add	r3, r2
 80004be:	4a05      	ldr	r2, [pc, #20]	; (80004d4 <_sbrk+0x64>)
 80004c0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80004c2:	68fb      	ldr	r3, [r7, #12]
}
 80004c4:	4618      	mov	r0, r3
 80004c6:	3718      	adds	r7, #24
 80004c8:	46bd      	mov	sp, r7
 80004ca:	bd80      	pop	{r7, pc}
 80004cc:	24080000 	.word	0x24080000
 80004d0:	00000400 	.word	0x00000400
 80004d4:	24000080 	.word	0x24000080
 80004d8:	24000098 	.word	0x24000098

080004dc <__io_putchar>:
static int32_t compute_uart_baudrate(uint32_t periph_clock, uint32_t baudrate);
void uart3_write(int ch);
int  uart3_read(void);

int __io_putchar(int ch)
{
 80004dc:	b580      	push	{r7, lr}
 80004de:	b082      	sub	sp, #8
 80004e0:	af00      	add	r7, sp, #0
 80004e2:	6078      	str	r0, [r7, #4]
	uart3_write(ch);
 80004e4:	6878      	ldr	r0, [r7, #4]
 80004e6:	f000 f87f 	bl	80005e8 <uart3_write>
	return ch;
 80004ea:	687b      	ldr	r3, [r7, #4]
}
 80004ec:	4618      	mov	r0, r3
 80004ee:	3708      	adds	r7, #8
 80004f0:	46bd      	mov	sp, r7
 80004f2:	bd80      	pop	{r7, pc}

080004f4 <uart3_tx_init>:

void uart3_tx_init(void)
{
 80004f4:	b580      	push	{r7, lr}
 80004f6:	af00      	add	r7, sp, #0
	/* configure uart gpio pin */
	// enable clock access to gpiob
	RCC->AHB4ENR |= GPIOBEN;
 80004f8:	4b26      	ldr	r3, [pc, #152]	; (8000594 <uart3_tx_init+0xa0>)
 80004fa:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80004fe:	4a25      	ldr	r2, [pc, #148]	; (8000594 <uart3_tx_init+0xa0>)
 8000500:	f043 0302 	orr.w	r3, r3, #2
 8000504:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0

	// set PB10 to alternate function mode
	GPIOB->MODER &= ~(1u << 20);
 8000508:	4b23      	ldr	r3, [pc, #140]	; (8000598 <uart3_tx_init+0xa4>)
 800050a:	681b      	ldr	r3, [r3, #0]
 800050c:	4a22      	ldr	r2, [pc, #136]	; (8000598 <uart3_tx_init+0xa4>)
 800050e:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8000512:	6013      	str	r3, [r2, #0]
	GPIOB->MODER |= (1u << 21);
 8000514:	4b20      	ldr	r3, [pc, #128]	; (8000598 <uart3_tx_init+0xa4>)
 8000516:	681b      	ldr	r3, [r3, #0]
 8000518:	4a1f      	ldr	r2, [pc, #124]	; (8000598 <uart3_tx_init+0xa4>)
 800051a:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800051e:	6013      	str	r3, [r2, #0]

	// set PB10 to alternate function type to UART_TX (AF7)
	GPIOB->AFR[1] |= (1u << 8);
 8000520:	4b1d      	ldr	r3, [pc, #116]	; (8000598 <uart3_tx_init+0xa4>)
 8000522:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000524:	4a1c      	ldr	r2, [pc, #112]	; (8000598 <uart3_tx_init+0xa4>)
 8000526:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800052a:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOB->AFR[1] |= (1u << 9);
 800052c:	4b1a      	ldr	r3, [pc, #104]	; (8000598 <uart3_tx_init+0xa4>)
 800052e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000530:	4a19      	ldr	r2, [pc, #100]	; (8000598 <uart3_tx_init+0xa4>)
 8000532:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000536:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOB->AFR[1] |= (1u << 10);
 8000538:	4b17      	ldr	r3, [pc, #92]	; (8000598 <uart3_tx_init+0xa4>)
 800053a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800053c:	4a16      	ldr	r2, [pc, #88]	; (8000598 <uart3_tx_init+0xa4>)
 800053e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000542:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOB->AFR[1] &= ~(1u << 11);
 8000544:	4b14      	ldr	r3, [pc, #80]	; (8000598 <uart3_tx_init+0xa4>)
 8000546:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000548:	4a13      	ldr	r2, [pc, #76]	; (8000598 <uart3_tx_init+0xa4>)
 800054a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800054e:	6253      	str	r3, [r2, #36]	; 0x24


	/* Configure the UART module */
	// enable clock access to uart3
	RCC->APB1LENR |= UART3EN;
 8000550:	4b10      	ldr	r3, [pc, #64]	; (8000594 <uart3_tx_init+0xa0>)
 8000552:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8000556:	4a0f      	ldr	r2, [pc, #60]	; (8000594 <uart3_tx_init+0xa0>)
 8000558:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800055c:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8

	// when configuring usart it should be disabled
	USART3->CR1 &= ~(CR1_UE);
 8000560:	4b0e      	ldr	r3, [pc, #56]	; (800059c <uart3_tx_init+0xa8>)
 8000562:	681b      	ldr	r3, [r3, #0]
 8000564:	4a0d      	ldr	r2, [pc, #52]	; (800059c <uart3_tx_init+0xa8>)
 8000566:	f023 0301 	bic.w	r3, r3, #1
 800056a:	6013      	str	r3, [r2, #0]

	// configure baudrate
	uart_set_baudrate(USART3, APB1_CLK, UART_BAUDRATE);
 800056c:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8000570:	490b      	ldr	r1, [pc, #44]	; (80005a0 <uart3_tx_init+0xac>)
 8000572:	480a      	ldr	r0, [pc, #40]	; (800059c <uart3_tx_init+0xa8>)
 8000574:	f000 f816 	bl	80005a4 <uart_set_baudrate>

	// configure transfer direction
	USART3->CR1 |= CR1_TE;
 8000578:	4b08      	ldr	r3, [pc, #32]	; (800059c <uart3_tx_init+0xa8>)
 800057a:	681b      	ldr	r3, [r3, #0]
 800057c:	4a07      	ldr	r2, [pc, #28]	; (800059c <uart3_tx_init+0xa8>)
 800057e:	f043 0308 	orr.w	r3, r3, #8
 8000582:	6013      	str	r3, [r2, #0]

	// enable uart module
	USART3->CR1 |= CR1_UE;
 8000584:	4b05      	ldr	r3, [pc, #20]	; (800059c <uart3_tx_init+0xa8>)
 8000586:	681b      	ldr	r3, [r3, #0]
 8000588:	4a04      	ldr	r2, [pc, #16]	; (800059c <uart3_tx_init+0xa8>)
 800058a:	f043 0301 	orr.w	r3, r3, #1
 800058e:	6013      	str	r3, [r2, #0]
}
 8000590:	bf00      	nop
 8000592:	bd80      	pop	{r7, pc}
 8000594:	58024400 	.word	0x58024400
 8000598:	58020400 	.word	0x58020400
 800059c:	40004800 	.word	0x40004800
 80005a0:	03d09000 	.word	0x03d09000

080005a4 <uart_set_baudrate>:
	// enable uart module
	USART3->CR1 |= CR1_UE;
}

static void uart_set_baudrate(USART_TypeDef *USARTx, uint32_t periph_clock, uint32_t baudrate)
{
 80005a4:	b580      	push	{r7, lr}
 80005a6:	b084      	sub	sp, #16
 80005a8:	af00      	add	r7, sp, #0
 80005aa:	60f8      	str	r0, [r7, #12]
 80005ac:	60b9      	str	r1, [r7, #8]
 80005ae:	607a      	str	r2, [r7, #4]
	USARTx->BRR = compute_uart_baudrate(periph_clock, baudrate);
 80005b0:	6879      	ldr	r1, [r7, #4]
 80005b2:	68b8      	ldr	r0, [r7, #8]
 80005b4:	f000 f808 	bl	80005c8 <compute_uart_baudrate>
 80005b8:	4603      	mov	r3, r0
 80005ba:	461a      	mov	r2, r3
 80005bc:	68fb      	ldr	r3, [r7, #12]
 80005be:	60da      	str	r2, [r3, #12]
}
 80005c0:	bf00      	nop
 80005c2:	3710      	adds	r7, #16
 80005c4:	46bd      	mov	sp, r7
 80005c6:	bd80      	pop	{r7, pc}

080005c8 <compute_uart_baudrate>:

static int32_t compute_uart_baudrate(uint32_t periph_clock, uint32_t baudrate)
{
 80005c8:	b480      	push	{r7}
 80005ca:	b083      	sub	sp, #12
 80005cc:	af00      	add	r7, sp, #0
 80005ce:	6078      	str	r0, [r7, #4]
 80005d0:	6039      	str	r1, [r7, #0]
	return (periph_clock/baudrate);
 80005d2:	687a      	ldr	r2, [r7, #4]
 80005d4:	683b      	ldr	r3, [r7, #0]
 80005d6:	fbb2 f3f3 	udiv	r3, r2, r3
}
 80005da:	4618      	mov	r0, r3
 80005dc:	370c      	adds	r7, #12
 80005de:	46bd      	mov	sp, r7
 80005e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005e4:	4770      	bx	lr
	...

080005e8 <uart3_write>:

void uart3_write(int ch)
{
 80005e8:	b480      	push	{r7}
 80005ea:	b083      	sub	sp, #12
 80005ec:	af00      	add	r7, sp, #0
 80005ee:	6078      	str	r0, [r7, #4]
	// make sure transmit data register is empty
	while( !(USART3->ISR & SR_TXE) ) {}
 80005f0:	bf00      	nop
 80005f2:	4b08      	ldr	r3, [pc, #32]	; (8000614 <uart3_write+0x2c>)
 80005f4:	69db      	ldr	r3, [r3, #28]
 80005f6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80005fa:	2b00      	cmp	r3, #0
 80005fc:	d0f9      	beq.n	80005f2 <uart3_write+0xa>

	// write to transmit data register
	USART3->TDR = (ch & 0xFF);
 80005fe:	687b      	ldr	r3, [r7, #4]
 8000600:	4a04      	ldr	r2, [pc, #16]	; (8000614 <uart3_write+0x2c>)
 8000602:	b2db      	uxtb	r3, r3
 8000604:	6293      	str	r3, [r2, #40]	; 0x28
}
 8000606:	bf00      	nop
 8000608:	370c      	adds	r7, #12
 800060a:	46bd      	mov	sp, r7
 800060c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000610:	4770      	bx	lr
 8000612:	bf00      	nop
 8000614:	40004800 	.word	0x40004800

08000618 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000618:	480d      	ldr	r0, [pc, #52]	; (8000650 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800061a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800061c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000620:	480c      	ldr	r0, [pc, #48]	; (8000654 <LoopForever+0x6>)
  ldr r1, =_edata
 8000622:	490d      	ldr	r1, [pc, #52]	; (8000658 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000624:	4a0d      	ldr	r2, [pc, #52]	; (800065c <LoopForever+0xe>)
  movs r3, #0
 8000626:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000628:	e002      	b.n	8000630 <LoopCopyDataInit>

0800062a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800062a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800062c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800062e:	3304      	adds	r3, #4

08000630 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000630:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000632:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000634:	d3f9      	bcc.n	800062a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000636:	4a0a      	ldr	r2, [pc, #40]	; (8000660 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000638:	4c0a      	ldr	r4, [pc, #40]	; (8000664 <LoopForever+0x16>)
  movs r3, #0
 800063a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800063c:	e001      	b.n	8000642 <LoopFillZerobss>

0800063e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800063e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000640:	3204      	adds	r2, #4

08000642 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000642:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000644:	d3fb      	bcc.n	800063e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000646:	f000 f817 	bl	8000678 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800064a:	f7ff fe99 	bl	8000380 <main>

0800064e <LoopForever>:

LoopForever:
    b LoopForever
 800064e:	e7fe      	b.n	800064e <LoopForever>
  ldr   r0, =_estack
 8000650:	24080000 	.word	0x24080000
  ldr r0, =_sdata
 8000654:	24000000 	.word	0x24000000
  ldr r1, =_edata
 8000658:	24000064 	.word	0x24000064
  ldr r2, =_sidata
 800065c:	080016b0 	.word	0x080016b0
  ldr r2, =_sbss
 8000660:	24000064 	.word	0x24000064
  ldr r4, =_ebss
 8000664:	24000094 	.word	0x24000094

08000668 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000668:	e7fe      	b.n	8000668 <ADC1_2_IRQHandler>
	...

0800066c <__errno>:
 800066c:	4b01      	ldr	r3, [pc, #4]	; (8000674 <__errno+0x8>)
 800066e:	6818      	ldr	r0, [r3, #0]
 8000670:	4770      	bx	lr
 8000672:	bf00      	nop
 8000674:	24000000 	.word	0x24000000

08000678 <__libc_init_array>:
 8000678:	b570      	push	{r4, r5, r6, lr}
 800067a:	4d0d      	ldr	r5, [pc, #52]	; (80006b0 <__libc_init_array+0x38>)
 800067c:	4c0d      	ldr	r4, [pc, #52]	; (80006b4 <__libc_init_array+0x3c>)
 800067e:	1b64      	subs	r4, r4, r5
 8000680:	10a4      	asrs	r4, r4, #2
 8000682:	2600      	movs	r6, #0
 8000684:	42a6      	cmp	r6, r4
 8000686:	d109      	bne.n	800069c <__libc_init_array+0x24>
 8000688:	4d0b      	ldr	r5, [pc, #44]	; (80006b8 <__libc_init_array+0x40>)
 800068a:	4c0c      	ldr	r4, [pc, #48]	; (80006bc <__libc_init_array+0x44>)
 800068c:	f000 ffa8 	bl	80015e0 <_init>
 8000690:	1b64      	subs	r4, r4, r5
 8000692:	10a4      	asrs	r4, r4, #2
 8000694:	2600      	movs	r6, #0
 8000696:	42a6      	cmp	r6, r4
 8000698:	d105      	bne.n	80006a6 <__libc_init_array+0x2e>
 800069a:	bd70      	pop	{r4, r5, r6, pc}
 800069c:	f855 3b04 	ldr.w	r3, [r5], #4
 80006a0:	4798      	blx	r3
 80006a2:	3601      	adds	r6, #1
 80006a4:	e7ee      	b.n	8000684 <__libc_init_array+0xc>
 80006a6:	f855 3b04 	ldr.w	r3, [r5], #4
 80006aa:	4798      	blx	r3
 80006ac:	3601      	adds	r6, #1
 80006ae:	e7f2      	b.n	8000696 <__libc_init_array+0x1e>
 80006b0:	080016a8 	.word	0x080016a8
 80006b4:	080016a8 	.word	0x080016a8
 80006b8:	080016a8 	.word	0x080016a8
 80006bc:	080016ac 	.word	0x080016ac

080006c0 <memset>:
 80006c0:	4402      	add	r2, r0
 80006c2:	4603      	mov	r3, r0
 80006c4:	4293      	cmp	r3, r2
 80006c6:	d100      	bne.n	80006ca <memset+0xa>
 80006c8:	4770      	bx	lr
 80006ca:	f803 1b01 	strb.w	r1, [r3], #1
 80006ce:	e7f9      	b.n	80006c4 <memset+0x4>

080006d0 <iprintf>:
 80006d0:	b40f      	push	{r0, r1, r2, r3}
 80006d2:	4b0a      	ldr	r3, [pc, #40]	; (80006fc <iprintf+0x2c>)
 80006d4:	b513      	push	{r0, r1, r4, lr}
 80006d6:	681c      	ldr	r4, [r3, #0]
 80006d8:	b124      	cbz	r4, 80006e4 <iprintf+0x14>
 80006da:	69a3      	ldr	r3, [r4, #24]
 80006dc:	b913      	cbnz	r3, 80006e4 <iprintf+0x14>
 80006de:	4620      	mov	r0, r4
 80006e0:	f000 f866 	bl	80007b0 <__sinit>
 80006e4:	ab05      	add	r3, sp, #20
 80006e6:	9a04      	ldr	r2, [sp, #16]
 80006e8:	68a1      	ldr	r1, [r4, #8]
 80006ea:	9301      	str	r3, [sp, #4]
 80006ec:	4620      	mov	r0, r4
 80006ee:	f000 f9bd 	bl	8000a6c <_vfiprintf_r>
 80006f2:	b002      	add	sp, #8
 80006f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006f8:	b004      	add	sp, #16
 80006fa:	4770      	bx	lr
 80006fc:	24000000 	.word	0x24000000

08000700 <std>:
 8000700:	2300      	movs	r3, #0
 8000702:	b510      	push	{r4, lr}
 8000704:	4604      	mov	r4, r0
 8000706:	e9c0 3300 	strd	r3, r3, [r0]
 800070a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800070e:	6083      	str	r3, [r0, #8]
 8000710:	8181      	strh	r1, [r0, #12]
 8000712:	6643      	str	r3, [r0, #100]	; 0x64
 8000714:	81c2      	strh	r2, [r0, #14]
 8000716:	6183      	str	r3, [r0, #24]
 8000718:	4619      	mov	r1, r3
 800071a:	2208      	movs	r2, #8
 800071c:	305c      	adds	r0, #92	; 0x5c
 800071e:	f7ff ffcf 	bl	80006c0 <memset>
 8000722:	4b05      	ldr	r3, [pc, #20]	; (8000738 <std+0x38>)
 8000724:	6263      	str	r3, [r4, #36]	; 0x24
 8000726:	4b05      	ldr	r3, [pc, #20]	; (800073c <std+0x3c>)
 8000728:	62a3      	str	r3, [r4, #40]	; 0x28
 800072a:	4b05      	ldr	r3, [pc, #20]	; (8000740 <std+0x40>)
 800072c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800072e:	4b05      	ldr	r3, [pc, #20]	; (8000744 <std+0x44>)
 8000730:	6224      	str	r4, [r4, #32]
 8000732:	6323      	str	r3, [r4, #48]	; 0x30
 8000734:	bd10      	pop	{r4, pc}
 8000736:	bf00      	nop
 8000738:	08000ce9 	.word	0x08000ce9
 800073c:	08000d0b 	.word	0x08000d0b
 8000740:	08000d43 	.word	0x08000d43
 8000744:	08000d67 	.word	0x08000d67

08000748 <_cleanup_r>:
 8000748:	4901      	ldr	r1, [pc, #4]	; (8000750 <_cleanup_r+0x8>)
 800074a:	f000 b8af 	b.w	80008ac <_fwalk_reent>
 800074e:	bf00      	nop
 8000750:	08001041 	.word	0x08001041

08000754 <__sfmoreglue>:
 8000754:	b570      	push	{r4, r5, r6, lr}
 8000756:	2368      	movs	r3, #104	; 0x68
 8000758:	1e4d      	subs	r5, r1, #1
 800075a:	435d      	muls	r5, r3
 800075c:	460e      	mov	r6, r1
 800075e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000762:	f000 f8e5 	bl	8000930 <_malloc_r>
 8000766:	4604      	mov	r4, r0
 8000768:	b140      	cbz	r0, 800077c <__sfmoreglue+0x28>
 800076a:	2100      	movs	r1, #0
 800076c:	e9c0 1600 	strd	r1, r6, [r0]
 8000770:	300c      	adds	r0, #12
 8000772:	60a0      	str	r0, [r4, #8]
 8000774:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000778:	f7ff ffa2 	bl	80006c0 <memset>
 800077c:	4620      	mov	r0, r4
 800077e:	bd70      	pop	{r4, r5, r6, pc}

08000780 <__sfp_lock_acquire>:
 8000780:	4801      	ldr	r0, [pc, #4]	; (8000788 <__sfp_lock_acquire+0x8>)
 8000782:	f000 b8b3 	b.w	80008ec <__retarget_lock_acquire_recursive>
 8000786:	bf00      	nop
 8000788:	24000085 	.word	0x24000085

0800078c <__sfp_lock_release>:
 800078c:	4801      	ldr	r0, [pc, #4]	; (8000794 <__sfp_lock_release+0x8>)
 800078e:	f000 b8ae 	b.w	80008ee <__retarget_lock_release_recursive>
 8000792:	bf00      	nop
 8000794:	24000085 	.word	0x24000085

08000798 <__sinit_lock_acquire>:
 8000798:	4801      	ldr	r0, [pc, #4]	; (80007a0 <__sinit_lock_acquire+0x8>)
 800079a:	f000 b8a7 	b.w	80008ec <__retarget_lock_acquire_recursive>
 800079e:	bf00      	nop
 80007a0:	24000086 	.word	0x24000086

080007a4 <__sinit_lock_release>:
 80007a4:	4801      	ldr	r0, [pc, #4]	; (80007ac <__sinit_lock_release+0x8>)
 80007a6:	f000 b8a2 	b.w	80008ee <__retarget_lock_release_recursive>
 80007aa:	bf00      	nop
 80007ac:	24000086 	.word	0x24000086

080007b0 <__sinit>:
 80007b0:	b510      	push	{r4, lr}
 80007b2:	4604      	mov	r4, r0
 80007b4:	f7ff fff0 	bl	8000798 <__sinit_lock_acquire>
 80007b8:	69a3      	ldr	r3, [r4, #24]
 80007ba:	b11b      	cbz	r3, 80007c4 <__sinit+0x14>
 80007bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80007c0:	f7ff bff0 	b.w	80007a4 <__sinit_lock_release>
 80007c4:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80007c8:	6523      	str	r3, [r4, #80]	; 0x50
 80007ca:	4b13      	ldr	r3, [pc, #76]	; (8000818 <__sinit+0x68>)
 80007cc:	4a13      	ldr	r2, [pc, #76]	; (800081c <__sinit+0x6c>)
 80007ce:	681b      	ldr	r3, [r3, #0]
 80007d0:	62a2      	str	r2, [r4, #40]	; 0x28
 80007d2:	42a3      	cmp	r3, r4
 80007d4:	bf04      	itt	eq
 80007d6:	2301      	moveq	r3, #1
 80007d8:	61a3      	streq	r3, [r4, #24]
 80007da:	4620      	mov	r0, r4
 80007dc:	f000 f820 	bl	8000820 <__sfp>
 80007e0:	6060      	str	r0, [r4, #4]
 80007e2:	4620      	mov	r0, r4
 80007e4:	f000 f81c 	bl	8000820 <__sfp>
 80007e8:	60a0      	str	r0, [r4, #8]
 80007ea:	4620      	mov	r0, r4
 80007ec:	f000 f818 	bl	8000820 <__sfp>
 80007f0:	2200      	movs	r2, #0
 80007f2:	60e0      	str	r0, [r4, #12]
 80007f4:	2104      	movs	r1, #4
 80007f6:	6860      	ldr	r0, [r4, #4]
 80007f8:	f7ff ff82 	bl	8000700 <std>
 80007fc:	68a0      	ldr	r0, [r4, #8]
 80007fe:	2201      	movs	r2, #1
 8000800:	2109      	movs	r1, #9
 8000802:	f7ff ff7d 	bl	8000700 <std>
 8000806:	68e0      	ldr	r0, [r4, #12]
 8000808:	2202      	movs	r2, #2
 800080a:	2112      	movs	r1, #18
 800080c:	f7ff ff78 	bl	8000700 <std>
 8000810:	2301      	movs	r3, #1
 8000812:	61a3      	str	r3, [r4, #24]
 8000814:	e7d2      	b.n	80007bc <__sinit+0xc>
 8000816:	bf00      	nop
 8000818:	08001610 	.word	0x08001610
 800081c:	08000749 	.word	0x08000749

08000820 <__sfp>:
 8000820:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000822:	4607      	mov	r7, r0
 8000824:	f7ff ffac 	bl	8000780 <__sfp_lock_acquire>
 8000828:	4b1e      	ldr	r3, [pc, #120]	; (80008a4 <__sfp+0x84>)
 800082a:	681e      	ldr	r6, [r3, #0]
 800082c:	69b3      	ldr	r3, [r6, #24]
 800082e:	b913      	cbnz	r3, 8000836 <__sfp+0x16>
 8000830:	4630      	mov	r0, r6
 8000832:	f7ff ffbd 	bl	80007b0 <__sinit>
 8000836:	3648      	adds	r6, #72	; 0x48
 8000838:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800083c:	3b01      	subs	r3, #1
 800083e:	d503      	bpl.n	8000848 <__sfp+0x28>
 8000840:	6833      	ldr	r3, [r6, #0]
 8000842:	b30b      	cbz	r3, 8000888 <__sfp+0x68>
 8000844:	6836      	ldr	r6, [r6, #0]
 8000846:	e7f7      	b.n	8000838 <__sfp+0x18>
 8000848:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800084c:	b9d5      	cbnz	r5, 8000884 <__sfp+0x64>
 800084e:	4b16      	ldr	r3, [pc, #88]	; (80008a8 <__sfp+0x88>)
 8000850:	60e3      	str	r3, [r4, #12]
 8000852:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000856:	6665      	str	r5, [r4, #100]	; 0x64
 8000858:	f000 f847 	bl	80008ea <__retarget_lock_init_recursive>
 800085c:	f7ff ff96 	bl	800078c <__sfp_lock_release>
 8000860:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000864:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000868:	6025      	str	r5, [r4, #0]
 800086a:	61a5      	str	r5, [r4, #24]
 800086c:	2208      	movs	r2, #8
 800086e:	4629      	mov	r1, r5
 8000870:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000874:	f7ff ff24 	bl	80006c0 <memset>
 8000878:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800087c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000880:	4620      	mov	r0, r4
 8000882:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000884:	3468      	adds	r4, #104	; 0x68
 8000886:	e7d9      	b.n	800083c <__sfp+0x1c>
 8000888:	2104      	movs	r1, #4
 800088a:	4638      	mov	r0, r7
 800088c:	f7ff ff62 	bl	8000754 <__sfmoreglue>
 8000890:	4604      	mov	r4, r0
 8000892:	6030      	str	r0, [r6, #0]
 8000894:	2800      	cmp	r0, #0
 8000896:	d1d5      	bne.n	8000844 <__sfp+0x24>
 8000898:	f7ff ff78 	bl	800078c <__sfp_lock_release>
 800089c:	230c      	movs	r3, #12
 800089e:	603b      	str	r3, [r7, #0]
 80008a0:	e7ee      	b.n	8000880 <__sfp+0x60>
 80008a2:	bf00      	nop
 80008a4:	08001610 	.word	0x08001610
 80008a8:	ffff0001 	.word	0xffff0001

080008ac <_fwalk_reent>:
 80008ac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80008b0:	4606      	mov	r6, r0
 80008b2:	4688      	mov	r8, r1
 80008b4:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80008b8:	2700      	movs	r7, #0
 80008ba:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80008be:	f1b9 0901 	subs.w	r9, r9, #1
 80008c2:	d505      	bpl.n	80008d0 <_fwalk_reent+0x24>
 80008c4:	6824      	ldr	r4, [r4, #0]
 80008c6:	2c00      	cmp	r4, #0
 80008c8:	d1f7      	bne.n	80008ba <_fwalk_reent+0xe>
 80008ca:	4638      	mov	r0, r7
 80008cc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80008d0:	89ab      	ldrh	r3, [r5, #12]
 80008d2:	2b01      	cmp	r3, #1
 80008d4:	d907      	bls.n	80008e6 <_fwalk_reent+0x3a>
 80008d6:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80008da:	3301      	adds	r3, #1
 80008dc:	d003      	beq.n	80008e6 <_fwalk_reent+0x3a>
 80008de:	4629      	mov	r1, r5
 80008e0:	4630      	mov	r0, r6
 80008e2:	47c0      	blx	r8
 80008e4:	4307      	orrs	r7, r0
 80008e6:	3568      	adds	r5, #104	; 0x68
 80008e8:	e7e9      	b.n	80008be <_fwalk_reent+0x12>

080008ea <__retarget_lock_init_recursive>:
 80008ea:	4770      	bx	lr

080008ec <__retarget_lock_acquire_recursive>:
 80008ec:	4770      	bx	lr

080008ee <__retarget_lock_release_recursive>:
 80008ee:	4770      	bx	lr

080008f0 <sbrk_aligned>:
 80008f0:	b570      	push	{r4, r5, r6, lr}
 80008f2:	4e0e      	ldr	r6, [pc, #56]	; (800092c <sbrk_aligned+0x3c>)
 80008f4:	460c      	mov	r4, r1
 80008f6:	6831      	ldr	r1, [r6, #0]
 80008f8:	4605      	mov	r5, r0
 80008fa:	b911      	cbnz	r1, 8000902 <sbrk_aligned+0x12>
 80008fc:	f000 f9e4 	bl	8000cc8 <_sbrk_r>
 8000900:	6030      	str	r0, [r6, #0]
 8000902:	4621      	mov	r1, r4
 8000904:	4628      	mov	r0, r5
 8000906:	f000 f9df 	bl	8000cc8 <_sbrk_r>
 800090a:	1c43      	adds	r3, r0, #1
 800090c:	d00a      	beq.n	8000924 <sbrk_aligned+0x34>
 800090e:	1cc4      	adds	r4, r0, #3
 8000910:	f024 0403 	bic.w	r4, r4, #3
 8000914:	42a0      	cmp	r0, r4
 8000916:	d007      	beq.n	8000928 <sbrk_aligned+0x38>
 8000918:	1a21      	subs	r1, r4, r0
 800091a:	4628      	mov	r0, r5
 800091c:	f000 f9d4 	bl	8000cc8 <_sbrk_r>
 8000920:	3001      	adds	r0, #1
 8000922:	d101      	bne.n	8000928 <sbrk_aligned+0x38>
 8000924:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8000928:	4620      	mov	r0, r4
 800092a:	bd70      	pop	{r4, r5, r6, pc}
 800092c:	2400008c 	.word	0x2400008c

08000930 <_malloc_r>:
 8000930:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000934:	1ccd      	adds	r5, r1, #3
 8000936:	f025 0503 	bic.w	r5, r5, #3
 800093a:	3508      	adds	r5, #8
 800093c:	2d0c      	cmp	r5, #12
 800093e:	bf38      	it	cc
 8000940:	250c      	movcc	r5, #12
 8000942:	2d00      	cmp	r5, #0
 8000944:	4607      	mov	r7, r0
 8000946:	db01      	blt.n	800094c <_malloc_r+0x1c>
 8000948:	42a9      	cmp	r1, r5
 800094a:	d905      	bls.n	8000958 <_malloc_r+0x28>
 800094c:	230c      	movs	r3, #12
 800094e:	603b      	str	r3, [r7, #0]
 8000950:	2600      	movs	r6, #0
 8000952:	4630      	mov	r0, r6
 8000954:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000958:	4e2e      	ldr	r6, [pc, #184]	; (8000a14 <_malloc_r+0xe4>)
 800095a:	f000 fc25 	bl	80011a8 <__malloc_lock>
 800095e:	6833      	ldr	r3, [r6, #0]
 8000960:	461c      	mov	r4, r3
 8000962:	bb34      	cbnz	r4, 80009b2 <_malloc_r+0x82>
 8000964:	4629      	mov	r1, r5
 8000966:	4638      	mov	r0, r7
 8000968:	f7ff ffc2 	bl	80008f0 <sbrk_aligned>
 800096c:	1c43      	adds	r3, r0, #1
 800096e:	4604      	mov	r4, r0
 8000970:	d14d      	bne.n	8000a0e <_malloc_r+0xde>
 8000972:	6834      	ldr	r4, [r6, #0]
 8000974:	4626      	mov	r6, r4
 8000976:	2e00      	cmp	r6, #0
 8000978:	d140      	bne.n	80009fc <_malloc_r+0xcc>
 800097a:	6823      	ldr	r3, [r4, #0]
 800097c:	4631      	mov	r1, r6
 800097e:	4638      	mov	r0, r7
 8000980:	eb04 0803 	add.w	r8, r4, r3
 8000984:	f000 f9a0 	bl	8000cc8 <_sbrk_r>
 8000988:	4580      	cmp	r8, r0
 800098a:	d13a      	bne.n	8000a02 <_malloc_r+0xd2>
 800098c:	6823      	ldr	r3, [r4, #0]
 800098e:	3503      	adds	r5, #3
 8000990:	1aed      	subs	r5, r5, r3
 8000992:	f025 0503 	bic.w	r5, r5, #3
 8000996:	3508      	adds	r5, #8
 8000998:	2d0c      	cmp	r5, #12
 800099a:	bf38      	it	cc
 800099c:	250c      	movcc	r5, #12
 800099e:	4629      	mov	r1, r5
 80009a0:	4638      	mov	r0, r7
 80009a2:	f7ff ffa5 	bl	80008f0 <sbrk_aligned>
 80009a6:	3001      	adds	r0, #1
 80009a8:	d02b      	beq.n	8000a02 <_malloc_r+0xd2>
 80009aa:	6823      	ldr	r3, [r4, #0]
 80009ac:	442b      	add	r3, r5
 80009ae:	6023      	str	r3, [r4, #0]
 80009b0:	e00e      	b.n	80009d0 <_malloc_r+0xa0>
 80009b2:	6822      	ldr	r2, [r4, #0]
 80009b4:	1b52      	subs	r2, r2, r5
 80009b6:	d41e      	bmi.n	80009f6 <_malloc_r+0xc6>
 80009b8:	2a0b      	cmp	r2, #11
 80009ba:	d916      	bls.n	80009ea <_malloc_r+0xba>
 80009bc:	1961      	adds	r1, r4, r5
 80009be:	42a3      	cmp	r3, r4
 80009c0:	6025      	str	r5, [r4, #0]
 80009c2:	bf18      	it	ne
 80009c4:	6059      	strne	r1, [r3, #4]
 80009c6:	6863      	ldr	r3, [r4, #4]
 80009c8:	bf08      	it	eq
 80009ca:	6031      	streq	r1, [r6, #0]
 80009cc:	5162      	str	r2, [r4, r5]
 80009ce:	604b      	str	r3, [r1, #4]
 80009d0:	4638      	mov	r0, r7
 80009d2:	f104 060b 	add.w	r6, r4, #11
 80009d6:	f000 fbed 	bl	80011b4 <__malloc_unlock>
 80009da:	f026 0607 	bic.w	r6, r6, #7
 80009de:	1d23      	adds	r3, r4, #4
 80009e0:	1af2      	subs	r2, r6, r3
 80009e2:	d0b6      	beq.n	8000952 <_malloc_r+0x22>
 80009e4:	1b9b      	subs	r3, r3, r6
 80009e6:	50a3      	str	r3, [r4, r2]
 80009e8:	e7b3      	b.n	8000952 <_malloc_r+0x22>
 80009ea:	6862      	ldr	r2, [r4, #4]
 80009ec:	42a3      	cmp	r3, r4
 80009ee:	bf0c      	ite	eq
 80009f0:	6032      	streq	r2, [r6, #0]
 80009f2:	605a      	strne	r2, [r3, #4]
 80009f4:	e7ec      	b.n	80009d0 <_malloc_r+0xa0>
 80009f6:	4623      	mov	r3, r4
 80009f8:	6864      	ldr	r4, [r4, #4]
 80009fa:	e7b2      	b.n	8000962 <_malloc_r+0x32>
 80009fc:	4634      	mov	r4, r6
 80009fe:	6876      	ldr	r6, [r6, #4]
 8000a00:	e7b9      	b.n	8000976 <_malloc_r+0x46>
 8000a02:	230c      	movs	r3, #12
 8000a04:	603b      	str	r3, [r7, #0]
 8000a06:	4638      	mov	r0, r7
 8000a08:	f000 fbd4 	bl	80011b4 <__malloc_unlock>
 8000a0c:	e7a1      	b.n	8000952 <_malloc_r+0x22>
 8000a0e:	6025      	str	r5, [r4, #0]
 8000a10:	e7de      	b.n	80009d0 <_malloc_r+0xa0>
 8000a12:	bf00      	nop
 8000a14:	24000088 	.word	0x24000088

08000a18 <__sfputc_r>:
 8000a18:	6893      	ldr	r3, [r2, #8]
 8000a1a:	3b01      	subs	r3, #1
 8000a1c:	2b00      	cmp	r3, #0
 8000a1e:	b410      	push	{r4}
 8000a20:	6093      	str	r3, [r2, #8]
 8000a22:	da08      	bge.n	8000a36 <__sfputc_r+0x1e>
 8000a24:	6994      	ldr	r4, [r2, #24]
 8000a26:	42a3      	cmp	r3, r4
 8000a28:	db01      	blt.n	8000a2e <__sfputc_r+0x16>
 8000a2a:	290a      	cmp	r1, #10
 8000a2c:	d103      	bne.n	8000a36 <__sfputc_r+0x1e>
 8000a2e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000a32:	f000 b99d 	b.w	8000d70 <__swbuf_r>
 8000a36:	6813      	ldr	r3, [r2, #0]
 8000a38:	1c58      	adds	r0, r3, #1
 8000a3a:	6010      	str	r0, [r2, #0]
 8000a3c:	7019      	strb	r1, [r3, #0]
 8000a3e:	4608      	mov	r0, r1
 8000a40:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000a44:	4770      	bx	lr

08000a46 <__sfputs_r>:
 8000a46:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a48:	4606      	mov	r6, r0
 8000a4a:	460f      	mov	r7, r1
 8000a4c:	4614      	mov	r4, r2
 8000a4e:	18d5      	adds	r5, r2, r3
 8000a50:	42ac      	cmp	r4, r5
 8000a52:	d101      	bne.n	8000a58 <__sfputs_r+0x12>
 8000a54:	2000      	movs	r0, #0
 8000a56:	e007      	b.n	8000a68 <__sfputs_r+0x22>
 8000a58:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a5c:	463a      	mov	r2, r7
 8000a5e:	4630      	mov	r0, r6
 8000a60:	f7ff ffda 	bl	8000a18 <__sfputc_r>
 8000a64:	1c43      	adds	r3, r0, #1
 8000a66:	d1f3      	bne.n	8000a50 <__sfputs_r+0xa>
 8000a68:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000a6c <_vfiprintf_r>:
 8000a6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000a70:	460d      	mov	r5, r1
 8000a72:	b09d      	sub	sp, #116	; 0x74
 8000a74:	4614      	mov	r4, r2
 8000a76:	4698      	mov	r8, r3
 8000a78:	4606      	mov	r6, r0
 8000a7a:	b118      	cbz	r0, 8000a84 <_vfiprintf_r+0x18>
 8000a7c:	6983      	ldr	r3, [r0, #24]
 8000a7e:	b90b      	cbnz	r3, 8000a84 <_vfiprintf_r+0x18>
 8000a80:	f7ff fe96 	bl	80007b0 <__sinit>
 8000a84:	4b88      	ldr	r3, [pc, #544]	; (8000ca8 <_vfiprintf_r+0x23c>)
 8000a86:	429d      	cmp	r5, r3
 8000a88:	d11b      	bne.n	8000ac2 <_vfiprintf_r+0x56>
 8000a8a:	6875      	ldr	r5, [r6, #4]
 8000a8c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000a8e:	07d9      	lsls	r1, r3, #31
 8000a90:	d405      	bmi.n	8000a9e <_vfiprintf_r+0x32>
 8000a92:	89ab      	ldrh	r3, [r5, #12]
 8000a94:	059a      	lsls	r2, r3, #22
 8000a96:	d402      	bmi.n	8000a9e <_vfiprintf_r+0x32>
 8000a98:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000a9a:	f7ff ff27 	bl	80008ec <__retarget_lock_acquire_recursive>
 8000a9e:	89ab      	ldrh	r3, [r5, #12]
 8000aa0:	071b      	lsls	r3, r3, #28
 8000aa2:	d501      	bpl.n	8000aa8 <_vfiprintf_r+0x3c>
 8000aa4:	692b      	ldr	r3, [r5, #16]
 8000aa6:	b9eb      	cbnz	r3, 8000ae4 <_vfiprintf_r+0x78>
 8000aa8:	4629      	mov	r1, r5
 8000aaa:	4630      	mov	r0, r6
 8000aac:	f000 f9c4 	bl	8000e38 <__swsetup_r>
 8000ab0:	b1c0      	cbz	r0, 8000ae4 <_vfiprintf_r+0x78>
 8000ab2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000ab4:	07dc      	lsls	r4, r3, #31
 8000ab6:	d50e      	bpl.n	8000ad6 <_vfiprintf_r+0x6a>
 8000ab8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000abc:	b01d      	add	sp, #116	; 0x74
 8000abe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000ac2:	4b7a      	ldr	r3, [pc, #488]	; (8000cac <_vfiprintf_r+0x240>)
 8000ac4:	429d      	cmp	r5, r3
 8000ac6:	d101      	bne.n	8000acc <_vfiprintf_r+0x60>
 8000ac8:	68b5      	ldr	r5, [r6, #8]
 8000aca:	e7df      	b.n	8000a8c <_vfiprintf_r+0x20>
 8000acc:	4b78      	ldr	r3, [pc, #480]	; (8000cb0 <_vfiprintf_r+0x244>)
 8000ace:	429d      	cmp	r5, r3
 8000ad0:	bf08      	it	eq
 8000ad2:	68f5      	ldreq	r5, [r6, #12]
 8000ad4:	e7da      	b.n	8000a8c <_vfiprintf_r+0x20>
 8000ad6:	89ab      	ldrh	r3, [r5, #12]
 8000ad8:	0598      	lsls	r0, r3, #22
 8000ada:	d4ed      	bmi.n	8000ab8 <_vfiprintf_r+0x4c>
 8000adc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000ade:	f7ff ff06 	bl	80008ee <__retarget_lock_release_recursive>
 8000ae2:	e7e9      	b.n	8000ab8 <_vfiprintf_r+0x4c>
 8000ae4:	2300      	movs	r3, #0
 8000ae6:	9309      	str	r3, [sp, #36]	; 0x24
 8000ae8:	2320      	movs	r3, #32
 8000aea:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000aee:	f8cd 800c 	str.w	r8, [sp, #12]
 8000af2:	2330      	movs	r3, #48	; 0x30
 8000af4:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 8000cb4 <_vfiprintf_r+0x248>
 8000af8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000afc:	f04f 0901 	mov.w	r9, #1
 8000b00:	4623      	mov	r3, r4
 8000b02:	469a      	mov	sl, r3
 8000b04:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000b08:	b10a      	cbz	r2, 8000b0e <_vfiprintf_r+0xa2>
 8000b0a:	2a25      	cmp	r2, #37	; 0x25
 8000b0c:	d1f9      	bne.n	8000b02 <_vfiprintf_r+0x96>
 8000b0e:	ebba 0b04 	subs.w	fp, sl, r4
 8000b12:	d00b      	beq.n	8000b2c <_vfiprintf_r+0xc0>
 8000b14:	465b      	mov	r3, fp
 8000b16:	4622      	mov	r2, r4
 8000b18:	4629      	mov	r1, r5
 8000b1a:	4630      	mov	r0, r6
 8000b1c:	f7ff ff93 	bl	8000a46 <__sfputs_r>
 8000b20:	3001      	adds	r0, #1
 8000b22:	f000 80a9 	beq.w	8000c78 <_vfiprintf_r+0x20c>
 8000b26:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000b28:	445a      	add	r2, fp
 8000b2a:	9209      	str	r2, [sp, #36]	; 0x24
 8000b2c:	f89a 3000 	ldrb.w	r3, [sl]
 8000b30:	2b00      	cmp	r3, #0
 8000b32:	f000 80a1 	beq.w	8000c78 <_vfiprintf_r+0x20c>
 8000b36:	2300      	movs	r3, #0
 8000b38:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000b3c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000b40:	f10a 0a01 	add.w	sl, sl, #1
 8000b44:	9304      	str	r3, [sp, #16]
 8000b46:	9307      	str	r3, [sp, #28]
 8000b48:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000b4c:	931a      	str	r3, [sp, #104]	; 0x68
 8000b4e:	4654      	mov	r4, sl
 8000b50:	2205      	movs	r2, #5
 8000b52:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b56:	4857      	ldr	r0, [pc, #348]	; (8000cb4 <_vfiprintf_r+0x248>)
 8000b58:	f7ff fba2 	bl	80002a0 <memchr>
 8000b5c:	9a04      	ldr	r2, [sp, #16]
 8000b5e:	b9d8      	cbnz	r0, 8000b98 <_vfiprintf_r+0x12c>
 8000b60:	06d1      	lsls	r1, r2, #27
 8000b62:	bf44      	itt	mi
 8000b64:	2320      	movmi	r3, #32
 8000b66:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000b6a:	0713      	lsls	r3, r2, #28
 8000b6c:	bf44      	itt	mi
 8000b6e:	232b      	movmi	r3, #43	; 0x2b
 8000b70:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000b74:	f89a 3000 	ldrb.w	r3, [sl]
 8000b78:	2b2a      	cmp	r3, #42	; 0x2a
 8000b7a:	d015      	beq.n	8000ba8 <_vfiprintf_r+0x13c>
 8000b7c:	9a07      	ldr	r2, [sp, #28]
 8000b7e:	4654      	mov	r4, sl
 8000b80:	2000      	movs	r0, #0
 8000b82:	f04f 0c0a 	mov.w	ip, #10
 8000b86:	4621      	mov	r1, r4
 8000b88:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000b8c:	3b30      	subs	r3, #48	; 0x30
 8000b8e:	2b09      	cmp	r3, #9
 8000b90:	d94d      	bls.n	8000c2e <_vfiprintf_r+0x1c2>
 8000b92:	b1b0      	cbz	r0, 8000bc2 <_vfiprintf_r+0x156>
 8000b94:	9207      	str	r2, [sp, #28]
 8000b96:	e014      	b.n	8000bc2 <_vfiprintf_r+0x156>
 8000b98:	eba0 0308 	sub.w	r3, r0, r8
 8000b9c:	fa09 f303 	lsl.w	r3, r9, r3
 8000ba0:	4313      	orrs	r3, r2
 8000ba2:	9304      	str	r3, [sp, #16]
 8000ba4:	46a2      	mov	sl, r4
 8000ba6:	e7d2      	b.n	8000b4e <_vfiprintf_r+0xe2>
 8000ba8:	9b03      	ldr	r3, [sp, #12]
 8000baa:	1d19      	adds	r1, r3, #4
 8000bac:	681b      	ldr	r3, [r3, #0]
 8000bae:	9103      	str	r1, [sp, #12]
 8000bb0:	2b00      	cmp	r3, #0
 8000bb2:	bfbb      	ittet	lt
 8000bb4:	425b      	neglt	r3, r3
 8000bb6:	f042 0202 	orrlt.w	r2, r2, #2
 8000bba:	9307      	strge	r3, [sp, #28]
 8000bbc:	9307      	strlt	r3, [sp, #28]
 8000bbe:	bfb8      	it	lt
 8000bc0:	9204      	strlt	r2, [sp, #16]
 8000bc2:	7823      	ldrb	r3, [r4, #0]
 8000bc4:	2b2e      	cmp	r3, #46	; 0x2e
 8000bc6:	d10c      	bne.n	8000be2 <_vfiprintf_r+0x176>
 8000bc8:	7863      	ldrb	r3, [r4, #1]
 8000bca:	2b2a      	cmp	r3, #42	; 0x2a
 8000bcc:	d134      	bne.n	8000c38 <_vfiprintf_r+0x1cc>
 8000bce:	9b03      	ldr	r3, [sp, #12]
 8000bd0:	1d1a      	adds	r2, r3, #4
 8000bd2:	681b      	ldr	r3, [r3, #0]
 8000bd4:	9203      	str	r2, [sp, #12]
 8000bd6:	2b00      	cmp	r3, #0
 8000bd8:	bfb8      	it	lt
 8000bda:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8000bde:	3402      	adds	r4, #2
 8000be0:	9305      	str	r3, [sp, #20]
 8000be2:	f8df a0e0 	ldr.w	sl, [pc, #224]	; 8000cc4 <_vfiprintf_r+0x258>
 8000be6:	7821      	ldrb	r1, [r4, #0]
 8000be8:	2203      	movs	r2, #3
 8000bea:	4650      	mov	r0, sl
 8000bec:	f7ff fb58 	bl	80002a0 <memchr>
 8000bf0:	b138      	cbz	r0, 8000c02 <_vfiprintf_r+0x196>
 8000bf2:	9b04      	ldr	r3, [sp, #16]
 8000bf4:	eba0 000a 	sub.w	r0, r0, sl
 8000bf8:	2240      	movs	r2, #64	; 0x40
 8000bfa:	4082      	lsls	r2, r0
 8000bfc:	4313      	orrs	r3, r2
 8000bfe:	3401      	adds	r4, #1
 8000c00:	9304      	str	r3, [sp, #16]
 8000c02:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000c06:	482c      	ldr	r0, [pc, #176]	; (8000cb8 <_vfiprintf_r+0x24c>)
 8000c08:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000c0c:	2206      	movs	r2, #6
 8000c0e:	f7ff fb47 	bl	80002a0 <memchr>
 8000c12:	2800      	cmp	r0, #0
 8000c14:	d03f      	beq.n	8000c96 <_vfiprintf_r+0x22a>
 8000c16:	4b29      	ldr	r3, [pc, #164]	; (8000cbc <_vfiprintf_r+0x250>)
 8000c18:	bb1b      	cbnz	r3, 8000c62 <_vfiprintf_r+0x1f6>
 8000c1a:	9b03      	ldr	r3, [sp, #12]
 8000c1c:	3307      	adds	r3, #7
 8000c1e:	f023 0307 	bic.w	r3, r3, #7
 8000c22:	3308      	adds	r3, #8
 8000c24:	9303      	str	r3, [sp, #12]
 8000c26:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000c28:	443b      	add	r3, r7
 8000c2a:	9309      	str	r3, [sp, #36]	; 0x24
 8000c2c:	e768      	b.n	8000b00 <_vfiprintf_r+0x94>
 8000c2e:	fb0c 3202 	mla	r2, ip, r2, r3
 8000c32:	460c      	mov	r4, r1
 8000c34:	2001      	movs	r0, #1
 8000c36:	e7a6      	b.n	8000b86 <_vfiprintf_r+0x11a>
 8000c38:	2300      	movs	r3, #0
 8000c3a:	3401      	adds	r4, #1
 8000c3c:	9305      	str	r3, [sp, #20]
 8000c3e:	4619      	mov	r1, r3
 8000c40:	f04f 0c0a 	mov.w	ip, #10
 8000c44:	4620      	mov	r0, r4
 8000c46:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000c4a:	3a30      	subs	r2, #48	; 0x30
 8000c4c:	2a09      	cmp	r2, #9
 8000c4e:	d903      	bls.n	8000c58 <_vfiprintf_r+0x1ec>
 8000c50:	2b00      	cmp	r3, #0
 8000c52:	d0c6      	beq.n	8000be2 <_vfiprintf_r+0x176>
 8000c54:	9105      	str	r1, [sp, #20]
 8000c56:	e7c4      	b.n	8000be2 <_vfiprintf_r+0x176>
 8000c58:	fb0c 2101 	mla	r1, ip, r1, r2
 8000c5c:	4604      	mov	r4, r0
 8000c5e:	2301      	movs	r3, #1
 8000c60:	e7f0      	b.n	8000c44 <_vfiprintf_r+0x1d8>
 8000c62:	ab03      	add	r3, sp, #12
 8000c64:	9300      	str	r3, [sp, #0]
 8000c66:	462a      	mov	r2, r5
 8000c68:	4b15      	ldr	r3, [pc, #84]	; (8000cc0 <_vfiprintf_r+0x254>)
 8000c6a:	a904      	add	r1, sp, #16
 8000c6c:	4630      	mov	r0, r6
 8000c6e:	f3af 8000 	nop.w
 8000c72:	4607      	mov	r7, r0
 8000c74:	1c78      	adds	r0, r7, #1
 8000c76:	d1d6      	bne.n	8000c26 <_vfiprintf_r+0x1ba>
 8000c78:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000c7a:	07d9      	lsls	r1, r3, #31
 8000c7c:	d405      	bmi.n	8000c8a <_vfiprintf_r+0x21e>
 8000c7e:	89ab      	ldrh	r3, [r5, #12]
 8000c80:	059a      	lsls	r2, r3, #22
 8000c82:	d402      	bmi.n	8000c8a <_vfiprintf_r+0x21e>
 8000c84:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000c86:	f7ff fe32 	bl	80008ee <__retarget_lock_release_recursive>
 8000c8a:	89ab      	ldrh	r3, [r5, #12]
 8000c8c:	065b      	lsls	r3, r3, #25
 8000c8e:	f53f af13 	bmi.w	8000ab8 <_vfiprintf_r+0x4c>
 8000c92:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000c94:	e712      	b.n	8000abc <_vfiprintf_r+0x50>
 8000c96:	ab03      	add	r3, sp, #12
 8000c98:	9300      	str	r3, [sp, #0]
 8000c9a:	462a      	mov	r2, r5
 8000c9c:	4b08      	ldr	r3, [pc, #32]	; (8000cc0 <_vfiprintf_r+0x254>)
 8000c9e:	a904      	add	r1, sp, #16
 8000ca0:	4630      	mov	r0, r6
 8000ca2:	f000 fb47 	bl	8001334 <_printf_i>
 8000ca6:	e7e4      	b.n	8000c72 <_vfiprintf_r+0x206>
 8000ca8:	08001634 	.word	0x08001634
 8000cac:	08001654 	.word	0x08001654
 8000cb0:	08001614 	.word	0x08001614
 8000cb4:	08001674 	.word	0x08001674
 8000cb8:	0800167e 	.word	0x0800167e
 8000cbc:	00000000 	.word	0x00000000
 8000cc0:	08000a47 	.word	0x08000a47
 8000cc4:	0800167a 	.word	0x0800167a

08000cc8 <_sbrk_r>:
 8000cc8:	b538      	push	{r3, r4, r5, lr}
 8000cca:	4d06      	ldr	r5, [pc, #24]	; (8000ce4 <_sbrk_r+0x1c>)
 8000ccc:	2300      	movs	r3, #0
 8000cce:	4604      	mov	r4, r0
 8000cd0:	4608      	mov	r0, r1
 8000cd2:	602b      	str	r3, [r5, #0]
 8000cd4:	f7ff fbcc 	bl	8000470 <_sbrk>
 8000cd8:	1c43      	adds	r3, r0, #1
 8000cda:	d102      	bne.n	8000ce2 <_sbrk_r+0x1a>
 8000cdc:	682b      	ldr	r3, [r5, #0]
 8000cde:	b103      	cbz	r3, 8000ce2 <_sbrk_r+0x1a>
 8000ce0:	6023      	str	r3, [r4, #0]
 8000ce2:	bd38      	pop	{r3, r4, r5, pc}
 8000ce4:	24000090 	.word	0x24000090

08000ce8 <__sread>:
 8000ce8:	b510      	push	{r4, lr}
 8000cea:	460c      	mov	r4, r1
 8000cec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cf0:	f000 fc42 	bl	8001578 <_read_r>
 8000cf4:	2800      	cmp	r0, #0
 8000cf6:	bfab      	itete	ge
 8000cf8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000cfa:	89a3      	ldrhlt	r3, [r4, #12]
 8000cfc:	181b      	addge	r3, r3, r0
 8000cfe:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000d02:	bfac      	ite	ge
 8000d04:	6563      	strge	r3, [r4, #84]	; 0x54
 8000d06:	81a3      	strhlt	r3, [r4, #12]
 8000d08:	bd10      	pop	{r4, pc}

08000d0a <__swrite>:
 8000d0a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000d0e:	461f      	mov	r7, r3
 8000d10:	898b      	ldrh	r3, [r1, #12]
 8000d12:	05db      	lsls	r3, r3, #23
 8000d14:	4605      	mov	r5, r0
 8000d16:	460c      	mov	r4, r1
 8000d18:	4616      	mov	r6, r2
 8000d1a:	d505      	bpl.n	8000d28 <__swrite+0x1e>
 8000d1c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d20:	2302      	movs	r3, #2
 8000d22:	2200      	movs	r2, #0
 8000d24:	f000 f9c8 	bl	80010b8 <_lseek_r>
 8000d28:	89a3      	ldrh	r3, [r4, #12]
 8000d2a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000d2e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000d32:	81a3      	strh	r3, [r4, #12]
 8000d34:	4632      	mov	r2, r6
 8000d36:	463b      	mov	r3, r7
 8000d38:	4628      	mov	r0, r5
 8000d3a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000d3e:	f000 b869 	b.w	8000e14 <_write_r>

08000d42 <__sseek>:
 8000d42:	b510      	push	{r4, lr}
 8000d44:	460c      	mov	r4, r1
 8000d46:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d4a:	f000 f9b5 	bl	80010b8 <_lseek_r>
 8000d4e:	1c43      	adds	r3, r0, #1
 8000d50:	89a3      	ldrh	r3, [r4, #12]
 8000d52:	bf15      	itete	ne
 8000d54:	6560      	strne	r0, [r4, #84]	; 0x54
 8000d56:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000d5a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000d5e:	81a3      	strheq	r3, [r4, #12]
 8000d60:	bf18      	it	ne
 8000d62:	81a3      	strhne	r3, [r4, #12]
 8000d64:	bd10      	pop	{r4, pc}

08000d66 <__sclose>:
 8000d66:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d6a:	f000 b8d3 	b.w	8000f14 <_close_r>
	...

08000d70 <__swbuf_r>:
 8000d70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d72:	460e      	mov	r6, r1
 8000d74:	4614      	mov	r4, r2
 8000d76:	4605      	mov	r5, r0
 8000d78:	b118      	cbz	r0, 8000d82 <__swbuf_r+0x12>
 8000d7a:	6983      	ldr	r3, [r0, #24]
 8000d7c:	b90b      	cbnz	r3, 8000d82 <__swbuf_r+0x12>
 8000d7e:	f7ff fd17 	bl	80007b0 <__sinit>
 8000d82:	4b21      	ldr	r3, [pc, #132]	; (8000e08 <__swbuf_r+0x98>)
 8000d84:	429c      	cmp	r4, r3
 8000d86:	d12b      	bne.n	8000de0 <__swbuf_r+0x70>
 8000d88:	686c      	ldr	r4, [r5, #4]
 8000d8a:	69a3      	ldr	r3, [r4, #24]
 8000d8c:	60a3      	str	r3, [r4, #8]
 8000d8e:	89a3      	ldrh	r3, [r4, #12]
 8000d90:	071a      	lsls	r2, r3, #28
 8000d92:	d52f      	bpl.n	8000df4 <__swbuf_r+0x84>
 8000d94:	6923      	ldr	r3, [r4, #16]
 8000d96:	b36b      	cbz	r3, 8000df4 <__swbuf_r+0x84>
 8000d98:	6923      	ldr	r3, [r4, #16]
 8000d9a:	6820      	ldr	r0, [r4, #0]
 8000d9c:	1ac0      	subs	r0, r0, r3
 8000d9e:	6963      	ldr	r3, [r4, #20]
 8000da0:	b2f6      	uxtb	r6, r6
 8000da2:	4283      	cmp	r3, r0
 8000da4:	4637      	mov	r7, r6
 8000da6:	dc04      	bgt.n	8000db2 <__swbuf_r+0x42>
 8000da8:	4621      	mov	r1, r4
 8000daa:	4628      	mov	r0, r5
 8000dac:	f000 f948 	bl	8001040 <_fflush_r>
 8000db0:	bb30      	cbnz	r0, 8000e00 <__swbuf_r+0x90>
 8000db2:	68a3      	ldr	r3, [r4, #8]
 8000db4:	3b01      	subs	r3, #1
 8000db6:	60a3      	str	r3, [r4, #8]
 8000db8:	6823      	ldr	r3, [r4, #0]
 8000dba:	1c5a      	adds	r2, r3, #1
 8000dbc:	6022      	str	r2, [r4, #0]
 8000dbe:	701e      	strb	r6, [r3, #0]
 8000dc0:	6963      	ldr	r3, [r4, #20]
 8000dc2:	3001      	adds	r0, #1
 8000dc4:	4283      	cmp	r3, r0
 8000dc6:	d004      	beq.n	8000dd2 <__swbuf_r+0x62>
 8000dc8:	89a3      	ldrh	r3, [r4, #12]
 8000dca:	07db      	lsls	r3, r3, #31
 8000dcc:	d506      	bpl.n	8000ddc <__swbuf_r+0x6c>
 8000dce:	2e0a      	cmp	r6, #10
 8000dd0:	d104      	bne.n	8000ddc <__swbuf_r+0x6c>
 8000dd2:	4621      	mov	r1, r4
 8000dd4:	4628      	mov	r0, r5
 8000dd6:	f000 f933 	bl	8001040 <_fflush_r>
 8000dda:	b988      	cbnz	r0, 8000e00 <__swbuf_r+0x90>
 8000ddc:	4638      	mov	r0, r7
 8000dde:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000de0:	4b0a      	ldr	r3, [pc, #40]	; (8000e0c <__swbuf_r+0x9c>)
 8000de2:	429c      	cmp	r4, r3
 8000de4:	d101      	bne.n	8000dea <__swbuf_r+0x7a>
 8000de6:	68ac      	ldr	r4, [r5, #8]
 8000de8:	e7cf      	b.n	8000d8a <__swbuf_r+0x1a>
 8000dea:	4b09      	ldr	r3, [pc, #36]	; (8000e10 <__swbuf_r+0xa0>)
 8000dec:	429c      	cmp	r4, r3
 8000dee:	bf08      	it	eq
 8000df0:	68ec      	ldreq	r4, [r5, #12]
 8000df2:	e7ca      	b.n	8000d8a <__swbuf_r+0x1a>
 8000df4:	4621      	mov	r1, r4
 8000df6:	4628      	mov	r0, r5
 8000df8:	f000 f81e 	bl	8000e38 <__swsetup_r>
 8000dfc:	2800      	cmp	r0, #0
 8000dfe:	d0cb      	beq.n	8000d98 <__swbuf_r+0x28>
 8000e00:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8000e04:	e7ea      	b.n	8000ddc <__swbuf_r+0x6c>
 8000e06:	bf00      	nop
 8000e08:	08001634 	.word	0x08001634
 8000e0c:	08001654 	.word	0x08001654
 8000e10:	08001614 	.word	0x08001614

08000e14 <_write_r>:
 8000e14:	b538      	push	{r3, r4, r5, lr}
 8000e16:	4d07      	ldr	r5, [pc, #28]	; (8000e34 <_write_r+0x20>)
 8000e18:	4604      	mov	r4, r0
 8000e1a:	4608      	mov	r0, r1
 8000e1c:	4611      	mov	r1, r2
 8000e1e:	2200      	movs	r2, #0
 8000e20:	602a      	str	r2, [r5, #0]
 8000e22:	461a      	mov	r2, r3
 8000e24:	f7ff fad3 	bl	80003ce <_write>
 8000e28:	1c43      	adds	r3, r0, #1
 8000e2a:	d102      	bne.n	8000e32 <_write_r+0x1e>
 8000e2c:	682b      	ldr	r3, [r5, #0]
 8000e2e:	b103      	cbz	r3, 8000e32 <_write_r+0x1e>
 8000e30:	6023      	str	r3, [r4, #0]
 8000e32:	bd38      	pop	{r3, r4, r5, pc}
 8000e34:	24000090 	.word	0x24000090

08000e38 <__swsetup_r>:
 8000e38:	4b32      	ldr	r3, [pc, #200]	; (8000f04 <__swsetup_r+0xcc>)
 8000e3a:	b570      	push	{r4, r5, r6, lr}
 8000e3c:	681d      	ldr	r5, [r3, #0]
 8000e3e:	4606      	mov	r6, r0
 8000e40:	460c      	mov	r4, r1
 8000e42:	b125      	cbz	r5, 8000e4e <__swsetup_r+0x16>
 8000e44:	69ab      	ldr	r3, [r5, #24]
 8000e46:	b913      	cbnz	r3, 8000e4e <__swsetup_r+0x16>
 8000e48:	4628      	mov	r0, r5
 8000e4a:	f7ff fcb1 	bl	80007b0 <__sinit>
 8000e4e:	4b2e      	ldr	r3, [pc, #184]	; (8000f08 <__swsetup_r+0xd0>)
 8000e50:	429c      	cmp	r4, r3
 8000e52:	d10f      	bne.n	8000e74 <__swsetup_r+0x3c>
 8000e54:	686c      	ldr	r4, [r5, #4]
 8000e56:	89a3      	ldrh	r3, [r4, #12]
 8000e58:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000e5c:	0719      	lsls	r1, r3, #28
 8000e5e:	d42c      	bmi.n	8000eba <__swsetup_r+0x82>
 8000e60:	06dd      	lsls	r5, r3, #27
 8000e62:	d411      	bmi.n	8000e88 <__swsetup_r+0x50>
 8000e64:	2309      	movs	r3, #9
 8000e66:	6033      	str	r3, [r6, #0]
 8000e68:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000e6c:	81a3      	strh	r3, [r4, #12]
 8000e6e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000e72:	e03e      	b.n	8000ef2 <__swsetup_r+0xba>
 8000e74:	4b25      	ldr	r3, [pc, #148]	; (8000f0c <__swsetup_r+0xd4>)
 8000e76:	429c      	cmp	r4, r3
 8000e78:	d101      	bne.n	8000e7e <__swsetup_r+0x46>
 8000e7a:	68ac      	ldr	r4, [r5, #8]
 8000e7c:	e7eb      	b.n	8000e56 <__swsetup_r+0x1e>
 8000e7e:	4b24      	ldr	r3, [pc, #144]	; (8000f10 <__swsetup_r+0xd8>)
 8000e80:	429c      	cmp	r4, r3
 8000e82:	bf08      	it	eq
 8000e84:	68ec      	ldreq	r4, [r5, #12]
 8000e86:	e7e6      	b.n	8000e56 <__swsetup_r+0x1e>
 8000e88:	0758      	lsls	r0, r3, #29
 8000e8a:	d512      	bpl.n	8000eb2 <__swsetup_r+0x7a>
 8000e8c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000e8e:	b141      	cbz	r1, 8000ea2 <__swsetup_r+0x6a>
 8000e90:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000e94:	4299      	cmp	r1, r3
 8000e96:	d002      	beq.n	8000e9e <__swsetup_r+0x66>
 8000e98:	4630      	mov	r0, r6
 8000e9a:	f000 f991 	bl	80011c0 <_free_r>
 8000e9e:	2300      	movs	r3, #0
 8000ea0:	6363      	str	r3, [r4, #52]	; 0x34
 8000ea2:	89a3      	ldrh	r3, [r4, #12]
 8000ea4:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000ea8:	81a3      	strh	r3, [r4, #12]
 8000eaa:	2300      	movs	r3, #0
 8000eac:	6063      	str	r3, [r4, #4]
 8000eae:	6923      	ldr	r3, [r4, #16]
 8000eb0:	6023      	str	r3, [r4, #0]
 8000eb2:	89a3      	ldrh	r3, [r4, #12]
 8000eb4:	f043 0308 	orr.w	r3, r3, #8
 8000eb8:	81a3      	strh	r3, [r4, #12]
 8000eba:	6923      	ldr	r3, [r4, #16]
 8000ebc:	b94b      	cbnz	r3, 8000ed2 <__swsetup_r+0x9a>
 8000ebe:	89a3      	ldrh	r3, [r4, #12]
 8000ec0:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000ec4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000ec8:	d003      	beq.n	8000ed2 <__swsetup_r+0x9a>
 8000eca:	4621      	mov	r1, r4
 8000ecc:	4630      	mov	r0, r6
 8000ece:	f000 f92b 	bl	8001128 <__smakebuf_r>
 8000ed2:	89a0      	ldrh	r0, [r4, #12]
 8000ed4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000ed8:	f010 0301 	ands.w	r3, r0, #1
 8000edc:	d00a      	beq.n	8000ef4 <__swsetup_r+0xbc>
 8000ede:	2300      	movs	r3, #0
 8000ee0:	60a3      	str	r3, [r4, #8]
 8000ee2:	6963      	ldr	r3, [r4, #20]
 8000ee4:	425b      	negs	r3, r3
 8000ee6:	61a3      	str	r3, [r4, #24]
 8000ee8:	6923      	ldr	r3, [r4, #16]
 8000eea:	b943      	cbnz	r3, 8000efe <__swsetup_r+0xc6>
 8000eec:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000ef0:	d1ba      	bne.n	8000e68 <__swsetup_r+0x30>
 8000ef2:	bd70      	pop	{r4, r5, r6, pc}
 8000ef4:	0781      	lsls	r1, r0, #30
 8000ef6:	bf58      	it	pl
 8000ef8:	6963      	ldrpl	r3, [r4, #20]
 8000efa:	60a3      	str	r3, [r4, #8]
 8000efc:	e7f4      	b.n	8000ee8 <__swsetup_r+0xb0>
 8000efe:	2000      	movs	r0, #0
 8000f00:	e7f7      	b.n	8000ef2 <__swsetup_r+0xba>
 8000f02:	bf00      	nop
 8000f04:	24000000 	.word	0x24000000
 8000f08:	08001634 	.word	0x08001634
 8000f0c:	08001654 	.word	0x08001654
 8000f10:	08001614 	.word	0x08001614

08000f14 <_close_r>:
 8000f14:	b538      	push	{r3, r4, r5, lr}
 8000f16:	4d06      	ldr	r5, [pc, #24]	; (8000f30 <_close_r+0x1c>)
 8000f18:	2300      	movs	r3, #0
 8000f1a:	4604      	mov	r4, r0
 8000f1c:	4608      	mov	r0, r1
 8000f1e:	602b      	str	r3, [r5, #0]
 8000f20:	f7ff fa71 	bl	8000406 <_close>
 8000f24:	1c43      	adds	r3, r0, #1
 8000f26:	d102      	bne.n	8000f2e <_close_r+0x1a>
 8000f28:	682b      	ldr	r3, [r5, #0]
 8000f2a:	b103      	cbz	r3, 8000f2e <_close_r+0x1a>
 8000f2c:	6023      	str	r3, [r4, #0]
 8000f2e:	bd38      	pop	{r3, r4, r5, pc}
 8000f30:	24000090 	.word	0x24000090

08000f34 <__sflush_r>:
 8000f34:	898a      	ldrh	r2, [r1, #12]
 8000f36:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000f3a:	4605      	mov	r5, r0
 8000f3c:	0710      	lsls	r0, r2, #28
 8000f3e:	460c      	mov	r4, r1
 8000f40:	d458      	bmi.n	8000ff4 <__sflush_r+0xc0>
 8000f42:	684b      	ldr	r3, [r1, #4]
 8000f44:	2b00      	cmp	r3, #0
 8000f46:	dc05      	bgt.n	8000f54 <__sflush_r+0x20>
 8000f48:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000f4a:	2b00      	cmp	r3, #0
 8000f4c:	dc02      	bgt.n	8000f54 <__sflush_r+0x20>
 8000f4e:	2000      	movs	r0, #0
 8000f50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000f54:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000f56:	2e00      	cmp	r6, #0
 8000f58:	d0f9      	beq.n	8000f4e <__sflush_r+0x1a>
 8000f5a:	2300      	movs	r3, #0
 8000f5c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000f60:	682f      	ldr	r7, [r5, #0]
 8000f62:	6a21      	ldr	r1, [r4, #32]
 8000f64:	602b      	str	r3, [r5, #0]
 8000f66:	d032      	beq.n	8000fce <__sflush_r+0x9a>
 8000f68:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000f6a:	89a3      	ldrh	r3, [r4, #12]
 8000f6c:	075a      	lsls	r2, r3, #29
 8000f6e:	d505      	bpl.n	8000f7c <__sflush_r+0x48>
 8000f70:	6863      	ldr	r3, [r4, #4]
 8000f72:	1ac0      	subs	r0, r0, r3
 8000f74:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000f76:	b10b      	cbz	r3, 8000f7c <__sflush_r+0x48>
 8000f78:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000f7a:	1ac0      	subs	r0, r0, r3
 8000f7c:	2300      	movs	r3, #0
 8000f7e:	4602      	mov	r2, r0
 8000f80:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000f82:	6a21      	ldr	r1, [r4, #32]
 8000f84:	4628      	mov	r0, r5
 8000f86:	47b0      	blx	r6
 8000f88:	1c43      	adds	r3, r0, #1
 8000f8a:	89a3      	ldrh	r3, [r4, #12]
 8000f8c:	d106      	bne.n	8000f9c <__sflush_r+0x68>
 8000f8e:	6829      	ldr	r1, [r5, #0]
 8000f90:	291d      	cmp	r1, #29
 8000f92:	d82b      	bhi.n	8000fec <__sflush_r+0xb8>
 8000f94:	4a29      	ldr	r2, [pc, #164]	; (800103c <__sflush_r+0x108>)
 8000f96:	410a      	asrs	r2, r1
 8000f98:	07d6      	lsls	r6, r2, #31
 8000f9a:	d427      	bmi.n	8000fec <__sflush_r+0xb8>
 8000f9c:	2200      	movs	r2, #0
 8000f9e:	6062      	str	r2, [r4, #4]
 8000fa0:	04d9      	lsls	r1, r3, #19
 8000fa2:	6922      	ldr	r2, [r4, #16]
 8000fa4:	6022      	str	r2, [r4, #0]
 8000fa6:	d504      	bpl.n	8000fb2 <__sflush_r+0x7e>
 8000fa8:	1c42      	adds	r2, r0, #1
 8000faa:	d101      	bne.n	8000fb0 <__sflush_r+0x7c>
 8000fac:	682b      	ldr	r3, [r5, #0]
 8000fae:	b903      	cbnz	r3, 8000fb2 <__sflush_r+0x7e>
 8000fb0:	6560      	str	r0, [r4, #84]	; 0x54
 8000fb2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000fb4:	602f      	str	r7, [r5, #0]
 8000fb6:	2900      	cmp	r1, #0
 8000fb8:	d0c9      	beq.n	8000f4e <__sflush_r+0x1a>
 8000fba:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000fbe:	4299      	cmp	r1, r3
 8000fc0:	d002      	beq.n	8000fc8 <__sflush_r+0x94>
 8000fc2:	4628      	mov	r0, r5
 8000fc4:	f000 f8fc 	bl	80011c0 <_free_r>
 8000fc8:	2000      	movs	r0, #0
 8000fca:	6360      	str	r0, [r4, #52]	; 0x34
 8000fcc:	e7c0      	b.n	8000f50 <__sflush_r+0x1c>
 8000fce:	2301      	movs	r3, #1
 8000fd0:	4628      	mov	r0, r5
 8000fd2:	47b0      	blx	r6
 8000fd4:	1c41      	adds	r1, r0, #1
 8000fd6:	d1c8      	bne.n	8000f6a <__sflush_r+0x36>
 8000fd8:	682b      	ldr	r3, [r5, #0]
 8000fda:	2b00      	cmp	r3, #0
 8000fdc:	d0c5      	beq.n	8000f6a <__sflush_r+0x36>
 8000fde:	2b1d      	cmp	r3, #29
 8000fe0:	d001      	beq.n	8000fe6 <__sflush_r+0xb2>
 8000fe2:	2b16      	cmp	r3, #22
 8000fe4:	d101      	bne.n	8000fea <__sflush_r+0xb6>
 8000fe6:	602f      	str	r7, [r5, #0]
 8000fe8:	e7b1      	b.n	8000f4e <__sflush_r+0x1a>
 8000fea:	89a3      	ldrh	r3, [r4, #12]
 8000fec:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000ff0:	81a3      	strh	r3, [r4, #12]
 8000ff2:	e7ad      	b.n	8000f50 <__sflush_r+0x1c>
 8000ff4:	690f      	ldr	r7, [r1, #16]
 8000ff6:	2f00      	cmp	r7, #0
 8000ff8:	d0a9      	beq.n	8000f4e <__sflush_r+0x1a>
 8000ffa:	0793      	lsls	r3, r2, #30
 8000ffc:	680e      	ldr	r6, [r1, #0]
 8000ffe:	bf08      	it	eq
 8001000:	694b      	ldreq	r3, [r1, #20]
 8001002:	600f      	str	r7, [r1, #0]
 8001004:	bf18      	it	ne
 8001006:	2300      	movne	r3, #0
 8001008:	eba6 0807 	sub.w	r8, r6, r7
 800100c:	608b      	str	r3, [r1, #8]
 800100e:	f1b8 0f00 	cmp.w	r8, #0
 8001012:	dd9c      	ble.n	8000f4e <__sflush_r+0x1a>
 8001014:	6a21      	ldr	r1, [r4, #32]
 8001016:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001018:	4643      	mov	r3, r8
 800101a:	463a      	mov	r2, r7
 800101c:	4628      	mov	r0, r5
 800101e:	47b0      	blx	r6
 8001020:	2800      	cmp	r0, #0
 8001022:	dc06      	bgt.n	8001032 <__sflush_r+0xfe>
 8001024:	89a3      	ldrh	r3, [r4, #12]
 8001026:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800102a:	81a3      	strh	r3, [r4, #12]
 800102c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001030:	e78e      	b.n	8000f50 <__sflush_r+0x1c>
 8001032:	4407      	add	r7, r0
 8001034:	eba8 0800 	sub.w	r8, r8, r0
 8001038:	e7e9      	b.n	800100e <__sflush_r+0xda>
 800103a:	bf00      	nop
 800103c:	dfbffffe 	.word	0xdfbffffe

08001040 <_fflush_r>:
 8001040:	b538      	push	{r3, r4, r5, lr}
 8001042:	690b      	ldr	r3, [r1, #16]
 8001044:	4605      	mov	r5, r0
 8001046:	460c      	mov	r4, r1
 8001048:	b913      	cbnz	r3, 8001050 <_fflush_r+0x10>
 800104a:	2500      	movs	r5, #0
 800104c:	4628      	mov	r0, r5
 800104e:	bd38      	pop	{r3, r4, r5, pc}
 8001050:	b118      	cbz	r0, 800105a <_fflush_r+0x1a>
 8001052:	6983      	ldr	r3, [r0, #24]
 8001054:	b90b      	cbnz	r3, 800105a <_fflush_r+0x1a>
 8001056:	f7ff fbab 	bl	80007b0 <__sinit>
 800105a:	4b14      	ldr	r3, [pc, #80]	; (80010ac <_fflush_r+0x6c>)
 800105c:	429c      	cmp	r4, r3
 800105e:	d11b      	bne.n	8001098 <_fflush_r+0x58>
 8001060:	686c      	ldr	r4, [r5, #4]
 8001062:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001066:	2b00      	cmp	r3, #0
 8001068:	d0ef      	beq.n	800104a <_fflush_r+0xa>
 800106a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800106c:	07d0      	lsls	r0, r2, #31
 800106e:	d404      	bmi.n	800107a <_fflush_r+0x3a>
 8001070:	0599      	lsls	r1, r3, #22
 8001072:	d402      	bmi.n	800107a <_fflush_r+0x3a>
 8001074:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001076:	f7ff fc39 	bl	80008ec <__retarget_lock_acquire_recursive>
 800107a:	4628      	mov	r0, r5
 800107c:	4621      	mov	r1, r4
 800107e:	f7ff ff59 	bl	8000f34 <__sflush_r>
 8001082:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001084:	07da      	lsls	r2, r3, #31
 8001086:	4605      	mov	r5, r0
 8001088:	d4e0      	bmi.n	800104c <_fflush_r+0xc>
 800108a:	89a3      	ldrh	r3, [r4, #12]
 800108c:	059b      	lsls	r3, r3, #22
 800108e:	d4dd      	bmi.n	800104c <_fflush_r+0xc>
 8001090:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001092:	f7ff fc2c 	bl	80008ee <__retarget_lock_release_recursive>
 8001096:	e7d9      	b.n	800104c <_fflush_r+0xc>
 8001098:	4b05      	ldr	r3, [pc, #20]	; (80010b0 <_fflush_r+0x70>)
 800109a:	429c      	cmp	r4, r3
 800109c:	d101      	bne.n	80010a2 <_fflush_r+0x62>
 800109e:	68ac      	ldr	r4, [r5, #8]
 80010a0:	e7df      	b.n	8001062 <_fflush_r+0x22>
 80010a2:	4b04      	ldr	r3, [pc, #16]	; (80010b4 <_fflush_r+0x74>)
 80010a4:	429c      	cmp	r4, r3
 80010a6:	bf08      	it	eq
 80010a8:	68ec      	ldreq	r4, [r5, #12]
 80010aa:	e7da      	b.n	8001062 <_fflush_r+0x22>
 80010ac:	08001634 	.word	0x08001634
 80010b0:	08001654 	.word	0x08001654
 80010b4:	08001614 	.word	0x08001614

080010b8 <_lseek_r>:
 80010b8:	b538      	push	{r3, r4, r5, lr}
 80010ba:	4d07      	ldr	r5, [pc, #28]	; (80010d8 <_lseek_r+0x20>)
 80010bc:	4604      	mov	r4, r0
 80010be:	4608      	mov	r0, r1
 80010c0:	4611      	mov	r1, r2
 80010c2:	2200      	movs	r2, #0
 80010c4:	602a      	str	r2, [r5, #0]
 80010c6:	461a      	mov	r2, r3
 80010c8:	f7ff f9c4 	bl	8000454 <_lseek>
 80010cc:	1c43      	adds	r3, r0, #1
 80010ce:	d102      	bne.n	80010d6 <_lseek_r+0x1e>
 80010d0:	682b      	ldr	r3, [r5, #0]
 80010d2:	b103      	cbz	r3, 80010d6 <_lseek_r+0x1e>
 80010d4:	6023      	str	r3, [r4, #0]
 80010d6:	bd38      	pop	{r3, r4, r5, pc}
 80010d8:	24000090 	.word	0x24000090

080010dc <__swhatbuf_r>:
 80010dc:	b570      	push	{r4, r5, r6, lr}
 80010de:	460c      	mov	r4, r1
 80010e0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80010e4:	2900      	cmp	r1, #0
 80010e6:	b096      	sub	sp, #88	; 0x58
 80010e8:	4615      	mov	r5, r2
 80010ea:	461e      	mov	r6, r3
 80010ec:	da0d      	bge.n	800110a <__swhatbuf_r+0x2e>
 80010ee:	89a3      	ldrh	r3, [r4, #12]
 80010f0:	f013 0f80 	tst.w	r3, #128	; 0x80
 80010f4:	f04f 0100 	mov.w	r1, #0
 80010f8:	bf0c      	ite	eq
 80010fa:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 80010fe:	2340      	movne	r3, #64	; 0x40
 8001100:	2000      	movs	r0, #0
 8001102:	6031      	str	r1, [r6, #0]
 8001104:	602b      	str	r3, [r5, #0]
 8001106:	b016      	add	sp, #88	; 0x58
 8001108:	bd70      	pop	{r4, r5, r6, pc}
 800110a:	466a      	mov	r2, sp
 800110c:	f000 fa46 	bl	800159c <_fstat_r>
 8001110:	2800      	cmp	r0, #0
 8001112:	dbec      	blt.n	80010ee <__swhatbuf_r+0x12>
 8001114:	9901      	ldr	r1, [sp, #4]
 8001116:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 800111a:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 800111e:	4259      	negs	r1, r3
 8001120:	4159      	adcs	r1, r3
 8001122:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001126:	e7eb      	b.n	8001100 <__swhatbuf_r+0x24>

08001128 <__smakebuf_r>:
 8001128:	898b      	ldrh	r3, [r1, #12]
 800112a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800112c:	079d      	lsls	r5, r3, #30
 800112e:	4606      	mov	r6, r0
 8001130:	460c      	mov	r4, r1
 8001132:	d507      	bpl.n	8001144 <__smakebuf_r+0x1c>
 8001134:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001138:	6023      	str	r3, [r4, #0]
 800113a:	6123      	str	r3, [r4, #16]
 800113c:	2301      	movs	r3, #1
 800113e:	6163      	str	r3, [r4, #20]
 8001140:	b002      	add	sp, #8
 8001142:	bd70      	pop	{r4, r5, r6, pc}
 8001144:	ab01      	add	r3, sp, #4
 8001146:	466a      	mov	r2, sp
 8001148:	f7ff ffc8 	bl	80010dc <__swhatbuf_r>
 800114c:	9900      	ldr	r1, [sp, #0]
 800114e:	4605      	mov	r5, r0
 8001150:	4630      	mov	r0, r6
 8001152:	f7ff fbed 	bl	8000930 <_malloc_r>
 8001156:	b948      	cbnz	r0, 800116c <__smakebuf_r+0x44>
 8001158:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800115c:	059a      	lsls	r2, r3, #22
 800115e:	d4ef      	bmi.n	8001140 <__smakebuf_r+0x18>
 8001160:	f023 0303 	bic.w	r3, r3, #3
 8001164:	f043 0302 	orr.w	r3, r3, #2
 8001168:	81a3      	strh	r3, [r4, #12]
 800116a:	e7e3      	b.n	8001134 <__smakebuf_r+0xc>
 800116c:	4b0d      	ldr	r3, [pc, #52]	; (80011a4 <__smakebuf_r+0x7c>)
 800116e:	62b3      	str	r3, [r6, #40]	; 0x28
 8001170:	89a3      	ldrh	r3, [r4, #12]
 8001172:	6020      	str	r0, [r4, #0]
 8001174:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001178:	81a3      	strh	r3, [r4, #12]
 800117a:	9b00      	ldr	r3, [sp, #0]
 800117c:	6163      	str	r3, [r4, #20]
 800117e:	9b01      	ldr	r3, [sp, #4]
 8001180:	6120      	str	r0, [r4, #16]
 8001182:	b15b      	cbz	r3, 800119c <__smakebuf_r+0x74>
 8001184:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001188:	4630      	mov	r0, r6
 800118a:	f000 fa19 	bl	80015c0 <_isatty_r>
 800118e:	b128      	cbz	r0, 800119c <__smakebuf_r+0x74>
 8001190:	89a3      	ldrh	r3, [r4, #12]
 8001192:	f023 0303 	bic.w	r3, r3, #3
 8001196:	f043 0301 	orr.w	r3, r3, #1
 800119a:	81a3      	strh	r3, [r4, #12]
 800119c:	89a3      	ldrh	r3, [r4, #12]
 800119e:	431d      	orrs	r5, r3
 80011a0:	81a5      	strh	r5, [r4, #12]
 80011a2:	e7cd      	b.n	8001140 <__smakebuf_r+0x18>
 80011a4:	08000749 	.word	0x08000749

080011a8 <__malloc_lock>:
 80011a8:	4801      	ldr	r0, [pc, #4]	; (80011b0 <__malloc_lock+0x8>)
 80011aa:	f7ff bb9f 	b.w	80008ec <__retarget_lock_acquire_recursive>
 80011ae:	bf00      	nop
 80011b0:	24000084 	.word	0x24000084

080011b4 <__malloc_unlock>:
 80011b4:	4801      	ldr	r0, [pc, #4]	; (80011bc <__malloc_unlock+0x8>)
 80011b6:	f7ff bb9a 	b.w	80008ee <__retarget_lock_release_recursive>
 80011ba:	bf00      	nop
 80011bc:	24000084 	.word	0x24000084

080011c0 <_free_r>:
 80011c0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80011c2:	2900      	cmp	r1, #0
 80011c4:	d044      	beq.n	8001250 <_free_r+0x90>
 80011c6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80011ca:	9001      	str	r0, [sp, #4]
 80011cc:	2b00      	cmp	r3, #0
 80011ce:	f1a1 0404 	sub.w	r4, r1, #4
 80011d2:	bfb8      	it	lt
 80011d4:	18e4      	addlt	r4, r4, r3
 80011d6:	f7ff ffe7 	bl	80011a8 <__malloc_lock>
 80011da:	4a1e      	ldr	r2, [pc, #120]	; (8001254 <_free_r+0x94>)
 80011dc:	9801      	ldr	r0, [sp, #4]
 80011de:	6813      	ldr	r3, [r2, #0]
 80011e0:	b933      	cbnz	r3, 80011f0 <_free_r+0x30>
 80011e2:	6063      	str	r3, [r4, #4]
 80011e4:	6014      	str	r4, [r2, #0]
 80011e6:	b003      	add	sp, #12
 80011e8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80011ec:	f7ff bfe2 	b.w	80011b4 <__malloc_unlock>
 80011f0:	42a3      	cmp	r3, r4
 80011f2:	d908      	bls.n	8001206 <_free_r+0x46>
 80011f4:	6825      	ldr	r5, [r4, #0]
 80011f6:	1961      	adds	r1, r4, r5
 80011f8:	428b      	cmp	r3, r1
 80011fa:	bf01      	itttt	eq
 80011fc:	6819      	ldreq	r1, [r3, #0]
 80011fe:	685b      	ldreq	r3, [r3, #4]
 8001200:	1949      	addeq	r1, r1, r5
 8001202:	6021      	streq	r1, [r4, #0]
 8001204:	e7ed      	b.n	80011e2 <_free_r+0x22>
 8001206:	461a      	mov	r2, r3
 8001208:	685b      	ldr	r3, [r3, #4]
 800120a:	b10b      	cbz	r3, 8001210 <_free_r+0x50>
 800120c:	42a3      	cmp	r3, r4
 800120e:	d9fa      	bls.n	8001206 <_free_r+0x46>
 8001210:	6811      	ldr	r1, [r2, #0]
 8001212:	1855      	adds	r5, r2, r1
 8001214:	42a5      	cmp	r5, r4
 8001216:	d10b      	bne.n	8001230 <_free_r+0x70>
 8001218:	6824      	ldr	r4, [r4, #0]
 800121a:	4421      	add	r1, r4
 800121c:	1854      	adds	r4, r2, r1
 800121e:	42a3      	cmp	r3, r4
 8001220:	6011      	str	r1, [r2, #0]
 8001222:	d1e0      	bne.n	80011e6 <_free_r+0x26>
 8001224:	681c      	ldr	r4, [r3, #0]
 8001226:	685b      	ldr	r3, [r3, #4]
 8001228:	6053      	str	r3, [r2, #4]
 800122a:	440c      	add	r4, r1
 800122c:	6014      	str	r4, [r2, #0]
 800122e:	e7da      	b.n	80011e6 <_free_r+0x26>
 8001230:	d902      	bls.n	8001238 <_free_r+0x78>
 8001232:	230c      	movs	r3, #12
 8001234:	6003      	str	r3, [r0, #0]
 8001236:	e7d6      	b.n	80011e6 <_free_r+0x26>
 8001238:	6825      	ldr	r5, [r4, #0]
 800123a:	1961      	adds	r1, r4, r5
 800123c:	428b      	cmp	r3, r1
 800123e:	bf04      	itt	eq
 8001240:	6819      	ldreq	r1, [r3, #0]
 8001242:	685b      	ldreq	r3, [r3, #4]
 8001244:	6063      	str	r3, [r4, #4]
 8001246:	bf04      	itt	eq
 8001248:	1949      	addeq	r1, r1, r5
 800124a:	6021      	streq	r1, [r4, #0]
 800124c:	6054      	str	r4, [r2, #4]
 800124e:	e7ca      	b.n	80011e6 <_free_r+0x26>
 8001250:	b003      	add	sp, #12
 8001252:	bd30      	pop	{r4, r5, pc}
 8001254:	24000088 	.word	0x24000088

08001258 <_printf_common>:
 8001258:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800125c:	4616      	mov	r6, r2
 800125e:	4699      	mov	r9, r3
 8001260:	688a      	ldr	r2, [r1, #8]
 8001262:	690b      	ldr	r3, [r1, #16]
 8001264:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001268:	4293      	cmp	r3, r2
 800126a:	bfb8      	it	lt
 800126c:	4613      	movlt	r3, r2
 800126e:	6033      	str	r3, [r6, #0]
 8001270:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001274:	4607      	mov	r7, r0
 8001276:	460c      	mov	r4, r1
 8001278:	b10a      	cbz	r2, 800127e <_printf_common+0x26>
 800127a:	3301      	adds	r3, #1
 800127c:	6033      	str	r3, [r6, #0]
 800127e:	6823      	ldr	r3, [r4, #0]
 8001280:	0699      	lsls	r1, r3, #26
 8001282:	bf42      	ittt	mi
 8001284:	6833      	ldrmi	r3, [r6, #0]
 8001286:	3302      	addmi	r3, #2
 8001288:	6033      	strmi	r3, [r6, #0]
 800128a:	6825      	ldr	r5, [r4, #0]
 800128c:	f015 0506 	ands.w	r5, r5, #6
 8001290:	d106      	bne.n	80012a0 <_printf_common+0x48>
 8001292:	f104 0a19 	add.w	sl, r4, #25
 8001296:	68e3      	ldr	r3, [r4, #12]
 8001298:	6832      	ldr	r2, [r6, #0]
 800129a:	1a9b      	subs	r3, r3, r2
 800129c:	42ab      	cmp	r3, r5
 800129e:	dc26      	bgt.n	80012ee <_printf_common+0x96>
 80012a0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80012a4:	1e13      	subs	r3, r2, #0
 80012a6:	6822      	ldr	r2, [r4, #0]
 80012a8:	bf18      	it	ne
 80012aa:	2301      	movne	r3, #1
 80012ac:	0692      	lsls	r2, r2, #26
 80012ae:	d42b      	bmi.n	8001308 <_printf_common+0xb0>
 80012b0:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80012b4:	4649      	mov	r1, r9
 80012b6:	4638      	mov	r0, r7
 80012b8:	47c0      	blx	r8
 80012ba:	3001      	adds	r0, #1
 80012bc:	d01e      	beq.n	80012fc <_printf_common+0xa4>
 80012be:	6823      	ldr	r3, [r4, #0]
 80012c0:	6922      	ldr	r2, [r4, #16]
 80012c2:	f003 0306 	and.w	r3, r3, #6
 80012c6:	2b04      	cmp	r3, #4
 80012c8:	bf02      	ittt	eq
 80012ca:	68e5      	ldreq	r5, [r4, #12]
 80012cc:	6833      	ldreq	r3, [r6, #0]
 80012ce:	1aed      	subeq	r5, r5, r3
 80012d0:	68a3      	ldr	r3, [r4, #8]
 80012d2:	bf0c      	ite	eq
 80012d4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80012d8:	2500      	movne	r5, #0
 80012da:	4293      	cmp	r3, r2
 80012dc:	bfc4      	itt	gt
 80012de:	1a9b      	subgt	r3, r3, r2
 80012e0:	18ed      	addgt	r5, r5, r3
 80012e2:	2600      	movs	r6, #0
 80012e4:	341a      	adds	r4, #26
 80012e6:	42b5      	cmp	r5, r6
 80012e8:	d11a      	bne.n	8001320 <_printf_common+0xc8>
 80012ea:	2000      	movs	r0, #0
 80012ec:	e008      	b.n	8001300 <_printf_common+0xa8>
 80012ee:	2301      	movs	r3, #1
 80012f0:	4652      	mov	r2, sl
 80012f2:	4649      	mov	r1, r9
 80012f4:	4638      	mov	r0, r7
 80012f6:	47c0      	blx	r8
 80012f8:	3001      	adds	r0, #1
 80012fa:	d103      	bne.n	8001304 <_printf_common+0xac>
 80012fc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001300:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001304:	3501      	adds	r5, #1
 8001306:	e7c6      	b.n	8001296 <_printf_common+0x3e>
 8001308:	18e1      	adds	r1, r4, r3
 800130a:	1c5a      	adds	r2, r3, #1
 800130c:	2030      	movs	r0, #48	; 0x30
 800130e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001312:	4422      	add	r2, r4
 8001314:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001318:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800131c:	3302      	adds	r3, #2
 800131e:	e7c7      	b.n	80012b0 <_printf_common+0x58>
 8001320:	2301      	movs	r3, #1
 8001322:	4622      	mov	r2, r4
 8001324:	4649      	mov	r1, r9
 8001326:	4638      	mov	r0, r7
 8001328:	47c0      	blx	r8
 800132a:	3001      	adds	r0, #1
 800132c:	d0e6      	beq.n	80012fc <_printf_common+0xa4>
 800132e:	3601      	adds	r6, #1
 8001330:	e7d9      	b.n	80012e6 <_printf_common+0x8e>
	...

08001334 <_printf_i>:
 8001334:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001338:	7e0f      	ldrb	r7, [r1, #24]
 800133a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800133c:	2f78      	cmp	r7, #120	; 0x78
 800133e:	4691      	mov	r9, r2
 8001340:	4680      	mov	r8, r0
 8001342:	460c      	mov	r4, r1
 8001344:	469a      	mov	sl, r3
 8001346:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800134a:	d807      	bhi.n	800135c <_printf_i+0x28>
 800134c:	2f62      	cmp	r7, #98	; 0x62
 800134e:	d80a      	bhi.n	8001366 <_printf_i+0x32>
 8001350:	2f00      	cmp	r7, #0
 8001352:	f000 80d4 	beq.w	80014fe <_printf_i+0x1ca>
 8001356:	2f58      	cmp	r7, #88	; 0x58
 8001358:	f000 80c0 	beq.w	80014dc <_printf_i+0x1a8>
 800135c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001360:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001364:	e03a      	b.n	80013dc <_printf_i+0xa8>
 8001366:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800136a:	2b15      	cmp	r3, #21
 800136c:	d8f6      	bhi.n	800135c <_printf_i+0x28>
 800136e:	a101      	add	r1, pc, #4	; (adr r1, 8001374 <_printf_i+0x40>)
 8001370:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001374:	080013cd 	.word	0x080013cd
 8001378:	080013e1 	.word	0x080013e1
 800137c:	0800135d 	.word	0x0800135d
 8001380:	0800135d 	.word	0x0800135d
 8001384:	0800135d 	.word	0x0800135d
 8001388:	0800135d 	.word	0x0800135d
 800138c:	080013e1 	.word	0x080013e1
 8001390:	0800135d 	.word	0x0800135d
 8001394:	0800135d 	.word	0x0800135d
 8001398:	0800135d 	.word	0x0800135d
 800139c:	0800135d 	.word	0x0800135d
 80013a0:	080014e5 	.word	0x080014e5
 80013a4:	0800140d 	.word	0x0800140d
 80013a8:	0800149f 	.word	0x0800149f
 80013ac:	0800135d 	.word	0x0800135d
 80013b0:	0800135d 	.word	0x0800135d
 80013b4:	08001507 	.word	0x08001507
 80013b8:	0800135d 	.word	0x0800135d
 80013bc:	0800140d 	.word	0x0800140d
 80013c0:	0800135d 	.word	0x0800135d
 80013c4:	0800135d 	.word	0x0800135d
 80013c8:	080014a7 	.word	0x080014a7
 80013cc:	682b      	ldr	r3, [r5, #0]
 80013ce:	1d1a      	adds	r2, r3, #4
 80013d0:	681b      	ldr	r3, [r3, #0]
 80013d2:	602a      	str	r2, [r5, #0]
 80013d4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80013d8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80013dc:	2301      	movs	r3, #1
 80013de:	e09f      	b.n	8001520 <_printf_i+0x1ec>
 80013e0:	6820      	ldr	r0, [r4, #0]
 80013e2:	682b      	ldr	r3, [r5, #0]
 80013e4:	0607      	lsls	r7, r0, #24
 80013e6:	f103 0104 	add.w	r1, r3, #4
 80013ea:	6029      	str	r1, [r5, #0]
 80013ec:	d501      	bpl.n	80013f2 <_printf_i+0xbe>
 80013ee:	681e      	ldr	r6, [r3, #0]
 80013f0:	e003      	b.n	80013fa <_printf_i+0xc6>
 80013f2:	0646      	lsls	r6, r0, #25
 80013f4:	d5fb      	bpl.n	80013ee <_printf_i+0xba>
 80013f6:	f9b3 6000 	ldrsh.w	r6, [r3]
 80013fa:	2e00      	cmp	r6, #0
 80013fc:	da03      	bge.n	8001406 <_printf_i+0xd2>
 80013fe:	232d      	movs	r3, #45	; 0x2d
 8001400:	4276      	negs	r6, r6
 8001402:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001406:	485a      	ldr	r0, [pc, #360]	; (8001570 <_printf_i+0x23c>)
 8001408:	230a      	movs	r3, #10
 800140a:	e012      	b.n	8001432 <_printf_i+0xfe>
 800140c:	682b      	ldr	r3, [r5, #0]
 800140e:	6820      	ldr	r0, [r4, #0]
 8001410:	1d19      	adds	r1, r3, #4
 8001412:	6029      	str	r1, [r5, #0]
 8001414:	0605      	lsls	r5, r0, #24
 8001416:	d501      	bpl.n	800141c <_printf_i+0xe8>
 8001418:	681e      	ldr	r6, [r3, #0]
 800141a:	e002      	b.n	8001422 <_printf_i+0xee>
 800141c:	0641      	lsls	r1, r0, #25
 800141e:	d5fb      	bpl.n	8001418 <_printf_i+0xe4>
 8001420:	881e      	ldrh	r6, [r3, #0]
 8001422:	4853      	ldr	r0, [pc, #332]	; (8001570 <_printf_i+0x23c>)
 8001424:	2f6f      	cmp	r7, #111	; 0x6f
 8001426:	bf0c      	ite	eq
 8001428:	2308      	moveq	r3, #8
 800142a:	230a      	movne	r3, #10
 800142c:	2100      	movs	r1, #0
 800142e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001432:	6865      	ldr	r5, [r4, #4]
 8001434:	60a5      	str	r5, [r4, #8]
 8001436:	2d00      	cmp	r5, #0
 8001438:	bfa2      	ittt	ge
 800143a:	6821      	ldrge	r1, [r4, #0]
 800143c:	f021 0104 	bicge.w	r1, r1, #4
 8001440:	6021      	strge	r1, [r4, #0]
 8001442:	b90e      	cbnz	r6, 8001448 <_printf_i+0x114>
 8001444:	2d00      	cmp	r5, #0
 8001446:	d04b      	beq.n	80014e0 <_printf_i+0x1ac>
 8001448:	4615      	mov	r5, r2
 800144a:	fbb6 f1f3 	udiv	r1, r6, r3
 800144e:	fb03 6711 	mls	r7, r3, r1, r6
 8001452:	5dc7      	ldrb	r7, [r0, r7]
 8001454:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8001458:	4637      	mov	r7, r6
 800145a:	42bb      	cmp	r3, r7
 800145c:	460e      	mov	r6, r1
 800145e:	d9f4      	bls.n	800144a <_printf_i+0x116>
 8001460:	2b08      	cmp	r3, #8
 8001462:	d10b      	bne.n	800147c <_printf_i+0x148>
 8001464:	6823      	ldr	r3, [r4, #0]
 8001466:	07de      	lsls	r6, r3, #31
 8001468:	d508      	bpl.n	800147c <_printf_i+0x148>
 800146a:	6923      	ldr	r3, [r4, #16]
 800146c:	6861      	ldr	r1, [r4, #4]
 800146e:	4299      	cmp	r1, r3
 8001470:	bfde      	ittt	le
 8001472:	2330      	movle	r3, #48	; 0x30
 8001474:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001478:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 800147c:	1b52      	subs	r2, r2, r5
 800147e:	6122      	str	r2, [r4, #16]
 8001480:	f8cd a000 	str.w	sl, [sp]
 8001484:	464b      	mov	r3, r9
 8001486:	aa03      	add	r2, sp, #12
 8001488:	4621      	mov	r1, r4
 800148a:	4640      	mov	r0, r8
 800148c:	f7ff fee4 	bl	8001258 <_printf_common>
 8001490:	3001      	adds	r0, #1
 8001492:	d14a      	bne.n	800152a <_printf_i+0x1f6>
 8001494:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001498:	b004      	add	sp, #16
 800149a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800149e:	6823      	ldr	r3, [r4, #0]
 80014a0:	f043 0320 	orr.w	r3, r3, #32
 80014a4:	6023      	str	r3, [r4, #0]
 80014a6:	4833      	ldr	r0, [pc, #204]	; (8001574 <_printf_i+0x240>)
 80014a8:	2778      	movs	r7, #120	; 0x78
 80014aa:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80014ae:	6823      	ldr	r3, [r4, #0]
 80014b0:	6829      	ldr	r1, [r5, #0]
 80014b2:	061f      	lsls	r7, r3, #24
 80014b4:	f851 6b04 	ldr.w	r6, [r1], #4
 80014b8:	d402      	bmi.n	80014c0 <_printf_i+0x18c>
 80014ba:	065f      	lsls	r7, r3, #25
 80014bc:	bf48      	it	mi
 80014be:	b2b6      	uxthmi	r6, r6
 80014c0:	07df      	lsls	r7, r3, #31
 80014c2:	bf48      	it	mi
 80014c4:	f043 0320 	orrmi.w	r3, r3, #32
 80014c8:	6029      	str	r1, [r5, #0]
 80014ca:	bf48      	it	mi
 80014cc:	6023      	strmi	r3, [r4, #0]
 80014ce:	b91e      	cbnz	r6, 80014d8 <_printf_i+0x1a4>
 80014d0:	6823      	ldr	r3, [r4, #0]
 80014d2:	f023 0320 	bic.w	r3, r3, #32
 80014d6:	6023      	str	r3, [r4, #0]
 80014d8:	2310      	movs	r3, #16
 80014da:	e7a7      	b.n	800142c <_printf_i+0xf8>
 80014dc:	4824      	ldr	r0, [pc, #144]	; (8001570 <_printf_i+0x23c>)
 80014de:	e7e4      	b.n	80014aa <_printf_i+0x176>
 80014e0:	4615      	mov	r5, r2
 80014e2:	e7bd      	b.n	8001460 <_printf_i+0x12c>
 80014e4:	682b      	ldr	r3, [r5, #0]
 80014e6:	6826      	ldr	r6, [r4, #0]
 80014e8:	6961      	ldr	r1, [r4, #20]
 80014ea:	1d18      	adds	r0, r3, #4
 80014ec:	6028      	str	r0, [r5, #0]
 80014ee:	0635      	lsls	r5, r6, #24
 80014f0:	681b      	ldr	r3, [r3, #0]
 80014f2:	d501      	bpl.n	80014f8 <_printf_i+0x1c4>
 80014f4:	6019      	str	r1, [r3, #0]
 80014f6:	e002      	b.n	80014fe <_printf_i+0x1ca>
 80014f8:	0670      	lsls	r0, r6, #25
 80014fa:	d5fb      	bpl.n	80014f4 <_printf_i+0x1c0>
 80014fc:	8019      	strh	r1, [r3, #0]
 80014fe:	2300      	movs	r3, #0
 8001500:	6123      	str	r3, [r4, #16]
 8001502:	4615      	mov	r5, r2
 8001504:	e7bc      	b.n	8001480 <_printf_i+0x14c>
 8001506:	682b      	ldr	r3, [r5, #0]
 8001508:	1d1a      	adds	r2, r3, #4
 800150a:	602a      	str	r2, [r5, #0]
 800150c:	681d      	ldr	r5, [r3, #0]
 800150e:	6862      	ldr	r2, [r4, #4]
 8001510:	2100      	movs	r1, #0
 8001512:	4628      	mov	r0, r5
 8001514:	f7fe fec4 	bl	80002a0 <memchr>
 8001518:	b108      	cbz	r0, 800151e <_printf_i+0x1ea>
 800151a:	1b40      	subs	r0, r0, r5
 800151c:	6060      	str	r0, [r4, #4]
 800151e:	6863      	ldr	r3, [r4, #4]
 8001520:	6123      	str	r3, [r4, #16]
 8001522:	2300      	movs	r3, #0
 8001524:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001528:	e7aa      	b.n	8001480 <_printf_i+0x14c>
 800152a:	6923      	ldr	r3, [r4, #16]
 800152c:	462a      	mov	r2, r5
 800152e:	4649      	mov	r1, r9
 8001530:	4640      	mov	r0, r8
 8001532:	47d0      	blx	sl
 8001534:	3001      	adds	r0, #1
 8001536:	d0ad      	beq.n	8001494 <_printf_i+0x160>
 8001538:	6823      	ldr	r3, [r4, #0]
 800153a:	079b      	lsls	r3, r3, #30
 800153c:	d413      	bmi.n	8001566 <_printf_i+0x232>
 800153e:	68e0      	ldr	r0, [r4, #12]
 8001540:	9b03      	ldr	r3, [sp, #12]
 8001542:	4298      	cmp	r0, r3
 8001544:	bfb8      	it	lt
 8001546:	4618      	movlt	r0, r3
 8001548:	e7a6      	b.n	8001498 <_printf_i+0x164>
 800154a:	2301      	movs	r3, #1
 800154c:	4632      	mov	r2, r6
 800154e:	4649      	mov	r1, r9
 8001550:	4640      	mov	r0, r8
 8001552:	47d0      	blx	sl
 8001554:	3001      	adds	r0, #1
 8001556:	d09d      	beq.n	8001494 <_printf_i+0x160>
 8001558:	3501      	adds	r5, #1
 800155a:	68e3      	ldr	r3, [r4, #12]
 800155c:	9903      	ldr	r1, [sp, #12]
 800155e:	1a5b      	subs	r3, r3, r1
 8001560:	42ab      	cmp	r3, r5
 8001562:	dcf2      	bgt.n	800154a <_printf_i+0x216>
 8001564:	e7eb      	b.n	800153e <_printf_i+0x20a>
 8001566:	2500      	movs	r5, #0
 8001568:	f104 0619 	add.w	r6, r4, #25
 800156c:	e7f5      	b.n	800155a <_printf_i+0x226>
 800156e:	bf00      	nop
 8001570:	08001685 	.word	0x08001685
 8001574:	08001696 	.word	0x08001696

08001578 <_read_r>:
 8001578:	b538      	push	{r3, r4, r5, lr}
 800157a:	4d07      	ldr	r5, [pc, #28]	; (8001598 <_read_r+0x20>)
 800157c:	4604      	mov	r4, r0
 800157e:	4608      	mov	r0, r1
 8001580:	4611      	mov	r1, r2
 8001582:	2200      	movs	r2, #0
 8001584:	602a      	str	r2, [r5, #0]
 8001586:	461a      	mov	r2, r3
 8001588:	f7fe ff04 	bl	8000394 <_read>
 800158c:	1c43      	adds	r3, r0, #1
 800158e:	d102      	bne.n	8001596 <_read_r+0x1e>
 8001590:	682b      	ldr	r3, [r5, #0]
 8001592:	b103      	cbz	r3, 8001596 <_read_r+0x1e>
 8001594:	6023      	str	r3, [r4, #0]
 8001596:	bd38      	pop	{r3, r4, r5, pc}
 8001598:	24000090 	.word	0x24000090

0800159c <_fstat_r>:
 800159c:	b538      	push	{r3, r4, r5, lr}
 800159e:	4d07      	ldr	r5, [pc, #28]	; (80015bc <_fstat_r+0x20>)
 80015a0:	2300      	movs	r3, #0
 80015a2:	4604      	mov	r4, r0
 80015a4:	4608      	mov	r0, r1
 80015a6:	4611      	mov	r1, r2
 80015a8:	602b      	str	r3, [r5, #0]
 80015aa:	f7fe ff38 	bl	800041e <_fstat>
 80015ae:	1c43      	adds	r3, r0, #1
 80015b0:	d102      	bne.n	80015b8 <_fstat_r+0x1c>
 80015b2:	682b      	ldr	r3, [r5, #0]
 80015b4:	b103      	cbz	r3, 80015b8 <_fstat_r+0x1c>
 80015b6:	6023      	str	r3, [r4, #0]
 80015b8:	bd38      	pop	{r3, r4, r5, pc}
 80015ba:	bf00      	nop
 80015bc:	24000090 	.word	0x24000090

080015c0 <_isatty_r>:
 80015c0:	b538      	push	{r3, r4, r5, lr}
 80015c2:	4d06      	ldr	r5, [pc, #24]	; (80015dc <_isatty_r+0x1c>)
 80015c4:	2300      	movs	r3, #0
 80015c6:	4604      	mov	r4, r0
 80015c8:	4608      	mov	r0, r1
 80015ca:	602b      	str	r3, [r5, #0]
 80015cc:	f7fe ff37 	bl	800043e <_isatty>
 80015d0:	1c43      	adds	r3, r0, #1
 80015d2:	d102      	bne.n	80015da <_isatty_r+0x1a>
 80015d4:	682b      	ldr	r3, [r5, #0]
 80015d6:	b103      	cbz	r3, 80015da <_isatty_r+0x1a>
 80015d8:	6023      	str	r3, [r4, #0]
 80015da:	bd38      	pop	{r3, r4, r5, pc}
 80015dc:	24000090 	.word	0x24000090

080015e0 <_init>:
 80015e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015e2:	bf00      	nop
 80015e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015e6:	bc08      	pop	{r3}
 80015e8:	469e      	mov	lr, r3
 80015ea:	4770      	bx	lr

080015ec <_fini>:
 80015ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015ee:	bf00      	nop
 80015f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015f2:	bc08      	pop	{r3}
 80015f4:	469e      	mov	lr, r3
 80015f6:	4770      	bx	lr
