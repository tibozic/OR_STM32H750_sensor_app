
7_systick.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000298  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000013cc  080002a0  080002a0  000102a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000b0  0800166c  0800166c  0001166c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .init_array   00000004  0800171c  0800171c  0001171c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .fini_array   00000004  08001720  08001720  00011720  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data         00000064  24000000  08001724  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          00000030  24000064  08001788  00020064  2**2
                  ALLOC
  7 ._user_heap_stack 00000604  24000094  08001788  00020094  2**0
                  ALLOC
  8 .ARM.attributes 0000002e  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
  9 .debug_info   0000f572  00000000  00000000  00020092  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 00003814  00000000  00000000  0002f604  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_aranges 000005e8  00000000  00000000  00032e18  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 00000485  00000000  00000000  00033400  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_macro  0002a6a6  00000000  00000000  00033885  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_line   00005a99  00000000  00000000  0005df2b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_str    000eec4a  00000000  00000000  000639c4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .comment      0000003c  00000000  00000000  0015260e  2**0
                  CONTENTS, READONLY
 17 .debug_frame  00000ca8  00000000  00000000  0015264c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line_str 000000b9  00000000  00000000  001532f4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_loclists 000018b1  00000000  00000000  001533ad  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080002a0 <memchr>:
 80002a0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002a4:	2a10      	cmp	r2, #16
 80002a6:	db2b      	blt.n	8000300 <memchr+0x60>
 80002a8:	f010 0f07 	tst.w	r0, #7
 80002ac:	d008      	beq.n	80002c0 <memchr+0x20>
 80002ae:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002b2:	3a01      	subs	r2, #1
 80002b4:	428b      	cmp	r3, r1
 80002b6:	d02d      	beq.n	8000314 <memchr+0x74>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	b342      	cbz	r2, 8000310 <memchr+0x70>
 80002be:	d1f6      	bne.n	80002ae <memchr+0xe>
 80002c0:	b4f0      	push	{r4, r5, r6, r7}
 80002c2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002c6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002ca:	f022 0407 	bic.w	r4, r2, #7
 80002ce:	f07f 0700 	mvns.w	r7, #0
 80002d2:	2300      	movs	r3, #0
 80002d4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002d8:	3c08      	subs	r4, #8
 80002da:	ea85 0501 	eor.w	r5, r5, r1
 80002de:	ea86 0601 	eor.w	r6, r6, r1
 80002e2:	fa85 f547 	uadd8	r5, r5, r7
 80002e6:	faa3 f587 	sel	r5, r3, r7
 80002ea:	fa86 f647 	uadd8	r6, r6, r7
 80002ee:	faa5 f687 	sel	r6, r5, r7
 80002f2:	b98e      	cbnz	r6, 8000318 <memchr+0x78>
 80002f4:	d1ee      	bne.n	80002d4 <memchr+0x34>
 80002f6:	bcf0      	pop	{r4, r5, r6, r7}
 80002f8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002fc:	f002 0207 	and.w	r2, r2, #7
 8000300:	b132      	cbz	r2, 8000310 <memchr+0x70>
 8000302:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000306:	3a01      	subs	r2, #1
 8000308:	ea83 0301 	eor.w	r3, r3, r1
 800030c:	b113      	cbz	r3, 8000314 <memchr+0x74>
 800030e:	d1f8      	bne.n	8000302 <memchr+0x62>
 8000310:	2000      	movs	r0, #0
 8000312:	4770      	bx	lr
 8000314:	3801      	subs	r0, #1
 8000316:	4770      	bx	lr
 8000318:	2d00      	cmp	r5, #0
 800031a:	bf06      	itte	eq
 800031c:	4635      	moveq	r5, r6
 800031e:	3803      	subeq	r0, #3
 8000320:	3807      	subne	r0, #7
 8000322:	f015 0f01 	tst.w	r5, #1
 8000326:	d107      	bne.n	8000338 <memchr+0x98>
 8000328:	3001      	adds	r0, #1
 800032a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800032e:	bf02      	ittt	eq
 8000330:	3001      	addeq	r0, #1
 8000332:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000336:	3001      	addeq	r0, #1
 8000338:	bcf0      	pop	{r4, r5, r6, r7}
 800033a:	3801      	subs	r0, #1
 800033c:	4770      	bx	lr
 800033e:	bf00      	nop

08000340 <__do_global_dtors_aux>:
 8000340:	b510      	push	{r4, lr}
 8000342:	4c05      	ldr	r4, [pc, #20]	; (8000358 <__do_global_dtors_aux+0x18>)
 8000344:	7823      	ldrb	r3, [r4, #0]
 8000346:	b933      	cbnz	r3, 8000356 <__do_global_dtors_aux+0x16>
 8000348:	4b04      	ldr	r3, [pc, #16]	; (800035c <__do_global_dtors_aux+0x1c>)
 800034a:	b113      	cbz	r3, 8000352 <__do_global_dtors_aux+0x12>
 800034c:	4804      	ldr	r0, [pc, #16]	; (8000360 <__do_global_dtors_aux+0x20>)
 800034e:	f3af 8000 	nop.w
 8000352:	2301      	movs	r3, #1
 8000354:	7023      	strb	r3, [r4, #0]
 8000356:	bd10      	pop	{r4, pc}
 8000358:	24000064 	.word	0x24000064
 800035c:	00000000 	.word	0x00000000
 8000360:	08001654 	.word	0x08001654

08000364 <frame_dummy>:
 8000364:	b508      	push	{r3, lr}
 8000366:	4b03      	ldr	r3, [pc, #12]	; (8000374 <frame_dummy+0x10>)
 8000368:	b11b      	cbz	r3, 8000372 <frame_dummy+0xe>
 800036a:	4903      	ldr	r1, [pc, #12]	; (8000378 <frame_dummy+0x14>)
 800036c:	4803      	ldr	r0, [pc, #12]	; (800037c <frame_dummy+0x18>)
 800036e:	f3af 8000 	nop.w
 8000372:	bd08      	pop	{r3, pc}
 8000374:	00000000 	.word	0x00000000
 8000378:	24000068 	.word	0x24000068
 800037c:	08001654 	.word	0x08001654

08000380 <main>:
// definitions


// functions
int main(void)
{
 8000380:	b580      	push	{r7, lr}
 8000382:	af00      	add	r7, sp, #0
	uart3_tx_init();
 8000384:	f000 f8f0 	bl	8000568 <uart3_tx_init>
	systick_init();
 8000388:	f000 f8b0 	bl	80004ec <systick_init>

	while(1)
	{
		systick_delay_ms(1000);
 800038c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000390:	f000 f8c0 	bl	8000514 <systick_delay_ms>
		printf("Hello from STM32H7\n\r");
 8000394:	4802      	ldr	r0, [pc, #8]	; (80003a0 <main+0x20>)
 8000396:	f000 f9d5 	bl	8000744 <iprintf>
		systick_delay_ms(1000);
 800039a:	bf00      	nop
 800039c:	e7f6      	b.n	800038c <main+0xc>
 800039e:	bf00      	nop
 80003a0:	0800166c 	.word	0x0800166c

080003a4 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80003a4:	b580      	push	{r7, lr}
 80003a6:	b086      	sub	sp, #24
 80003a8:	af00      	add	r7, sp, #0
 80003aa:	60f8      	str	r0, [r7, #12]
 80003ac:	60b9      	str	r1, [r7, #8]
 80003ae:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003b0:	2300      	movs	r3, #0
 80003b2:	617b      	str	r3, [r7, #20]
 80003b4:	e00a      	b.n	80003cc <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80003b6:	f3af 8000 	nop.w
 80003ba:	4601      	mov	r1, r0
 80003bc:	68bb      	ldr	r3, [r7, #8]
 80003be:	1c5a      	adds	r2, r3, #1
 80003c0:	60ba      	str	r2, [r7, #8]
 80003c2:	b2ca      	uxtb	r2, r1
 80003c4:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003c6:	697b      	ldr	r3, [r7, #20]
 80003c8:	3301      	adds	r3, #1
 80003ca:	617b      	str	r3, [r7, #20]
 80003cc:	697a      	ldr	r2, [r7, #20]
 80003ce:	687b      	ldr	r3, [r7, #4]
 80003d0:	429a      	cmp	r2, r3
 80003d2:	dbf0      	blt.n	80003b6 <_read+0x12>
	}

return len;
 80003d4:	687b      	ldr	r3, [r7, #4]
}
 80003d6:	4618      	mov	r0, r3
 80003d8:	3718      	adds	r7, #24
 80003da:	46bd      	mov	sp, r7
 80003dc:	bd80      	pop	{r7, pc}

080003de <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80003de:	b580      	push	{r7, lr}
 80003e0:	b086      	sub	sp, #24
 80003e2:	af00      	add	r7, sp, #0
 80003e4:	60f8      	str	r0, [r7, #12]
 80003e6:	60b9      	str	r1, [r7, #8]
 80003e8:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003ea:	2300      	movs	r3, #0
 80003ec:	617b      	str	r3, [r7, #20]
 80003ee:	e009      	b.n	8000404 <_write+0x26>
	{
		__io_putchar(*ptr++);
 80003f0:	68bb      	ldr	r3, [r7, #8]
 80003f2:	1c5a      	adds	r2, r3, #1
 80003f4:	60ba      	str	r2, [r7, #8]
 80003f6:	781b      	ldrb	r3, [r3, #0]
 80003f8:	4618      	mov	r0, r3
 80003fa:	f000 f8a9 	bl	8000550 <__io_putchar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003fe:	697b      	ldr	r3, [r7, #20]
 8000400:	3301      	adds	r3, #1
 8000402:	617b      	str	r3, [r7, #20]
 8000404:	697a      	ldr	r2, [r7, #20]
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	429a      	cmp	r2, r3
 800040a:	dbf1      	blt.n	80003f0 <_write+0x12>
	}
	return len;
 800040c:	687b      	ldr	r3, [r7, #4]
}
 800040e:	4618      	mov	r0, r3
 8000410:	3718      	adds	r7, #24
 8000412:	46bd      	mov	sp, r7
 8000414:	bd80      	pop	{r7, pc}

08000416 <_close>:

int _close(int file)
{
 8000416:	b480      	push	{r7}
 8000418:	b083      	sub	sp, #12
 800041a:	af00      	add	r7, sp, #0
 800041c:	6078      	str	r0, [r7, #4]
	return -1;
 800041e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 8000422:	4618      	mov	r0, r3
 8000424:	370c      	adds	r7, #12
 8000426:	46bd      	mov	sp, r7
 8000428:	f85d 7b04 	ldr.w	r7, [sp], #4
 800042c:	4770      	bx	lr

0800042e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800042e:	b480      	push	{r7}
 8000430:	b083      	sub	sp, #12
 8000432:	af00      	add	r7, sp, #0
 8000434:	6078      	str	r0, [r7, #4]
 8000436:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000438:	683b      	ldr	r3, [r7, #0]
 800043a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800043e:	605a      	str	r2, [r3, #4]
	return 0;
 8000440:	2300      	movs	r3, #0
}
 8000442:	4618      	mov	r0, r3
 8000444:	370c      	adds	r7, #12
 8000446:	46bd      	mov	sp, r7
 8000448:	f85d 7b04 	ldr.w	r7, [sp], #4
 800044c:	4770      	bx	lr

0800044e <_isatty>:

int _isatty(int file)
{
 800044e:	b480      	push	{r7}
 8000450:	b083      	sub	sp, #12
 8000452:	af00      	add	r7, sp, #0
 8000454:	6078      	str	r0, [r7, #4]
	return 1;
 8000456:	2301      	movs	r3, #1
}
 8000458:	4618      	mov	r0, r3
 800045a:	370c      	adds	r7, #12
 800045c:	46bd      	mov	sp, r7
 800045e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000462:	4770      	bx	lr

08000464 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000464:	b480      	push	{r7}
 8000466:	b085      	sub	sp, #20
 8000468:	af00      	add	r7, sp, #0
 800046a:	60f8      	str	r0, [r7, #12]
 800046c:	60b9      	str	r1, [r7, #8]
 800046e:	607a      	str	r2, [r7, #4]
	return 0;
 8000470:	2300      	movs	r3, #0
}
 8000472:	4618      	mov	r0, r3
 8000474:	3714      	adds	r7, #20
 8000476:	46bd      	mov	sp, r7
 8000478:	f85d 7b04 	ldr.w	r7, [sp], #4
 800047c:	4770      	bx	lr
	...

08000480 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000480:	b580      	push	{r7, lr}
 8000482:	b086      	sub	sp, #24
 8000484:	af00      	add	r7, sp, #0
 8000486:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000488:	4a14      	ldr	r2, [pc, #80]	; (80004dc <_sbrk+0x5c>)
 800048a:	4b15      	ldr	r3, [pc, #84]	; (80004e0 <_sbrk+0x60>)
 800048c:	1ad3      	subs	r3, r2, r3
 800048e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000490:	697b      	ldr	r3, [r7, #20]
 8000492:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000494:	4b13      	ldr	r3, [pc, #76]	; (80004e4 <_sbrk+0x64>)
 8000496:	681b      	ldr	r3, [r3, #0]
 8000498:	2b00      	cmp	r3, #0
 800049a:	d102      	bne.n	80004a2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800049c:	4b11      	ldr	r3, [pc, #68]	; (80004e4 <_sbrk+0x64>)
 800049e:	4a12      	ldr	r2, [pc, #72]	; (80004e8 <_sbrk+0x68>)
 80004a0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80004a2:	4b10      	ldr	r3, [pc, #64]	; (80004e4 <_sbrk+0x64>)
 80004a4:	681a      	ldr	r2, [r3, #0]
 80004a6:	687b      	ldr	r3, [r7, #4]
 80004a8:	4413      	add	r3, r2
 80004aa:	693a      	ldr	r2, [r7, #16]
 80004ac:	429a      	cmp	r2, r3
 80004ae:	d207      	bcs.n	80004c0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80004b0:	f000 f916 	bl	80006e0 <__errno>
 80004b4:	4603      	mov	r3, r0
 80004b6:	220c      	movs	r2, #12
 80004b8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80004ba:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80004be:	e009      	b.n	80004d4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80004c0:	4b08      	ldr	r3, [pc, #32]	; (80004e4 <_sbrk+0x64>)
 80004c2:	681b      	ldr	r3, [r3, #0]
 80004c4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80004c6:	4b07      	ldr	r3, [pc, #28]	; (80004e4 <_sbrk+0x64>)
 80004c8:	681a      	ldr	r2, [r3, #0]
 80004ca:	687b      	ldr	r3, [r7, #4]
 80004cc:	4413      	add	r3, r2
 80004ce:	4a05      	ldr	r2, [pc, #20]	; (80004e4 <_sbrk+0x64>)
 80004d0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80004d2:	68fb      	ldr	r3, [r7, #12]
}
 80004d4:	4618      	mov	r0, r3
 80004d6:	3718      	adds	r7, #24
 80004d8:	46bd      	mov	sp, r7
 80004da:	bd80      	pop	{r7, pc}
 80004dc:	24080000 	.word	0x24080000
 80004e0:	00000400 	.word	0x00000400
 80004e4:	24000080 	.word	0x24000080
 80004e8:	24000098 	.word	0x24000098

080004ec <systick_init>:
#define CTRL_ENABLE			(1U << 0)
#define CTRL_CLKSRC			(1U << 2)
#define CTRL_COUNTFLG		(1U << 16)

void systick_init(void)
{
 80004ec:	b480      	push	{r7}
 80004ee:	af00      	add	r7, sp, #0
	// Reload with number of clocks per ms
	SysTick->LOAD = SYSTICK_LOAD_VAL;
 80004f0:	4b07      	ldr	r3, [pc, #28]	; (8000510 <systick_init+0x24>)
 80004f2:	f64b 3280 	movw	r2, #48000	; 0xbb80
 80004f6:	605a      	str	r2, [r3, #4]

	// clear systick current value register
	SysTick->VAL = 0;
 80004f8:	4b05      	ldr	r3, [pc, #20]	; (8000510 <systick_init+0x24>)
 80004fa:	2200      	movs	r2, #0
 80004fc:	609a      	str	r2, [r3, #8]

	// enable systick and select internal clock source
	SysTick->CTRL = CTRL_ENABLE | CTRL_CLKSRC;
 80004fe:	4b04      	ldr	r3, [pc, #16]	; (8000510 <systick_init+0x24>)
 8000500:	2205      	movs	r2, #5
 8000502:	601a      	str	r2, [r3, #0]
}
 8000504:	bf00      	nop
 8000506:	46bd      	mov	sp, r7
 8000508:	f85d 7b04 	ldr.w	r7, [sp], #4
 800050c:	4770      	bx	lr
 800050e:	bf00      	nop
 8000510:	e000e010 	.word	0xe000e010

08000514 <systick_delay_ms>:
{
	SysTick->CTRL = 0;
}

void systick_delay_ms(int delay)
{
 8000514:	b480      	push	{r7}
 8000516:	b085      	sub	sp, #20
 8000518:	af00      	add	r7, sp, #0
 800051a:	6078      	str	r0, [r7, #4]
	for(int i = 0; i < delay; ++i)
 800051c:	2300      	movs	r3, #0
 800051e:	60fb      	str	r3, [r7, #12]
 8000520:	e009      	b.n	8000536 <systick_delay_ms+0x22>
	{
		// wait until count flag is set
		while(!(SysTick->CTRL & CTRL_COUNTFLG)) {}
 8000522:	bf00      	nop
 8000524:	4b09      	ldr	r3, [pc, #36]	; (800054c <systick_delay_ms+0x38>)
 8000526:	681b      	ldr	r3, [r3, #0]
 8000528:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800052c:	2b00      	cmp	r3, #0
 800052e:	d0f9      	beq.n	8000524 <systick_delay_ms+0x10>
	for(int i = 0; i < delay; ++i)
 8000530:	68fb      	ldr	r3, [r7, #12]
 8000532:	3301      	adds	r3, #1
 8000534:	60fb      	str	r3, [r7, #12]
 8000536:	68fa      	ldr	r2, [r7, #12]
 8000538:	687b      	ldr	r3, [r7, #4]
 800053a:	429a      	cmp	r2, r3
 800053c:	dbf1      	blt.n	8000522 <systick_delay_ms+0xe>
	}
}
 800053e:	bf00      	nop
 8000540:	bf00      	nop
 8000542:	3714      	adds	r7, #20
 8000544:	46bd      	mov	sp, r7
 8000546:	f85d 7b04 	ldr.w	r7, [sp], #4
 800054a:	4770      	bx	lr
 800054c:	e000e010 	.word	0xe000e010

08000550 <__io_putchar>:
static int32_t compute_uart_baudrate(uint32_t periph_clock, uint32_t baudrate);
void uart3_write(int ch);
int  uart3_read(void);

int __io_putchar(int ch)
{
 8000550:	b580      	push	{r7, lr}
 8000552:	b082      	sub	sp, #8
 8000554:	af00      	add	r7, sp, #0
 8000556:	6078      	str	r0, [r7, #4]
	uart3_write(ch);
 8000558:	6878      	ldr	r0, [r7, #4]
 800055a:	f000 f87f 	bl	800065c <uart3_write>
	return ch;
 800055e:	687b      	ldr	r3, [r7, #4]
}
 8000560:	4618      	mov	r0, r3
 8000562:	3708      	adds	r7, #8
 8000564:	46bd      	mov	sp, r7
 8000566:	bd80      	pop	{r7, pc}

08000568 <uart3_tx_init>:

void uart3_tx_init(void)
{
 8000568:	b580      	push	{r7, lr}
 800056a:	af00      	add	r7, sp, #0
	/* configure uart gpio pin */
	// enable clock access to gpiob
	RCC->AHB4ENR |= GPIOBEN;
 800056c:	4b26      	ldr	r3, [pc, #152]	; (8000608 <uart3_tx_init+0xa0>)
 800056e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000572:	4a25      	ldr	r2, [pc, #148]	; (8000608 <uart3_tx_init+0xa0>)
 8000574:	f043 0302 	orr.w	r3, r3, #2
 8000578:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0

	// set PB10 to alternate function mode
	GPIOB->MODER &= ~(1u << 20);
 800057c:	4b23      	ldr	r3, [pc, #140]	; (800060c <uart3_tx_init+0xa4>)
 800057e:	681b      	ldr	r3, [r3, #0]
 8000580:	4a22      	ldr	r2, [pc, #136]	; (800060c <uart3_tx_init+0xa4>)
 8000582:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8000586:	6013      	str	r3, [r2, #0]
	GPIOB->MODER |= (1u << 21);
 8000588:	4b20      	ldr	r3, [pc, #128]	; (800060c <uart3_tx_init+0xa4>)
 800058a:	681b      	ldr	r3, [r3, #0]
 800058c:	4a1f      	ldr	r2, [pc, #124]	; (800060c <uart3_tx_init+0xa4>)
 800058e:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8000592:	6013      	str	r3, [r2, #0]

	// set PB10 to alternate function type to UART_TX (AF7)
	GPIOB->AFR[1] |= (1u << 8);
 8000594:	4b1d      	ldr	r3, [pc, #116]	; (800060c <uart3_tx_init+0xa4>)
 8000596:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000598:	4a1c      	ldr	r2, [pc, #112]	; (800060c <uart3_tx_init+0xa4>)
 800059a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800059e:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOB->AFR[1] |= (1u << 9);
 80005a0:	4b1a      	ldr	r3, [pc, #104]	; (800060c <uart3_tx_init+0xa4>)
 80005a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80005a4:	4a19      	ldr	r2, [pc, #100]	; (800060c <uart3_tx_init+0xa4>)
 80005a6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80005aa:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOB->AFR[1] |= (1u << 10);
 80005ac:	4b17      	ldr	r3, [pc, #92]	; (800060c <uart3_tx_init+0xa4>)
 80005ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80005b0:	4a16      	ldr	r2, [pc, #88]	; (800060c <uart3_tx_init+0xa4>)
 80005b2:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80005b6:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOB->AFR[1] &= ~(1u << 11);
 80005b8:	4b14      	ldr	r3, [pc, #80]	; (800060c <uart3_tx_init+0xa4>)
 80005ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80005bc:	4a13      	ldr	r2, [pc, #76]	; (800060c <uart3_tx_init+0xa4>)
 80005be:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80005c2:	6253      	str	r3, [r2, #36]	; 0x24


	/* Configure the UART module */
	// enable clock access to uart3
	RCC->APB1LENR |= UART3EN;
 80005c4:	4b10      	ldr	r3, [pc, #64]	; (8000608 <uart3_tx_init+0xa0>)
 80005c6:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 80005ca:	4a0f      	ldr	r2, [pc, #60]	; (8000608 <uart3_tx_init+0xa0>)
 80005cc:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80005d0:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8

	// when configuring usart it should be disabled
	USART3->CR1 &= ~(CR1_UE);
 80005d4:	4b0e      	ldr	r3, [pc, #56]	; (8000610 <uart3_tx_init+0xa8>)
 80005d6:	681b      	ldr	r3, [r3, #0]
 80005d8:	4a0d      	ldr	r2, [pc, #52]	; (8000610 <uart3_tx_init+0xa8>)
 80005da:	f023 0301 	bic.w	r3, r3, #1
 80005de:	6013      	str	r3, [r2, #0]

	// configure baudrate
	uart_set_baudrate(USART3, APB1_CLK, UART_BAUDRATE);
 80005e0:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80005e4:	490b      	ldr	r1, [pc, #44]	; (8000614 <uart3_tx_init+0xac>)
 80005e6:	480a      	ldr	r0, [pc, #40]	; (8000610 <uart3_tx_init+0xa8>)
 80005e8:	f000 f816 	bl	8000618 <uart_set_baudrate>

	// configure transfer direction
	USART3->CR1 |= CR1_TE;
 80005ec:	4b08      	ldr	r3, [pc, #32]	; (8000610 <uart3_tx_init+0xa8>)
 80005ee:	681b      	ldr	r3, [r3, #0]
 80005f0:	4a07      	ldr	r2, [pc, #28]	; (8000610 <uart3_tx_init+0xa8>)
 80005f2:	f043 0308 	orr.w	r3, r3, #8
 80005f6:	6013      	str	r3, [r2, #0]

	// enable uart module
	USART3->CR1 |= CR1_UE;
 80005f8:	4b05      	ldr	r3, [pc, #20]	; (8000610 <uart3_tx_init+0xa8>)
 80005fa:	681b      	ldr	r3, [r3, #0]
 80005fc:	4a04      	ldr	r2, [pc, #16]	; (8000610 <uart3_tx_init+0xa8>)
 80005fe:	f043 0301 	orr.w	r3, r3, #1
 8000602:	6013      	str	r3, [r2, #0]
}
 8000604:	bf00      	nop
 8000606:	bd80      	pop	{r7, pc}
 8000608:	58024400 	.word	0x58024400
 800060c:	58020400 	.word	0x58020400
 8000610:	40004800 	.word	0x40004800
 8000614:	03d09000 	.word	0x03d09000

08000618 <uart_set_baudrate>:
	// enable uart module
	USART3->CR1 |= CR1_UE;
}

static void uart_set_baudrate(USART_TypeDef *USARTx, uint32_t periph_clock, uint32_t baudrate)
{
 8000618:	b580      	push	{r7, lr}
 800061a:	b084      	sub	sp, #16
 800061c:	af00      	add	r7, sp, #0
 800061e:	60f8      	str	r0, [r7, #12]
 8000620:	60b9      	str	r1, [r7, #8]
 8000622:	607a      	str	r2, [r7, #4]
	USARTx->BRR = compute_uart_baudrate(periph_clock, baudrate);
 8000624:	6879      	ldr	r1, [r7, #4]
 8000626:	68b8      	ldr	r0, [r7, #8]
 8000628:	f000 f808 	bl	800063c <compute_uart_baudrate>
 800062c:	4603      	mov	r3, r0
 800062e:	461a      	mov	r2, r3
 8000630:	68fb      	ldr	r3, [r7, #12]
 8000632:	60da      	str	r2, [r3, #12]
}
 8000634:	bf00      	nop
 8000636:	3710      	adds	r7, #16
 8000638:	46bd      	mov	sp, r7
 800063a:	bd80      	pop	{r7, pc}

0800063c <compute_uart_baudrate>:

static int32_t compute_uart_baudrate(uint32_t periph_clock, uint32_t baudrate)
{
 800063c:	b480      	push	{r7}
 800063e:	b083      	sub	sp, #12
 8000640:	af00      	add	r7, sp, #0
 8000642:	6078      	str	r0, [r7, #4]
 8000644:	6039      	str	r1, [r7, #0]
	return (periph_clock/baudrate);
 8000646:	687a      	ldr	r2, [r7, #4]
 8000648:	683b      	ldr	r3, [r7, #0]
 800064a:	fbb2 f3f3 	udiv	r3, r2, r3
}
 800064e:	4618      	mov	r0, r3
 8000650:	370c      	adds	r7, #12
 8000652:	46bd      	mov	sp, r7
 8000654:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000658:	4770      	bx	lr
	...

0800065c <uart3_write>:

void uart3_write(int ch)
{
 800065c:	b480      	push	{r7}
 800065e:	b083      	sub	sp, #12
 8000660:	af00      	add	r7, sp, #0
 8000662:	6078      	str	r0, [r7, #4]
	// make sure transmit data register is empty
	while( !(USART3->ISR & SR_TXE) ) {}
 8000664:	bf00      	nop
 8000666:	4b08      	ldr	r3, [pc, #32]	; (8000688 <uart3_write+0x2c>)
 8000668:	69db      	ldr	r3, [r3, #28]
 800066a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800066e:	2b00      	cmp	r3, #0
 8000670:	d0f9      	beq.n	8000666 <uart3_write+0xa>

	// write to transmit data register
	USART3->TDR = (ch & 0xFF);
 8000672:	687b      	ldr	r3, [r7, #4]
 8000674:	4a04      	ldr	r2, [pc, #16]	; (8000688 <uart3_write+0x2c>)
 8000676:	b2db      	uxtb	r3, r3
 8000678:	6293      	str	r3, [r2, #40]	; 0x28
}
 800067a:	bf00      	nop
 800067c:	370c      	adds	r7, #12
 800067e:	46bd      	mov	sp, r7
 8000680:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000684:	4770      	bx	lr
 8000686:	bf00      	nop
 8000688:	40004800 	.word	0x40004800

0800068c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800068c:	480d      	ldr	r0, [pc, #52]	; (80006c4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800068e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000690:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000694:	480c      	ldr	r0, [pc, #48]	; (80006c8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000696:	490d      	ldr	r1, [pc, #52]	; (80006cc <LoopForever+0xa>)
  ldr r2, =_sidata
 8000698:	4a0d      	ldr	r2, [pc, #52]	; (80006d0 <LoopForever+0xe>)
  movs r3, #0
 800069a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800069c:	e002      	b.n	80006a4 <LoopCopyDataInit>

0800069e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800069e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80006a0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80006a2:	3304      	adds	r3, #4

080006a4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80006a4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80006a6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80006a8:	d3f9      	bcc.n	800069e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80006aa:	4a0a      	ldr	r2, [pc, #40]	; (80006d4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80006ac:	4c0a      	ldr	r4, [pc, #40]	; (80006d8 <LoopForever+0x16>)
  movs r3, #0
 80006ae:	2300      	movs	r3, #0
  b LoopFillZerobss
 80006b0:	e001      	b.n	80006b6 <LoopFillZerobss>

080006b2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80006b2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80006b4:	3204      	adds	r2, #4

080006b6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80006b6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80006b8:	d3fb      	bcc.n	80006b2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80006ba:	f000 f817 	bl	80006ec <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80006be:	f7ff fe5f 	bl	8000380 <main>

080006c2 <LoopForever>:

LoopForever:
    b LoopForever
 80006c2:	e7fe      	b.n	80006c2 <LoopForever>
  ldr   r0, =_estack
 80006c4:	24080000 	.word	0x24080000
  ldr r0, =_sdata
 80006c8:	24000000 	.word	0x24000000
  ldr r1, =_edata
 80006cc:	24000064 	.word	0x24000064
  ldr r2, =_sidata
 80006d0:	08001724 	.word	0x08001724
  ldr r2, =_sbss
 80006d4:	24000064 	.word	0x24000064
  ldr r4, =_ebss
 80006d8:	24000094 	.word	0x24000094

080006dc <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80006dc:	e7fe      	b.n	80006dc <ADC1_2_IRQHandler>
	...

080006e0 <__errno>:
 80006e0:	4b01      	ldr	r3, [pc, #4]	; (80006e8 <__errno+0x8>)
 80006e2:	6818      	ldr	r0, [r3, #0]
 80006e4:	4770      	bx	lr
 80006e6:	bf00      	nop
 80006e8:	24000000 	.word	0x24000000

080006ec <__libc_init_array>:
 80006ec:	b570      	push	{r4, r5, r6, lr}
 80006ee:	4d0d      	ldr	r5, [pc, #52]	; (8000724 <__libc_init_array+0x38>)
 80006f0:	4c0d      	ldr	r4, [pc, #52]	; (8000728 <__libc_init_array+0x3c>)
 80006f2:	1b64      	subs	r4, r4, r5
 80006f4:	10a4      	asrs	r4, r4, #2
 80006f6:	2600      	movs	r6, #0
 80006f8:	42a6      	cmp	r6, r4
 80006fa:	d109      	bne.n	8000710 <__libc_init_array+0x24>
 80006fc:	4d0b      	ldr	r5, [pc, #44]	; (800072c <__libc_init_array+0x40>)
 80006fe:	4c0c      	ldr	r4, [pc, #48]	; (8000730 <__libc_init_array+0x44>)
 8000700:	f000 ffa8 	bl	8001654 <_init>
 8000704:	1b64      	subs	r4, r4, r5
 8000706:	10a4      	asrs	r4, r4, #2
 8000708:	2600      	movs	r6, #0
 800070a:	42a6      	cmp	r6, r4
 800070c:	d105      	bne.n	800071a <__libc_init_array+0x2e>
 800070e:	bd70      	pop	{r4, r5, r6, pc}
 8000710:	f855 3b04 	ldr.w	r3, [r5], #4
 8000714:	4798      	blx	r3
 8000716:	3601      	adds	r6, #1
 8000718:	e7ee      	b.n	80006f8 <__libc_init_array+0xc>
 800071a:	f855 3b04 	ldr.w	r3, [r5], #4
 800071e:	4798      	blx	r3
 8000720:	3601      	adds	r6, #1
 8000722:	e7f2      	b.n	800070a <__libc_init_array+0x1e>
 8000724:	0800171c 	.word	0x0800171c
 8000728:	0800171c 	.word	0x0800171c
 800072c:	0800171c 	.word	0x0800171c
 8000730:	08001720 	.word	0x08001720

08000734 <memset>:
 8000734:	4402      	add	r2, r0
 8000736:	4603      	mov	r3, r0
 8000738:	4293      	cmp	r3, r2
 800073a:	d100      	bne.n	800073e <memset+0xa>
 800073c:	4770      	bx	lr
 800073e:	f803 1b01 	strb.w	r1, [r3], #1
 8000742:	e7f9      	b.n	8000738 <memset+0x4>

08000744 <iprintf>:
 8000744:	b40f      	push	{r0, r1, r2, r3}
 8000746:	4b0a      	ldr	r3, [pc, #40]	; (8000770 <iprintf+0x2c>)
 8000748:	b513      	push	{r0, r1, r4, lr}
 800074a:	681c      	ldr	r4, [r3, #0]
 800074c:	b124      	cbz	r4, 8000758 <iprintf+0x14>
 800074e:	69a3      	ldr	r3, [r4, #24]
 8000750:	b913      	cbnz	r3, 8000758 <iprintf+0x14>
 8000752:	4620      	mov	r0, r4
 8000754:	f000 f866 	bl	8000824 <__sinit>
 8000758:	ab05      	add	r3, sp, #20
 800075a:	9a04      	ldr	r2, [sp, #16]
 800075c:	68a1      	ldr	r1, [r4, #8]
 800075e:	9301      	str	r3, [sp, #4]
 8000760:	4620      	mov	r0, r4
 8000762:	f000 f9bd 	bl	8000ae0 <_vfiprintf_r>
 8000766:	b002      	add	sp, #8
 8000768:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800076c:	b004      	add	sp, #16
 800076e:	4770      	bx	lr
 8000770:	24000000 	.word	0x24000000

08000774 <std>:
 8000774:	2300      	movs	r3, #0
 8000776:	b510      	push	{r4, lr}
 8000778:	4604      	mov	r4, r0
 800077a:	e9c0 3300 	strd	r3, r3, [r0]
 800077e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000782:	6083      	str	r3, [r0, #8]
 8000784:	8181      	strh	r1, [r0, #12]
 8000786:	6643      	str	r3, [r0, #100]	; 0x64
 8000788:	81c2      	strh	r2, [r0, #14]
 800078a:	6183      	str	r3, [r0, #24]
 800078c:	4619      	mov	r1, r3
 800078e:	2208      	movs	r2, #8
 8000790:	305c      	adds	r0, #92	; 0x5c
 8000792:	f7ff ffcf 	bl	8000734 <memset>
 8000796:	4b05      	ldr	r3, [pc, #20]	; (80007ac <std+0x38>)
 8000798:	6263      	str	r3, [r4, #36]	; 0x24
 800079a:	4b05      	ldr	r3, [pc, #20]	; (80007b0 <std+0x3c>)
 800079c:	62a3      	str	r3, [r4, #40]	; 0x28
 800079e:	4b05      	ldr	r3, [pc, #20]	; (80007b4 <std+0x40>)
 80007a0:	62e3      	str	r3, [r4, #44]	; 0x2c
 80007a2:	4b05      	ldr	r3, [pc, #20]	; (80007b8 <std+0x44>)
 80007a4:	6224      	str	r4, [r4, #32]
 80007a6:	6323      	str	r3, [r4, #48]	; 0x30
 80007a8:	bd10      	pop	{r4, pc}
 80007aa:	bf00      	nop
 80007ac:	08000d5d 	.word	0x08000d5d
 80007b0:	08000d7f 	.word	0x08000d7f
 80007b4:	08000db7 	.word	0x08000db7
 80007b8:	08000ddb 	.word	0x08000ddb

080007bc <_cleanup_r>:
 80007bc:	4901      	ldr	r1, [pc, #4]	; (80007c4 <_cleanup_r+0x8>)
 80007be:	f000 b8af 	b.w	8000920 <_fwalk_reent>
 80007c2:	bf00      	nop
 80007c4:	080010b5 	.word	0x080010b5

080007c8 <__sfmoreglue>:
 80007c8:	b570      	push	{r4, r5, r6, lr}
 80007ca:	2368      	movs	r3, #104	; 0x68
 80007cc:	1e4d      	subs	r5, r1, #1
 80007ce:	435d      	muls	r5, r3
 80007d0:	460e      	mov	r6, r1
 80007d2:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80007d6:	f000 f8e5 	bl	80009a4 <_malloc_r>
 80007da:	4604      	mov	r4, r0
 80007dc:	b140      	cbz	r0, 80007f0 <__sfmoreglue+0x28>
 80007de:	2100      	movs	r1, #0
 80007e0:	e9c0 1600 	strd	r1, r6, [r0]
 80007e4:	300c      	adds	r0, #12
 80007e6:	60a0      	str	r0, [r4, #8]
 80007e8:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80007ec:	f7ff ffa2 	bl	8000734 <memset>
 80007f0:	4620      	mov	r0, r4
 80007f2:	bd70      	pop	{r4, r5, r6, pc}

080007f4 <__sfp_lock_acquire>:
 80007f4:	4801      	ldr	r0, [pc, #4]	; (80007fc <__sfp_lock_acquire+0x8>)
 80007f6:	f000 b8b3 	b.w	8000960 <__retarget_lock_acquire_recursive>
 80007fa:	bf00      	nop
 80007fc:	24000085 	.word	0x24000085

08000800 <__sfp_lock_release>:
 8000800:	4801      	ldr	r0, [pc, #4]	; (8000808 <__sfp_lock_release+0x8>)
 8000802:	f000 b8ae 	b.w	8000962 <__retarget_lock_release_recursive>
 8000806:	bf00      	nop
 8000808:	24000085 	.word	0x24000085

0800080c <__sinit_lock_acquire>:
 800080c:	4801      	ldr	r0, [pc, #4]	; (8000814 <__sinit_lock_acquire+0x8>)
 800080e:	f000 b8a7 	b.w	8000960 <__retarget_lock_acquire_recursive>
 8000812:	bf00      	nop
 8000814:	24000086 	.word	0x24000086

08000818 <__sinit_lock_release>:
 8000818:	4801      	ldr	r0, [pc, #4]	; (8000820 <__sinit_lock_release+0x8>)
 800081a:	f000 b8a2 	b.w	8000962 <__retarget_lock_release_recursive>
 800081e:	bf00      	nop
 8000820:	24000086 	.word	0x24000086

08000824 <__sinit>:
 8000824:	b510      	push	{r4, lr}
 8000826:	4604      	mov	r4, r0
 8000828:	f7ff fff0 	bl	800080c <__sinit_lock_acquire>
 800082c:	69a3      	ldr	r3, [r4, #24]
 800082e:	b11b      	cbz	r3, 8000838 <__sinit+0x14>
 8000830:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000834:	f7ff bff0 	b.w	8000818 <__sinit_lock_release>
 8000838:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800083c:	6523      	str	r3, [r4, #80]	; 0x50
 800083e:	4b13      	ldr	r3, [pc, #76]	; (800088c <__sinit+0x68>)
 8000840:	4a13      	ldr	r2, [pc, #76]	; (8000890 <__sinit+0x6c>)
 8000842:	681b      	ldr	r3, [r3, #0]
 8000844:	62a2      	str	r2, [r4, #40]	; 0x28
 8000846:	42a3      	cmp	r3, r4
 8000848:	bf04      	itt	eq
 800084a:	2301      	moveq	r3, #1
 800084c:	61a3      	streq	r3, [r4, #24]
 800084e:	4620      	mov	r0, r4
 8000850:	f000 f820 	bl	8000894 <__sfp>
 8000854:	6060      	str	r0, [r4, #4]
 8000856:	4620      	mov	r0, r4
 8000858:	f000 f81c 	bl	8000894 <__sfp>
 800085c:	60a0      	str	r0, [r4, #8]
 800085e:	4620      	mov	r0, r4
 8000860:	f000 f818 	bl	8000894 <__sfp>
 8000864:	2200      	movs	r2, #0
 8000866:	60e0      	str	r0, [r4, #12]
 8000868:	2104      	movs	r1, #4
 800086a:	6860      	ldr	r0, [r4, #4]
 800086c:	f7ff ff82 	bl	8000774 <std>
 8000870:	68a0      	ldr	r0, [r4, #8]
 8000872:	2201      	movs	r2, #1
 8000874:	2109      	movs	r1, #9
 8000876:	f7ff ff7d 	bl	8000774 <std>
 800087a:	68e0      	ldr	r0, [r4, #12]
 800087c:	2202      	movs	r2, #2
 800087e:	2112      	movs	r1, #18
 8000880:	f7ff ff78 	bl	8000774 <std>
 8000884:	2301      	movs	r3, #1
 8000886:	61a3      	str	r3, [r4, #24]
 8000888:	e7d2      	b.n	8000830 <__sinit+0xc>
 800088a:	bf00      	nop
 800088c:	08001684 	.word	0x08001684
 8000890:	080007bd 	.word	0x080007bd

08000894 <__sfp>:
 8000894:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000896:	4607      	mov	r7, r0
 8000898:	f7ff ffac 	bl	80007f4 <__sfp_lock_acquire>
 800089c:	4b1e      	ldr	r3, [pc, #120]	; (8000918 <__sfp+0x84>)
 800089e:	681e      	ldr	r6, [r3, #0]
 80008a0:	69b3      	ldr	r3, [r6, #24]
 80008a2:	b913      	cbnz	r3, 80008aa <__sfp+0x16>
 80008a4:	4630      	mov	r0, r6
 80008a6:	f7ff ffbd 	bl	8000824 <__sinit>
 80008aa:	3648      	adds	r6, #72	; 0x48
 80008ac:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80008b0:	3b01      	subs	r3, #1
 80008b2:	d503      	bpl.n	80008bc <__sfp+0x28>
 80008b4:	6833      	ldr	r3, [r6, #0]
 80008b6:	b30b      	cbz	r3, 80008fc <__sfp+0x68>
 80008b8:	6836      	ldr	r6, [r6, #0]
 80008ba:	e7f7      	b.n	80008ac <__sfp+0x18>
 80008bc:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80008c0:	b9d5      	cbnz	r5, 80008f8 <__sfp+0x64>
 80008c2:	4b16      	ldr	r3, [pc, #88]	; (800091c <__sfp+0x88>)
 80008c4:	60e3      	str	r3, [r4, #12]
 80008c6:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80008ca:	6665      	str	r5, [r4, #100]	; 0x64
 80008cc:	f000 f847 	bl	800095e <__retarget_lock_init_recursive>
 80008d0:	f7ff ff96 	bl	8000800 <__sfp_lock_release>
 80008d4:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80008d8:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80008dc:	6025      	str	r5, [r4, #0]
 80008de:	61a5      	str	r5, [r4, #24]
 80008e0:	2208      	movs	r2, #8
 80008e2:	4629      	mov	r1, r5
 80008e4:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80008e8:	f7ff ff24 	bl	8000734 <memset>
 80008ec:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80008f0:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80008f4:	4620      	mov	r0, r4
 80008f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80008f8:	3468      	adds	r4, #104	; 0x68
 80008fa:	e7d9      	b.n	80008b0 <__sfp+0x1c>
 80008fc:	2104      	movs	r1, #4
 80008fe:	4638      	mov	r0, r7
 8000900:	f7ff ff62 	bl	80007c8 <__sfmoreglue>
 8000904:	4604      	mov	r4, r0
 8000906:	6030      	str	r0, [r6, #0]
 8000908:	2800      	cmp	r0, #0
 800090a:	d1d5      	bne.n	80008b8 <__sfp+0x24>
 800090c:	f7ff ff78 	bl	8000800 <__sfp_lock_release>
 8000910:	230c      	movs	r3, #12
 8000912:	603b      	str	r3, [r7, #0]
 8000914:	e7ee      	b.n	80008f4 <__sfp+0x60>
 8000916:	bf00      	nop
 8000918:	08001684 	.word	0x08001684
 800091c:	ffff0001 	.word	0xffff0001

08000920 <_fwalk_reent>:
 8000920:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000924:	4606      	mov	r6, r0
 8000926:	4688      	mov	r8, r1
 8000928:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800092c:	2700      	movs	r7, #0
 800092e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000932:	f1b9 0901 	subs.w	r9, r9, #1
 8000936:	d505      	bpl.n	8000944 <_fwalk_reent+0x24>
 8000938:	6824      	ldr	r4, [r4, #0]
 800093a:	2c00      	cmp	r4, #0
 800093c:	d1f7      	bne.n	800092e <_fwalk_reent+0xe>
 800093e:	4638      	mov	r0, r7
 8000940:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000944:	89ab      	ldrh	r3, [r5, #12]
 8000946:	2b01      	cmp	r3, #1
 8000948:	d907      	bls.n	800095a <_fwalk_reent+0x3a>
 800094a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800094e:	3301      	adds	r3, #1
 8000950:	d003      	beq.n	800095a <_fwalk_reent+0x3a>
 8000952:	4629      	mov	r1, r5
 8000954:	4630      	mov	r0, r6
 8000956:	47c0      	blx	r8
 8000958:	4307      	orrs	r7, r0
 800095a:	3568      	adds	r5, #104	; 0x68
 800095c:	e7e9      	b.n	8000932 <_fwalk_reent+0x12>

0800095e <__retarget_lock_init_recursive>:
 800095e:	4770      	bx	lr

08000960 <__retarget_lock_acquire_recursive>:
 8000960:	4770      	bx	lr

08000962 <__retarget_lock_release_recursive>:
 8000962:	4770      	bx	lr

08000964 <sbrk_aligned>:
 8000964:	b570      	push	{r4, r5, r6, lr}
 8000966:	4e0e      	ldr	r6, [pc, #56]	; (80009a0 <sbrk_aligned+0x3c>)
 8000968:	460c      	mov	r4, r1
 800096a:	6831      	ldr	r1, [r6, #0]
 800096c:	4605      	mov	r5, r0
 800096e:	b911      	cbnz	r1, 8000976 <sbrk_aligned+0x12>
 8000970:	f000 f9e4 	bl	8000d3c <_sbrk_r>
 8000974:	6030      	str	r0, [r6, #0]
 8000976:	4621      	mov	r1, r4
 8000978:	4628      	mov	r0, r5
 800097a:	f000 f9df 	bl	8000d3c <_sbrk_r>
 800097e:	1c43      	adds	r3, r0, #1
 8000980:	d00a      	beq.n	8000998 <sbrk_aligned+0x34>
 8000982:	1cc4      	adds	r4, r0, #3
 8000984:	f024 0403 	bic.w	r4, r4, #3
 8000988:	42a0      	cmp	r0, r4
 800098a:	d007      	beq.n	800099c <sbrk_aligned+0x38>
 800098c:	1a21      	subs	r1, r4, r0
 800098e:	4628      	mov	r0, r5
 8000990:	f000 f9d4 	bl	8000d3c <_sbrk_r>
 8000994:	3001      	adds	r0, #1
 8000996:	d101      	bne.n	800099c <sbrk_aligned+0x38>
 8000998:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 800099c:	4620      	mov	r0, r4
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	2400008c 	.word	0x2400008c

080009a4 <_malloc_r>:
 80009a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80009a8:	1ccd      	adds	r5, r1, #3
 80009aa:	f025 0503 	bic.w	r5, r5, #3
 80009ae:	3508      	adds	r5, #8
 80009b0:	2d0c      	cmp	r5, #12
 80009b2:	bf38      	it	cc
 80009b4:	250c      	movcc	r5, #12
 80009b6:	2d00      	cmp	r5, #0
 80009b8:	4607      	mov	r7, r0
 80009ba:	db01      	blt.n	80009c0 <_malloc_r+0x1c>
 80009bc:	42a9      	cmp	r1, r5
 80009be:	d905      	bls.n	80009cc <_malloc_r+0x28>
 80009c0:	230c      	movs	r3, #12
 80009c2:	603b      	str	r3, [r7, #0]
 80009c4:	2600      	movs	r6, #0
 80009c6:	4630      	mov	r0, r6
 80009c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80009cc:	4e2e      	ldr	r6, [pc, #184]	; (8000a88 <_malloc_r+0xe4>)
 80009ce:	f000 fc25 	bl	800121c <__malloc_lock>
 80009d2:	6833      	ldr	r3, [r6, #0]
 80009d4:	461c      	mov	r4, r3
 80009d6:	bb34      	cbnz	r4, 8000a26 <_malloc_r+0x82>
 80009d8:	4629      	mov	r1, r5
 80009da:	4638      	mov	r0, r7
 80009dc:	f7ff ffc2 	bl	8000964 <sbrk_aligned>
 80009e0:	1c43      	adds	r3, r0, #1
 80009e2:	4604      	mov	r4, r0
 80009e4:	d14d      	bne.n	8000a82 <_malloc_r+0xde>
 80009e6:	6834      	ldr	r4, [r6, #0]
 80009e8:	4626      	mov	r6, r4
 80009ea:	2e00      	cmp	r6, #0
 80009ec:	d140      	bne.n	8000a70 <_malloc_r+0xcc>
 80009ee:	6823      	ldr	r3, [r4, #0]
 80009f0:	4631      	mov	r1, r6
 80009f2:	4638      	mov	r0, r7
 80009f4:	eb04 0803 	add.w	r8, r4, r3
 80009f8:	f000 f9a0 	bl	8000d3c <_sbrk_r>
 80009fc:	4580      	cmp	r8, r0
 80009fe:	d13a      	bne.n	8000a76 <_malloc_r+0xd2>
 8000a00:	6823      	ldr	r3, [r4, #0]
 8000a02:	3503      	adds	r5, #3
 8000a04:	1aed      	subs	r5, r5, r3
 8000a06:	f025 0503 	bic.w	r5, r5, #3
 8000a0a:	3508      	adds	r5, #8
 8000a0c:	2d0c      	cmp	r5, #12
 8000a0e:	bf38      	it	cc
 8000a10:	250c      	movcc	r5, #12
 8000a12:	4629      	mov	r1, r5
 8000a14:	4638      	mov	r0, r7
 8000a16:	f7ff ffa5 	bl	8000964 <sbrk_aligned>
 8000a1a:	3001      	adds	r0, #1
 8000a1c:	d02b      	beq.n	8000a76 <_malloc_r+0xd2>
 8000a1e:	6823      	ldr	r3, [r4, #0]
 8000a20:	442b      	add	r3, r5
 8000a22:	6023      	str	r3, [r4, #0]
 8000a24:	e00e      	b.n	8000a44 <_malloc_r+0xa0>
 8000a26:	6822      	ldr	r2, [r4, #0]
 8000a28:	1b52      	subs	r2, r2, r5
 8000a2a:	d41e      	bmi.n	8000a6a <_malloc_r+0xc6>
 8000a2c:	2a0b      	cmp	r2, #11
 8000a2e:	d916      	bls.n	8000a5e <_malloc_r+0xba>
 8000a30:	1961      	adds	r1, r4, r5
 8000a32:	42a3      	cmp	r3, r4
 8000a34:	6025      	str	r5, [r4, #0]
 8000a36:	bf18      	it	ne
 8000a38:	6059      	strne	r1, [r3, #4]
 8000a3a:	6863      	ldr	r3, [r4, #4]
 8000a3c:	bf08      	it	eq
 8000a3e:	6031      	streq	r1, [r6, #0]
 8000a40:	5162      	str	r2, [r4, r5]
 8000a42:	604b      	str	r3, [r1, #4]
 8000a44:	4638      	mov	r0, r7
 8000a46:	f104 060b 	add.w	r6, r4, #11
 8000a4a:	f000 fbed 	bl	8001228 <__malloc_unlock>
 8000a4e:	f026 0607 	bic.w	r6, r6, #7
 8000a52:	1d23      	adds	r3, r4, #4
 8000a54:	1af2      	subs	r2, r6, r3
 8000a56:	d0b6      	beq.n	80009c6 <_malloc_r+0x22>
 8000a58:	1b9b      	subs	r3, r3, r6
 8000a5a:	50a3      	str	r3, [r4, r2]
 8000a5c:	e7b3      	b.n	80009c6 <_malloc_r+0x22>
 8000a5e:	6862      	ldr	r2, [r4, #4]
 8000a60:	42a3      	cmp	r3, r4
 8000a62:	bf0c      	ite	eq
 8000a64:	6032      	streq	r2, [r6, #0]
 8000a66:	605a      	strne	r2, [r3, #4]
 8000a68:	e7ec      	b.n	8000a44 <_malloc_r+0xa0>
 8000a6a:	4623      	mov	r3, r4
 8000a6c:	6864      	ldr	r4, [r4, #4]
 8000a6e:	e7b2      	b.n	80009d6 <_malloc_r+0x32>
 8000a70:	4634      	mov	r4, r6
 8000a72:	6876      	ldr	r6, [r6, #4]
 8000a74:	e7b9      	b.n	80009ea <_malloc_r+0x46>
 8000a76:	230c      	movs	r3, #12
 8000a78:	603b      	str	r3, [r7, #0]
 8000a7a:	4638      	mov	r0, r7
 8000a7c:	f000 fbd4 	bl	8001228 <__malloc_unlock>
 8000a80:	e7a1      	b.n	80009c6 <_malloc_r+0x22>
 8000a82:	6025      	str	r5, [r4, #0]
 8000a84:	e7de      	b.n	8000a44 <_malloc_r+0xa0>
 8000a86:	bf00      	nop
 8000a88:	24000088 	.word	0x24000088

08000a8c <__sfputc_r>:
 8000a8c:	6893      	ldr	r3, [r2, #8]
 8000a8e:	3b01      	subs	r3, #1
 8000a90:	2b00      	cmp	r3, #0
 8000a92:	b410      	push	{r4}
 8000a94:	6093      	str	r3, [r2, #8]
 8000a96:	da08      	bge.n	8000aaa <__sfputc_r+0x1e>
 8000a98:	6994      	ldr	r4, [r2, #24]
 8000a9a:	42a3      	cmp	r3, r4
 8000a9c:	db01      	blt.n	8000aa2 <__sfputc_r+0x16>
 8000a9e:	290a      	cmp	r1, #10
 8000aa0:	d103      	bne.n	8000aaa <__sfputc_r+0x1e>
 8000aa2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000aa6:	f000 b99d 	b.w	8000de4 <__swbuf_r>
 8000aaa:	6813      	ldr	r3, [r2, #0]
 8000aac:	1c58      	adds	r0, r3, #1
 8000aae:	6010      	str	r0, [r2, #0]
 8000ab0:	7019      	strb	r1, [r3, #0]
 8000ab2:	4608      	mov	r0, r1
 8000ab4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000ab8:	4770      	bx	lr

08000aba <__sfputs_r>:
 8000aba:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000abc:	4606      	mov	r6, r0
 8000abe:	460f      	mov	r7, r1
 8000ac0:	4614      	mov	r4, r2
 8000ac2:	18d5      	adds	r5, r2, r3
 8000ac4:	42ac      	cmp	r4, r5
 8000ac6:	d101      	bne.n	8000acc <__sfputs_r+0x12>
 8000ac8:	2000      	movs	r0, #0
 8000aca:	e007      	b.n	8000adc <__sfputs_r+0x22>
 8000acc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000ad0:	463a      	mov	r2, r7
 8000ad2:	4630      	mov	r0, r6
 8000ad4:	f7ff ffda 	bl	8000a8c <__sfputc_r>
 8000ad8:	1c43      	adds	r3, r0, #1
 8000ada:	d1f3      	bne.n	8000ac4 <__sfputs_r+0xa>
 8000adc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000ae0 <_vfiprintf_r>:
 8000ae0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000ae4:	460d      	mov	r5, r1
 8000ae6:	b09d      	sub	sp, #116	; 0x74
 8000ae8:	4614      	mov	r4, r2
 8000aea:	4698      	mov	r8, r3
 8000aec:	4606      	mov	r6, r0
 8000aee:	b118      	cbz	r0, 8000af8 <_vfiprintf_r+0x18>
 8000af0:	6983      	ldr	r3, [r0, #24]
 8000af2:	b90b      	cbnz	r3, 8000af8 <_vfiprintf_r+0x18>
 8000af4:	f7ff fe96 	bl	8000824 <__sinit>
 8000af8:	4b88      	ldr	r3, [pc, #544]	; (8000d1c <_vfiprintf_r+0x23c>)
 8000afa:	429d      	cmp	r5, r3
 8000afc:	d11b      	bne.n	8000b36 <_vfiprintf_r+0x56>
 8000afe:	6875      	ldr	r5, [r6, #4]
 8000b00:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000b02:	07d9      	lsls	r1, r3, #31
 8000b04:	d405      	bmi.n	8000b12 <_vfiprintf_r+0x32>
 8000b06:	89ab      	ldrh	r3, [r5, #12]
 8000b08:	059a      	lsls	r2, r3, #22
 8000b0a:	d402      	bmi.n	8000b12 <_vfiprintf_r+0x32>
 8000b0c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000b0e:	f7ff ff27 	bl	8000960 <__retarget_lock_acquire_recursive>
 8000b12:	89ab      	ldrh	r3, [r5, #12]
 8000b14:	071b      	lsls	r3, r3, #28
 8000b16:	d501      	bpl.n	8000b1c <_vfiprintf_r+0x3c>
 8000b18:	692b      	ldr	r3, [r5, #16]
 8000b1a:	b9eb      	cbnz	r3, 8000b58 <_vfiprintf_r+0x78>
 8000b1c:	4629      	mov	r1, r5
 8000b1e:	4630      	mov	r0, r6
 8000b20:	f000 f9c4 	bl	8000eac <__swsetup_r>
 8000b24:	b1c0      	cbz	r0, 8000b58 <_vfiprintf_r+0x78>
 8000b26:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000b28:	07dc      	lsls	r4, r3, #31
 8000b2a:	d50e      	bpl.n	8000b4a <_vfiprintf_r+0x6a>
 8000b2c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000b30:	b01d      	add	sp, #116	; 0x74
 8000b32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000b36:	4b7a      	ldr	r3, [pc, #488]	; (8000d20 <_vfiprintf_r+0x240>)
 8000b38:	429d      	cmp	r5, r3
 8000b3a:	d101      	bne.n	8000b40 <_vfiprintf_r+0x60>
 8000b3c:	68b5      	ldr	r5, [r6, #8]
 8000b3e:	e7df      	b.n	8000b00 <_vfiprintf_r+0x20>
 8000b40:	4b78      	ldr	r3, [pc, #480]	; (8000d24 <_vfiprintf_r+0x244>)
 8000b42:	429d      	cmp	r5, r3
 8000b44:	bf08      	it	eq
 8000b46:	68f5      	ldreq	r5, [r6, #12]
 8000b48:	e7da      	b.n	8000b00 <_vfiprintf_r+0x20>
 8000b4a:	89ab      	ldrh	r3, [r5, #12]
 8000b4c:	0598      	lsls	r0, r3, #22
 8000b4e:	d4ed      	bmi.n	8000b2c <_vfiprintf_r+0x4c>
 8000b50:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000b52:	f7ff ff06 	bl	8000962 <__retarget_lock_release_recursive>
 8000b56:	e7e9      	b.n	8000b2c <_vfiprintf_r+0x4c>
 8000b58:	2300      	movs	r3, #0
 8000b5a:	9309      	str	r3, [sp, #36]	; 0x24
 8000b5c:	2320      	movs	r3, #32
 8000b5e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000b62:	f8cd 800c 	str.w	r8, [sp, #12]
 8000b66:	2330      	movs	r3, #48	; 0x30
 8000b68:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 8000d28 <_vfiprintf_r+0x248>
 8000b6c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000b70:	f04f 0901 	mov.w	r9, #1
 8000b74:	4623      	mov	r3, r4
 8000b76:	469a      	mov	sl, r3
 8000b78:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000b7c:	b10a      	cbz	r2, 8000b82 <_vfiprintf_r+0xa2>
 8000b7e:	2a25      	cmp	r2, #37	; 0x25
 8000b80:	d1f9      	bne.n	8000b76 <_vfiprintf_r+0x96>
 8000b82:	ebba 0b04 	subs.w	fp, sl, r4
 8000b86:	d00b      	beq.n	8000ba0 <_vfiprintf_r+0xc0>
 8000b88:	465b      	mov	r3, fp
 8000b8a:	4622      	mov	r2, r4
 8000b8c:	4629      	mov	r1, r5
 8000b8e:	4630      	mov	r0, r6
 8000b90:	f7ff ff93 	bl	8000aba <__sfputs_r>
 8000b94:	3001      	adds	r0, #1
 8000b96:	f000 80a9 	beq.w	8000cec <_vfiprintf_r+0x20c>
 8000b9a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000b9c:	445a      	add	r2, fp
 8000b9e:	9209      	str	r2, [sp, #36]	; 0x24
 8000ba0:	f89a 3000 	ldrb.w	r3, [sl]
 8000ba4:	2b00      	cmp	r3, #0
 8000ba6:	f000 80a1 	beq.w	8000cec <_vfiprintf_r+0x20c>
 8000baa:	2300      	movs	r3, #0
 8000bac:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000bb0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000bb4:	f10a 0a01 	add.w	sl, sl, #1
 8000bb8:	9304      	str	r3, [sp, #16]
 8000bba:	9307      	str	r3, [sp, #28]
 8000bbc:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000bc0:	931a      	str	r3, [sp, #104]	; 0x68
 8000bc2:	4654      	mov	r4, sl
 8000bc4:	2205      	movs	r2, #5
 8000bc6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000bca:	4857      	ldr	r0, [pc, #348]	; (8000d28 <_vfiprintf_r+0x248>)
 8000bcc:	f7ff fb68 	bl	80002a0 <memchr>
 8000bd0:	9a04      	ldr	r2, [sp, #16]
 8000bd2:	b9d8      	cbnz	r0, 8000c0c <_vfiprintf_r+0x12c>
 8000bd4:	06d1      	lsls	r1, r2, #27
 8000bd6:	bf44      	itt	mi
 8000bd8:	2320      	movmi	r3, #32
 8000bda:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000bde:	0713      	lsls	r3, r2, #28
 8000be0:	bf44      	itt	mi
 8000be2:	232b      	movmi	r3, #43	; 0x2b
 8000be4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000be8:	f89a 3000 	ldrb.w	r3, [sl]
 8000bec:	2b2a      	cmp	r3, #42	; 0x2a
 8000bee:	d015      	beq.n	8000c1c <_vfiprintf_r+0x13c>
 8000bf0:	9a07      	ldr	r2, [sp, #28]
 8000bf2:	4654      	mov	r4, sl
 8000bf4:	2000      	movs	r0, #0
 8000bf6:	f04f 0c0a 	mov.w	ip, #10
 8000bfa:	4621      	mov	r1, r4
 8000bfc:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000c00:	3b30      	subs	r3, #48	; 0x30
 8000c02:	2b09      	cmp	r3, #9
 8000c04:	d94d      	bls.n	8000ca2 <_vfiprintf_r+0x1c2>
 8000c06:	b1b0      	cbz	r0, 8000c36 <_vfiprintf_r+0x156>
 8000c08:	9207      	str	r2, [sp, #28]
 8000c0a:	e014      	b.n	8000c36 <_vfiprintf_r+0x156>
 8000c0c:	eba0 0308 	sub.w	r3, r0, r8
 8000c10:	fa09 f303 	lsl.w	r3, r9, r3
 8000c14:	4313      	orrs	r3, r2
 8000c16:	9304      	str	r3, [sp, #16]
 8000c18:	46a2      	mov	sl, r4
 8000c1a:	e7d2      	b.n	8000bc2 <_vfiprintf_r+0xe2>
 8000c1c:	9b03      	ldr	r3, [sp, #12]
 8000c1e:	1d19      	adds	r1, r3, #4
 8000c20:	681b      	ldr	r3, [r3, #0]
 8000c22:	9103      	str	r1, [sp, #12]
 8000c24:	2b00      	cmp	r3, #0
 8000c26:	bfbb      	ittet	lt
 8000c28:	425b      	neglt	r3, r3
 8000c2a:	f042 0202 	orrlt.w	r2, r2, #2
 8000c2e:	9307      	strge	r3, [sp, #28]
 8000c30:	9307      	strlt	r3, [sp, #28]
 8000c32:	bfb8      	it	lt
 8000c34:	9204      	strlt	r2, [sp, #16]
 8000c36:	7823      	ldrb	r3, [r4, #0]
 8000c38:	2b2e      	cmp	r3, #46	; 0x2e
 8000c3a:	d10c      	bne.n	8000c56 <_vfiprintf_r+0x176>
 8000c3c:	7863      	ldrb	r3, [r4, #1]
 8000c3e:	2b2a      	cmp	r3, #42	; 0x2a
 8000c40:	d134      	bne.n	8000cac <_vfiprintf_r+0x1cc>
 8000c42:	9b03      	ldr	r3, [sp, #12]
 8000c44:	1d1a      	adds	r2, r3, #4
 8000c46:	681b      	ldr	r3, [r3, #0]
 8000c48:	9203      	str	r2, [sp, #12]
 8000c4a:	2b00      	cmp	r3, #0
 8000c4c:	bfb8      	it	lt
 8000c4e:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8000c52:	3402      	adds	r4, #2
 8000c54:	9305      	str	r3, [sp, #20]
 8000c56:	f8df a0e0 	ldr.w	sl, [pc, #224]	; 8000d38 <_vfiprintf_r+0x258>
 8000c5a:	7821      	ldrb	r1, [r4, #0]
 8000c5c:	2203      	movs	r2, #3
 8000c5e:	4650      	mov	r0, sl
 8000c60:	f7ff fb1e 	bl	80002a0 <memchr>
 8000c64:	b138      	cbz	r0, 8000c76 <_vfiprintf_r+0x196>
 8000c66:	9b04      	ldr	r3, [sp, #16]
 8000c68:	eba0 000a 	sub.w	r0, r0, sl
 8000c6c:	2240      	movs	r2, #64	; 0x40
 8000c6e:	4082      	lsls	r2, r0
 8000c70:	4313      	orrs	r3, r2
 8000c72:	3401      	adds	r4, #1
 8000c74:	9304      	str	r3, [sp, #16]
 8000c76:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000c7a:	482c      	ldr	r0, [pc, #176]	; (8000d2c <_vfiprintf_r+0x24c>)
 8000c7c:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000c80:	2206      	movs	r2, #6
 8000c82:	f7ff fb0d 	bl	80002a0 <memchr>
 8000c86:	2800      	cmp	r0, #0
 8000c88:	d03f      	beq.n	8000d0a <_vfiprintf_r+0x22a>
 8000c8a:	4b29      	ldr	r3, [pc, #164]	; (8000d30 <_vfiprintf_r+0x250>)
 8000c8c:	bb1b      	cbnz	r3, 8000cd6 <_vfiprintf_r+0x1f6>
 8000c8e:	9b03      	ldr	r3, [sp, #12]
 8000c90:	3307      	adds	r3, #7
 8000c92:	f023 0307 	bic.w	r3, r3, #7
 8000c96:	3308      	adds	r3, #8
 8000c98:	9303      	str	r3, [sp, #12]
 8000c9a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000c9c:	443b      	add	r3, r7
 8000c9e:	9309      	str	r3, [sp, #36]	; 0x24
 8000ca0:	e768      	b.n	8000b74 <_vfiprintf_r+0x94>
 8000ca2:	fb0c 3202 	mla	r2, ip, r2, r3
 8000ca6:	460c      	mov	r4, r1
 8000ca8:	2001      	movs	r0, #1
 8000caa:	e7a6      	b.n	8000bfa <_vfiprintf_r+0x11a>
 8000cac:	2300      	movs	r3, #0
 8000cae:	3401      	adds	r4, #1
 8000cb0:	9305      	str	r3, [sp, #20]
 8000cb2:	4619      	mov	r1, r3
 8000cb4:	f04f 0c0a 	mov.w	ip, #10
 8000cb8:	4620      	mov	r0, r4
 8000cba:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000cbe:	3a30      	subs	r2, #48	; 0x30
 8000cc0:	2a09      	cmp	r2, #9
 8000cc2:	d903      	bls.n	8000ccc <_vfiprintf_r+0x1ec>
 8000cc4:	2b00      	cmp	r3, #0
 8000cc6:	d0c6      	beq.n	8000c56 <_vfiprintf_r+0x176>
 8000cc8:	9105      	str	r1, [sp, #20]
 8000cca:	e7c4      	b.n	8000c56 <_vfiprintf_r+0x176>
 8000ccc:	fb0c 2101 	mla	r1, ip, r1, r2
 8000cd0:	4604      	mov	r4, r0
 8000cd2:	2301      	movs	r3, #1
 8000cd4:	e7f0      	b.n	8000cb8 <_vfiprintf_r+0x1d8>
 8000cd6:	ab03      	add	r3, sp, #12
 8000cd8:	9300      	str	r3, [sp, #0]
 8000cda:	462a      	mov	r2, r5
 8000cdc:	4b15      	ldr	r3, [pc, #84]	; (8000d34 <_vfiprintf_r+0x254>)
 8000cde:	a904      	add	r1, sp, #16
 8000ce0:	4630      	mov	r0, r6
 8000ce2:	f3af 8000 	nop.w
 8000ce6:	4607      	mov	r7, r0
 8000ce8:	1c78      	adds	r0, r7, #1
 8000cea:	d1d6      	bne.n	8000c9a <_vfiprintf_r+0x1ba>
 8000cec:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000cee:	07d9      	lsls	r1, r3, #31
 8000cf0:	d405      	bmi.n	8000cfe <_vfiprintf_r+0x21e>
 8000cf2:	89ab      	ldrh	r3, [r5, #12]
 8000cf4:	059a      	lsls	r2, r3, #22
 8000cf6:	d402      	bmi.n	8000cfe <_vfiprintf_r+0x21e>
 8000cf8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000cfa:	f7ff fe32 	bl	8000962 <__retarget_lock_release_recursive>
 8000cfe:	89ab      	ldrh	r3, [r5, #12]
 8000d00:	065b      	lsls	r3, r3, #25
 8000d02:	f53f af13 	bmi.w	8000b2c <_vfiprintf_r+0x4c>
 8000d06:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000d08:	e712      	b.n	8000b30 <_vfiprintf_r+0x50>
 8000d0a:	ab03      	add	r3, sp, #12
 8000d0c:	9300      	str	r3, [sp, #0]
 8000d0e:	462a      	mov	r2, r5
 8000d10:	4b08      	ldr	r3, [pc, #32]	; (8000d34 <_vfiprintf_r+0x254>)
 8000d12:	a904      	add	r1, sp, #16
 8000d14:	4630      	mov	r0, r6
 8000d16:	f000 fb47 	bl	80013a8 <_printf_i>
 8000d1a:	e7e4      	b.n	8000ce6 <_vfiprintf_r+0x206>
 8000d1c:	080016a8 	.word	0x080016a8
 8000d20:	080016c8 	.word	0x080016c8
 8000d24:	08001688 	.word	0x08001688
 8000d28:	080016e8 	.word	0x080016e8
 8000d2c:	080016f2 	.word	0x080016f2
 8000d30:	00000000 	.word	0x00000000
 8000d34:	08000abb 	.word	0x08000abb
 8000d38:	080016ee 	.word	0x080016ee

08000d3c <_sbrk_r>:
 8000d3c:	b538      	push	{r3, r4, r5, lr}
 8000d3e:	4d06      	ldr	r5, [pc, #24]	; (8000d58 <_sbrk_r+0x1c>)
 8000d40:	2300      	movs	r3, #0
 8000d42:	4604      	mov	r4, r0
 8000d44:	4608      	mov	r0, r1
 8000d46:	602b      	str	r3, [r5, #0]
 8000d48:	f7ff fb9a 	bl	8000480 <_sbrk>
 8000d4c:	1c43      	adds	r3, r0, #1
 8000d4e:	d102      	bne.n	8000d56 <_sbrk_r+0x1a>
 8000d50:	682b      	ldr	r3, [r5, #0]
 8000d52:	b103      	cbz	r3, 8000d56 <_sbrk_r+0x1a>
 8000d54:	6023      	str	r3, [r4, #0]
 8000d56:	bd38      	pop	{r3, r4, r5, pc}
 8000d58:	24000090 	.word	0x24000090

08000d5c <__sread>:
 8000d5c:	b510      	push	{r4, lr}
 8000d5e:	460c      	mov	r4, r1
 8000d60:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d64:	f000 fc42 	bl	80015ec <_read_r>
 8000d68:	2800      	cmp	r0, #0
 8000d6a:	bfab      	itete	ge
 8000d6c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000d6e:	89a3      	ldrhlt	r3, [r4, #12]
 8000d70:	181b      	addge	r3, r3, r0
 8000d72:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000d76:	bfac      	ite	ge
 8000d78:	6563      	strge	r3, [r4, #84]	; 0x54
 8000d7a:	81a3      	strhlt	r3, [r4, #12]
 8000d7c:	bd10      	pop	{r4, pc}

08000d7e <__swrite>:
 8000d7e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000d82:	461f      	mov	r7, r3
 8000d84:	898b      	ldrh	r3, [r1, #12]
 8000d86:	05db      	lsls	r3, r3, #23
 8000d88:	4605      	mov	r5, r0
 8000d8a:	460c      	mov	r4, r1
 8000d8c:	4616      	mov	r6, r2
 8000d8e:	d505      	bpl.n	8000d9c <__swrite+0x1e>
 8000d90:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d94:	2302      	movs	r3, #2
 8000d96:	2200      	movs	r2, #0
 8000d98:	f000 f9c8 	bl	800112c <_lseek_r>
 8000d9c:	89a3      	ldrh	r3, [r4, #12]
 8000d9e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000da2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000da6:	81a3      	strh	r3, [r4, #12]
 8000da8:	4632      	mov	r2, r6
 8000daa:	463b      	mov	r3, r7
 8000dac:	4628      	mov	r0, r5
 8000dae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000db2:	f000 b869 	b.w	8000e88 <_write_r>

08000db6 <__sseek>:
 8000db6:	b510      	push	{r4, lr}
 8000db8:	460c      	mov	r4, r1
 8000dba:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000dbe:	f000 f9b5 	bl	800112c <_lseek_r>
 8000dc2:	1c43      	adds	r3, r0, #1
 8000dc4:	89a3      	ldrh	r3, [r4, #12]
 8000dc6:	bf15      	itete	ne
 8000dc8:	6560      	strne	r0, [r4, #84]	; 0x54
 8000dca:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000dce:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000dd2:	81a3      	strheq	r3, [r4, #12]
 8000dd4:	bf18      	it	ne
 8000dd6:	81a3      	strhne	r3, [r4, #12]
 8000dd8:	bd10      	pop	{r4, pc}

08000dda <__sclose>:
 8000dda:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000dde:	f000 b8d3 	b.w	8000f88 <_close_r>
	...

08000de4 <__swbuf_r>:
 8000de4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000de6:	460e      	mov	r6, r1
 8000de8:	4614      	mov	r4, r2
 8000dea:	4605      	mov	r5, r0
 8000dec:	b118      	cbz	r0, 8000df6 <__swbuf_r+0x12>
 8000dee:	6983      	ldr	r3, [r0, #24]
 8000df0:	b90b      	cbnz	r3, 8000df6 <__swbuf_r+0x12>
 8000df2:	f7ff fd17 	bl	8000824 <__sinit>
 8000df6:	4b21      	ldr	r3, [pc, #132]	; (8000e7c <__swbuf_r+0x98>)
 8000df8:	429c      	cmp	r4, r3
 8000dfa:	d12b      	bne.n	8000e54 <__swbuf_r+0x70>
 8000dfc:	686c      	ldr	r4, [r5, #4]
 8000dfe:	69a3      	ldr	r3, [r4, #24]
 8000e00:	60a3      	str	r3, [r4, #8]
 8000e02:	89a3      	ldrh	r3, [r4, #12]
 8000e04:	071a      	lsls	r2, r3, #28
 8000e06:	d52f      	bpl.n	8000e68 <__swbuf_r+0x84>
 8000e08:	6923      	ldr	r3, [r4, #16]
 8000e0a:	b36b      	cbz	r3, 8000e68 <__swbuf_r+0x84>
 8000e0c:	6923      	ldr	r3, [r4, #16]
 8000e0e:	6820      	ldr	r0, [r4, #0]
 8000e10:	1ac0      	subs	r0, r0, r3
 8000e12:	6963      	ldr	r3, [r4, #20]
 8000e14:	b2f6      	uxtb	r6, r6
 8000e16:	4283      	cmp	r3, r0
 8000e18:	4637      	mov	r7, r6
 8000e1a:	dc04      	bgt.n	8000e26 <__swbuf_r+0x42>
 8000e1c:	4621      	mov	r1, r4
 8000e1e:	4628      	mov	r0, r5
 8000e20:	f000 f948 	bl	80010b4 <_fflush_r>
 8000e24:	bb30      	cbnz	r0, 8000e74 <__swbuf_r+0x90>
 8000e26:	68a3      	ldr	r3, [r4, #8]
 8000e28:	3b01      	subs	r3, #1
 8000e2a:	60a3      	str	r3, [r4, #8]
 8000e2c:	6823      	ldr	r3, [r4, #0]
 8000e2e:	1c5a      	adds	r2, r3, #1
 8000e30:	6022      	str	r2, [r4, #0]
 8000e32:	701e      	strb	r6, [r3, #0]
 8000e34:	6963      	ldr	r3, [r4, #20]
 8000e36:	3001      	adds	r0, #1
 8000e38:	4283      	cmp	r3, r0
 8000e3a:	d004      	beq.n	8000e46 <__swbuf_r+0x62>
 8000e3c:	89a3      	ldrh	r3, [r4, #12]
 8000e3e:	07db      	lsls	r3, r3, #31
 8000e40:	d506      	bpl.n	8000e50 <__swbuf_r+0x6c>
 8000e42:	2e0a      	cmp	r6, #10
 8000e44:	d104      	bne.n	8000e50 <__swbuf_r+0x6c>
 8000e46:	4621      	mov	r1, r4
 8000e48:	4628      	mov	r0, r5
 8000e4a:	f000 f933 	bl	80010b4 <_fflush_r>
 8000e4e:	b988      	cbnz	r0, 8000e74 <__swbuf_r+0x90>
 8000e50:	4638      	mov	r0, r7
 8000e52:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000e54:	4b0a      	ldr	r3, [pc, #40]	; (8000e80 <__swbuf_r+0x9c>)
 8000e56:	429c      	cmp	r4, r3
 8000e58:	d101      	bne.n	8000e5e <__swbuf_r+0x7a>
 8000e5a:	68ac      	ldr	r4, [r5, #8]
 8000e5c:	e7cf      	b.n	8000dfe <__swbuf_r+0x1a>
 8000e5e:	4b09      	ldr	r3, [pc, #36]	; (8000e84 <__swbuf_r+0xa0>)
 8000e60:	429c      	cmp	r4, r3
 8000e62:	bf08      	it	eq
 8000e64:	68ec      	ldreq	r4, [r5, #12]
 8000e66:	e7ca      	b.n	8000dfe <__swbuf_r+0x1a>
 8000e68:	4621      	mov	r1, r4
 8000e6a:	4628      	mov	r0, r5
 8000e6c:	f000 f81e 	bl	8000eac <__swsetup_r>
 8000e70:	2800      	cmp	r0, #0
 8000e72:	d0cb      	beq.n	8000e0c <__swbuf_r+0x28>
 8000e74:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8000e78:	e7ea      	b.n	8000e50 <__swbuf_r+0x6c>
 8000e7a:	bf00      	nop
 8000e7c:	080016a8 	.word	0x080016a8
 8000e80:	080016c8 	.word	0x080016c8
 8000e84:	08001688 	.word	0x08001688

08000e88 <_write_r>:
 8000e88:	b538      	push	{r3, r4, r5, lr}
 8000e8a:	4d07      	ldr	r5, [pc, #28]	; (8000ea8 <_write_r+0x20>)
 8000e8c:	4604      	mov	r4, r0
 8000e8e:	4608      	mov	r0, r1
 8000e90:	4611      	mov	r1, r2
 8000e92:	2200      	movs	r2, #0
 8000e94:	602a      	str	r2, [r5, #0]
 8000e96:	461a      	mov	r2, r3
 8000e98:	f7ff faa1 	bl	80003de <_write>
 8000e9c:	1c43      	adds	r3, r0, #1
 8000e9e:	d102      	bne.n	8000ea6 <_write_r+0x1e>
 8000ea0:	682b      	ldr	r3, [r5, #0]
 8000ea2:	b103      	cbz	r3, 8000ea6 <_write_r+0x1e>
 8000ea4:	6023      	str	r3, [r4, #0]
 8000ea6:	bd38      	pop	{r3, r4, r5, pc}
 8000ea8:	24000090 	.word	0x24000090

08000eac <__swsetup_r>:
 8000eac:	4b32      	ldr	r3, [pc, #200]	; (8000f78 <__swsetup_r+0xcc>)
 8000eae:	b570      	push	{r4, r5, r6, lr}
 8000eb0:	681d      	ldr	r5, [r3, #0]
 8000eb2:	4606      	mov	r6, r0
 8000eb4:	460c      	mov	r4, r1
 8000eb6:	b125      	cbz	r5, 8000ec2 <__swsetup_r+0x16>
 8000eb8:	69ab      	ldr	r3, [r5, #24]
 8000eba:	b913      	cbnz	r3, 8000ec2 <__swsetup_r+0x16>
 8000ebc:	4628      	mov	r0, r5
 8000ebe:	f7ff fcb1 	bl	8000824 <__sinit>
 8000ec2:	4b2e      	ldr	r3, [pc, #184]	; (8000f7c <__swsetup_r+0xd0>)
 8000ec4:	429c      	cmp	r4, r3
 8000ec6:	d10f      	bne.n	8000ee8 <__swsetup_r+0x3c>
 8000ec8:	686c      	ldr	r4, [r5, #4]
 8000eca:	89a3      	ldrh	r3, [r4, #12]
 8000ecc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000ed0:	0719      	lsls	r1, r3, #28
 8000ed2:	d42c      	bmi.n	8000f2e <__swsetup_r+0x82>
 8000ed4:	06dd      	lsls	r5, r3, #27
 8000ed6:	d411      	bmi.n	8000efc <__swsetup_r+0x50>
 8000ed8:	2309      	movs	r3, #9
 8000eda:	6033      	str	r3, [r6, #0]
 8000edc:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000ee0:	81a3      	strh	r3, [r4, #12]
 8000ee2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000ee6:	e03e      	b.n	8000f66 <__swsetup_r+0xba>
 8000ee8:	4b25      	ldr	r3, [pc, #148]	; (8000f80 <__swsetup_r+0xd4>)
 8000eea:	429c      	cmp	r4, r3
 8000eec:	d101      	bne.n	8000ef2 <__swsetup_r+0x46>
 8000eee:	68ac      	ldr	r4, [r5, #8]
 8000ef0:	e7eb      	b.n	8000eca <__swsetup_r+0x1e>
 8000ef2:	4b24      	ldr	r3, [pc, #144]	; (8000f84 <__swsetup_r+0xd8>)
 8000ef4:	429c      	cmp	r4, r3
 8000ef6:	bf08      	it	eq
 8000ef8:	68ec      	ldreq	r4, [r5, #12]
 8000efa:	e7e6      	b.n	8000eca <__swsetup_r+0x1e>
 8000efc:	0758      	lsls	r0, r3, #29
 8000efe:	d512      	bpl.n	8000f26 <__swsetup_r+0x7a>
 8000f00:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000f02:	b141      	cbz	r1, 8000f16 <__swsetup_r+0x6a>
 8000f04:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000f08:	4299      	cmp	r1, r3
 8000f0a:	d002      	beq.n	8000f12 <__swsetup_r+0x66>
 8000f0c:	4630      	mov	r0, r6
 8000f0e:	f000 f991 	bl	8001234 <_free_r>
 8000f12:	2300      	movs	r3, #0
 8000f14:	6363      	str	r3, [r4, #52]	; 0x34
 8000f16:	89a3      	ldrh	r3, [r4, #12]
 8000f18:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000f1c:	81a3      	strh	r3, [r4, #12]
 8000f1e:	2300      	movs	r3, #0
 8000f20:	6063      	str	r3, [r4, #4]
 8000f22:	6923      	ldr	r3, [r4, #16]
 8000f24:	6023      	str	r3, [r4, #0]
 8000f26:	89a3      	ldrh	r3, [r4, #12]
 8000f28:	f043 0308 	orr.w	r3, r3, #8
 8000f2c:	81a3      	strh	r3, [r4, #12]
 8000f2e:	6923      	ldr	r3, [r4, #16]
 8000f30:	b94b      	cbnz	r3, 8000f46 <__swsetup_r+0x9a>
 8000f32:	89a3      	ldrh	r3, [r4, #12]
 8000f34:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000f38:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000f3c:	d003      	beq.n	8000f46 <__swsetup_r+0x9a>
 8000f3e:	4621      	mov	r1, r4
 8000f40:	4630      	mov	r0, r6
 8000f42:	f000 f92b 	bl	800119c <__smakebuf_r>
 8000f46:	89a0      	ldrh	r0, [r4, #12]
 8000f48:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000f4c:	f010 0301 	ands.w	r3, r0, #1
 8000f50:	d00a      	beq.n	8000f68 <__swsetup_r+0xbc>
 8000f52:	2300      	movs	r3, #0
 8000f54:	60a3      	str	r3, [r4, #8]
 8000f56:	6963      	ldr	r3, [r4, #20]
 8000f58:	425b      	negs	r3, r3
 8000f5a:	61a3      	str	r3, [r4, #24]
 8000f5c:	6923      	ldr	r3, [r4, #16]
 8000f5e:	b943      	cbnz	r3, 8000f72 <__swsetup_r+0xc6>
 8000f60:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000f64:	d1ba      	bne.n	8000edc <__swsetup_r+0x30>
 8000f66:	bd70      	pop	{r4, r5, r6, pc}
 8000f68:	0781      	lsls	r1, r0, #30
 8000f6a:	bf58      	it	pl
 8000f6c:	6963      	ldrpl	r3, [r4, #20]
 8000f6e:	60a3      	str	r3, [r4, #8]
 8000f70:	e7f4      	b.n	8000f5c <__swsetup_r+0xb0>
 8000f72:	2000      	movs	r0, #0
 8000f74:	e7f7      	b.n	8000f66 <__swsetup_r+0xba>
 8000f76:	bf00      	nop
 8000f78:	24000000 	.word	0x24000000
 8000f7c:	080016a8 	.word	0x080016a8
 8000f80:	080016c8 	.word	0x080016c8
 8000f84:	08001688 	.word	0x08001688

08000f88 <_close_r>:
 8000f88:	b538      	push	{r3, r4, r5, lr}
 8000f8a:	4d06      	ldr	r5, [pc, #24]	; (8000fa4 <_close_r+0x1c>)
 8000f8c:	2300      	movs	r3, #0
 8000f8e:	4604      	mov	r4, r0
 8000f90:	4608      	mov	r0, r1
 8000f92:	602b      	str	r3, [r5, #0]
 8000f94:	f7ff fa3f 	bl	8000416 <_close>
 8000f98:	1c43      	adds	r3, r0, #1
 8000f9a:	d102      	bne.n	8000fa2 <_close_r+0x1a>
 8000f9c:	682b      	ldr	r3, [r5, #0]
 8000f9e:	b103      	cbz	r3, 8000fa2 <_close_r+0x1a>
 8000fa0:	6023      	str	r3, [r4, #0]
 8000fa2:	bd38      	pop	{r3, r4, r5, pc}
 8000fa4:	24000090 	.word	0x24000090

08000fa8 <__sflush_r>:
 8000fa8:	898a      	ldrh	r2, [r1, #12]
 8000faa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000fae:	4605      	mov	r5, r0
 8000fb0:	0710      	lsls	r0, r2, #28
 8000fb2:	460c      	mov	r4, r1
 8000fb4:	d458      	bmi.n	8001068 <__sflush_r+0xc0>
 8000fb6:	684b      	ldr	r3, [r1, #4]
 8000fb8:	2b00      	cmp	r3, #0
 8000fba:	dc05      	bgt.n	8000fc8 <__sflush_r+0x20>
 8000fbc:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000fbe:	2b00      	cmp	r3, #0
 8000fc0:	dc02      	bgt.n	8000fc8 <__sflush_r+0x20>
 8000fc2:	2000      	movs	r0, #0
 8000fc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000fc8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000fca:	2e00      	cmp	r6, #0
 8000fcc:	d0f9      	beq.n	8000fc2 <__sflush_r+0x1a>
 8000fce:	2300      	movs	r3, #0
 8000fd0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000fd4:	682f      	ldr	r7, [r5, #0]
 8000fd6:	6a21      	ldr	r1, [r4, #32]
 8000fd8:	602b      	str	r3, [r5, #0]
 8000fda:	d032      	beq.n	8001042 <__sflush_r+0x9a>
 8000fdc:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000fde:	89a3      	ldrh	r3, [r4, #12]
 8000fe0:	075a      	lsls	r2, r3, #29
 8000fe2:	d505      	bpl.n	8000ff0 <__sflush_r+0x48>
 8000fe4:	6863      	ldr	r3, [r4, #4]
 8000fe6:	1ac0      	subs	r0, r0, r3
 8000fe8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000fea:	b10b      	cbz	r3, 8000ff0 <__sflush_r+0x48>
 8000fec:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000fee:	1ac0      	subs	r0, r0, r3
 8000ff0:	2300      	movs	r3, #0
 8000ff2:	4602      	mov	r2, r0
 8000ff4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000ff6:	6a21      	ldr	r1, [r4, #32]
 8000ff8:	4628      	mov	r0, r5
 8000ffa:	47b0      	blx	r6
 8000ffc:	1c43      	adds	r3, r0, #1
 8000ffe:	89a3      	ldrh	r3, [r4, #12]
 8001000:	d106      	bne.n	8001010 <__sflush_r+0x68>
 8001002:	6829      	ldr	r1, [r5, #0]
 8001004:	291d      	cmp	r1, #29
 8001006:	d82b      	bhi.n	8001060 <__sflush_r+0xb8>
 8001008:	4a29      	ldr	r2, [pc, #164]	; (80010b0 <__sflush_r+0x108>)
 800100a:	410a      	asrs	r2, r1
 800100c:	07d6      	lsls	r6, r2, #31
 800100e:	d427      	bmi.n	8001060 <__sflush_r+0xb8>
 8001010:	2200      	movs	r2, #0
 8001012:	6062      	str	r2, [r4, #4]
 8001014:	04d9      	lsls	r1, r3, #19
 8001016:	6922      	ldr	r2, [r4, #16]
 8001018:	6022      	str	r2, [r4, #0]
 800101a:	d504      	bpl.n	8001026 <__sflush_r+0x7e>
 800101c:	1c42      	adds	r2, r0, #1
 800101e:	d101      	bne.n	8001024 <__sflush_r+0x7c>
 8001020:	682b      	ldr	r3, [r5, #0]
 8001022:	b903      	cbnz	r3, 8001026 <__sflush_r+0x7e>
 8001024:	6560      	str	r0, [r4, #84]	; 0x54
 8001026:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001028:	602f      	str	r7, [r5, #0]
 800102a:	2900      	cmp	r1, #0
 800102c:	d0c9      	beq.n	8000fc2 <__sflush_r+0x1a>
 800102e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001032:	4299      	cmp	r1, r3
 8001034:	d002      	beq.n	800103c <__sflush_r+0x94>
 8001036:	4628      	mov	r0, r5
 8001038:	f000 f8fc 	bl	8001234 <_free_r>
 800103c:	2000      	movs	r0, #0
 800103e:	6360      	str	r0, [r4, #52]	; 0x34
 8001040:	e7c0      	b.n	8000fc4 <__sflush_r+0x1c>
 8001042:	2301      	movs	r3, #1
 8001044:	4628      	mov	r0, r5
 8001046:	47b0      	blx	r6
 8001048:	1c41      	adds	r1, r0, #1
 800104a:	d1c8      	bne.n	8000fde <__sflush_r+0x36>
 800104c:	682b      	ldr	r3, [r5, #0]
 800104e:	2b00      	cmp	r3, #0
 8001050:	d0c5      	beq.n	8000fde <__sflush_r+0x36>
 8001052:	2b1d      	cmp	r3, #29
 8001054:	d001      	beq.n	800105a <__sflush_r+0xb2>
 8001056:	2b16      	cmp	r3, #22
 8001058:	d101      	bne.n	800105e <__sflush_r+0xb6>
 800105a:	602f      	str	r7, [r5, #0]
 800105c:	e7b1      	b.n	8000fc2 <__sflush_r+0x1a>
 800105e:	89a3      	ldrh	r3, [r4, #12]
 8001060:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001064:	81a3      	strh	r3, [r4, #12]
 8001066:	e7ad      	b.n	8000fc4 <__sflush_r+0x1c>
 8001068:	690f      	ldr	r7, [r1, #16]
 800106a:	2f00      	cmp	r7, #0
 800106c:	d0a9      	beq.n	8000fc2 <__sflush_r+0x1a>
 800106e:	0793      	lsls	r3, r2, #30
 8001070:	680e      	ldr	r6, [r1, #0]
 8001072:	bf08      	it	eq
 8001074:	694b      	ldreq	r3, [r1, #20]
 8001076:	600f      	str	r7, [r1, #0]
 8001078:	bf18      	it	ne
 800107a:	2300      	movne	r3, #0
 800107c:	eba6 0807 	sub.w	r8, r6, r7
 8001080:	608b      	str	r3, [r1, #8]
 8001082:	f1b8 0f00 	cmp.w	r8, #0
 8001086:	dd9c      	ble.n	8000fc2 <__sflush_r+0x1a>
 8001088:	6a21      	ldr	r1, [r4, #32]
 800108a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800108c:	4643      	mov	r3, r8
 800108e:	463a      	mov	r2, r7
 8001090:	4628      	mov	r0, r5
 8001092:	47b0      	blx	r6
 8001094:	2800      	cmp	r0, #0
 8001096:	dc06      	bgt.n	80010a6 <__sflush_r+0xfe>
 8001098:	89a3      	ldrh	r3, [r4, #12]
 800109a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800109e:	81a3      	strh	r3, [r4, #12]
 80010a0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80010a4:	e78e      	b.n	8000fc4 <__sflush_r+0x1c>
 80010a6:	4407      	add	r7, r0
 80010a8:	eba8 0800 	sub.w	r8, r8, r0
 80010ac:	e7e9      	b.n	8001082 <__sflush_r+0xda>
 80010ae:	bf00      	nop
 80010b0:	dfbffffe 	.word	0xdfbffffe

080010b4 <_fflush_r>:
 80010b4:	b538      	push	{r3, r4, r5, lr}
 80010b6:	690b      	ldr	r3, [r1, #16]
 80010b8:	4605      	mov	r5, r0
 80010ba:	460c      	mov	r4, r1
 80010bc:	b913      	cbnz	r3, 80010c4 <_fflush_r+0x10>
 80010be:	2500      	movs	r5, #0
 80010c0:	4628      	mov	r0, r5
 80010c2:	bd38      	pop	{r3, r4, r5, pc}
 80010c4:	b118      	cbz	r0, 80010ce <_fflush_r+0x1a>
 80010c6:	6983      	ldr	r3, [r0, #24]
 80010c8:	b90b      	cbnz	r3, 80010ce <_fflush_r+0x1a>
 80010ca:	f7ff fbab 	bl	8000824 <__sinit>
 80010ce:	4b14      	ldr	r3, [pc, #80]	; (8001120 <_fflush_r+0x6c>)
 80010d0:	429c      	cmp	r4, r3
 80010d2:	d11b      	bne.n	800110c <_fflush_r+0x58>
 80010d4:	686c      	ldr	r4, [r5, #4]
 80010d6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80010da:	2b00      	cmp	r3, #0
 80010dc:	d0ef      	beq.n	80010be <_fflush_r+0xa>
 80010de:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80010e0:	07d0      	lsls	r0, r2, #31
 80010e2:	d404      	bmi.n	80010ee <_fflush_r+0x3a>
 80010e4:	0599      	lsls	r1, r3, #22
 80010e6:	d402      	bmi.n	80010ee <_fflush_r+0x3a>
 80010e8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80010ea:	f7ff fc39 	bl	8000960 <__retarget_lock_acquire_recursive>
 80010ee:	4628      	mov	r0, r5
 80010f0:	4621      	mov	r1, r4
 80010f2:	f7ff ff59 	bl	8000fa8 <__sflush_r>
 80010f6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80010f8:	07da      	lsls	r2, r3, #31
 80010fa:	4605      	mov	r5, r0
 80010fc:	d4e0      	bmi.n	80010c0 <_fflush_r+0xc>
 80010fe:	89a3      	ldrh	r3, [r4, #12]
 8001100:	059b      	lsls	r3, r3, #22
 8001102:	d4dd      	bmi.n	80010c0 <_fflush_r+0xc>
 8001104:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001106:	f7ff fc2c 	bl	8000962 <__retarget_lock_release_recursive>
 800110a:	e7d9      	b.n	80010c0 <_fflush_r+0xc>
 800110c:	4b05      	ldr	r3, [pc, #20]	; (8001124 <_fflush_r+0x70>)
 800110e:	429c      	cmp	r4, r3
 8001110:	d101      	bne.n	8001116 <_fflush_r+0x62>
 8001112:	68ac      	ldr	r4, [r5, #8]
 8001114:	e7df      	b.n	80010d6 <_fflush_r+0x22>
 8001116:	4b04      	ldr	r3, [pc, #16]	; (8001128 <_fflush_r+0x74>)
 8001118:	429c      	cmp	r4, r3
 800111a:	bf08      	it	eq
 800111c:	68ec      	ldreq	r4, [r5, #12]
 800111e:	e7da      	b.n	80010d6 <_fflush_r+0x22>
 8001120:	080016a8 	.word	0x080016a8
 8001124:	080016c8 	.word	0x080016c8
 8001128:	08001688 	.word	0x08001688

0800112c <_lseek_r>:
 800112c:	b538      	push	{r3, r4, r5, lr}
 800112e:	4d07      	ldr	r5, [pc, #28]	; (800114c <_lseek_r+0x20>)
 8001130:	4604      	mov	r4, r0
 8001132:	4608      	mov	r0, r1
 8001134:	4611      	mov	r1, r2
 8001136:	2200      	movs	r2, #0
 8001138:	602a      	str	r2, [r5, #0]
 800113a:	461a      	mov	r2, r3
 800113c:	f7ff f992 	bl	8000464 <_lseek>
 8001140:	1c43      	adds	r3, r0, #1
 8001142:	d102      	bne.n	800114a <_lseek_r+0x1e>
 8001144:	682b      	ldr	r3, [r5, #0]
 8001146:	b103      	cbz	r3, 800114a <_lseek_r+0x1e>
 8001148:	6023      	str	r3, [r4, #0]
 800114a:	bd38      	pop	{r3, r4, r5, pc}
 800114c:	24000090 	.word	0x24000090

08001150 <__swhatbuf_r>:
 8001150:	b570      	push	{r4, r5, r6, lr}
 8001152:	460c      	mov	r4, r1
 8001154:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001158:	2900      	cmp	r1, #0
 800115a:	b096      	sub	sp, #88	; 0x58
 800115c:	4615      	mov	r5, r2
 800115e:	461e      	mov	r6, r3
 8001160:	da0d      	bge.n	800117e <__swhatbuf_r+0x2e>
 8001162:	89a3      	ldrh	r3, [r4, #12]
 8001164:	f013 0f80 	tst.w	r3, #128	; 0x80
 8001168:	f04f 0100 	mov.w	r1, #0
 800116c:	bf0c      	ite	eq
 800116e:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8001172:	2340      	movne	r3, #64	; 0x40
 8001174:	2000      	movs	r0, #0
 8001176:	6031      	str	r1, [r6, #0]
 8001178:	602b      	str	r3, [r5, #0]
 800117a:	b016      	add	sp, #88	; 0x58
 800117c:	bd70      	pop	{r4, r5, r6, pc}
 800117e:	466a      	mov	r2, sp
 8001180:	f000 fa46 	bl	8001610 <_fstat_r>
 8001184:	2800      	cmp	r0, #0
 8001186:	dbec      	blt.n	8001162 <__swhatbuf_r+0x12>
 8001188:	9901      	ldr	r1, [sp, #4]
 800118a:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 800118e:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8001192:	4259      	negs	r1, r3
 8001194:	4159      	adcs	r1, r3
 8001196:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800119a:	e7eb      	b.n	8001174 <__swhatbuf_r+0x24>

0800119c <__smakebuf_r>:
 800119c:	898b      	ldrh	r3, [r1, #12]
 800119e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80011a0:	079d      	lsls	r5, r3, #30
 80011a2:	4606      	mov	r6, r0
 80011a4:	460c      	mov	r4, r1
 80011a6:	d507      	bpl.n	80011b8 <__smakebuf_r+0x1c>
 80011a8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80011ac:	6023      	str	r3, [r4, #0]
 80011ae:	6123      	str	r3, [r4, #16]
 80011b0:	2301      	movs	r3, #1
 80011b2:	6163      	str	r3, [r4, #20]
 80011b4:	b002      	add	sp, #8
 80011b6:	bd70      	pop	{r4, r5, r6, pc}
 80011b8:	ab01      	add	r3, sp, #4
 80011ba:	466a      	mov	r2, sp
 80011bc:	f7ff ffc8 	bl	8001150 <__swhatbuf_r>
 80011c0:	9900      	ldr	r1, [sp, #0]
 80011c2:	4605      	mov	r5, r0
 80011c4:	4630      	mov	r0, r6
 80011c6:	f7ff fbed 	bl	80009a4 <_malloc_r>
 80011ca:	b948      	cbnz	r0, 80011e0 <__smakebuf_r+0x44>
 80011cc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80011d0:	059a      	lsls	r2, r3, #22
 80011d2:	d4ef      	bmi.n	80011b4 <__smakebuf_r+0x18>
 80011d4:	f023 0303 	bic.w	r3, r3, #3
 80011d8:	f043 0302 	orr.w	r3, r3, #2
 80011dc:	81a3      	strh	r3, [r4, #12]
 80011de:	e7e3      	b.n	80011a8 <__smakebuf_r+0xc>
 80011e0:	4b0d      	ldr	r3, [pc, #52]	; (8001218 <__smakebuf_r+0x7c>)
 80011e2:	62b3      	str	r3, [r6, #40]	; 0x28
 80011e4:	89a3      	ldrh	r3, [r4, #12]
 80011e6:	6020      	str	r0, [r4, #0]
 80011e8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80011ec:	81a3      	strh	r3, [r4, #12]
 80011ee:	9b00      	ldr	r3, [sp, #0]
 80011f0:	6163      	str	r3, [r4, #20]
 80011f2:	9b01      	ldr	r3, [sp, #4]
 80011f4:	6120      	str	r0, [r4, #16]
 80011f6:	b15b      	cbz	r3, 8001210 <__smakebuf_r+0x74>
 80011f8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80011fc:	4630      	mov	r0, r6
 80011fe:	f000 fa19 	bl	8001634 <_isatty_r>
 8001202:	b128      	cbz	r0, 8001210 <__smakebuf_r+0x74>
 8001204:	89a3      	ldrh	r3, [r4, #12]
 8001206:	f023 0303 	bic.w	r3, r3, #3
 800120a:	f043 0301 	orr.w	r3, r3, #1
 800120e:	81a3      	strh	r3, [r4, #12]
 8001210:	89a3      	ldrh	r3, [r4, #12]
 8001212:	431d      	orrs	r5, r3
 8001214:	81a5      	strh	r5, [r4, #12]
 8001216:	e7cd      	b.n	80011b4 <__smakebuf_r+0x18>
 8001218:	080007bd 	.word	0x080007bd

0800121c <__malloc_lock>:
 800121c:	4801      	ldr	r0, [pc, #4]	; (8001224 <__malloc_lock+0x8>)
 800121e:	f7ff bb9f 	b.w	8000960 <__retarget_lock_acquire_recursive>
 8001222:	bf00      	nop
 8001224:	24000084 	.word	0x24000084

08001228 <__malloc_unlock>:
 8001228:	4801      	ldr	r0, [pc, #4]	; (8001230 <__malloc_unlock+0x8>)
 800122a:	f7ff bb9a 	b.w	8000962 <__retarget_lock_release_recursive>
 800122e:	bf00      	nop
 8001230:	24000084 	.word	0x24000084

08001234 <_free_r>:
 8001234:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001236:	2900      	cmp	r1, #0
 8001238:	d044      	beq.n	80012c4 <_free_r+0x90>
 800123a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800123e:	9001      	str	r0, [sp, #4]
 8001240:	2b00      	cmp	r3, #0
 8001242:	f1a1 0404 	sub.w	r4, r1, #4
 8001246:	bfb8      	it	lt
 8001248:	18e4      	addlt	r4, r4, r3
 800124a:	f7ff ffe7 	bl	800121c <__malloc_lock>
 800124e:	4a1e      	ldr	r2, [pc, #120]	; (80012c8 <_free_r+0x94>)
 8001250:	9801      	ldr	r0, [sp, #4]
 8001252:	6813      	ldr	r3, [r2, #0]
 8001254:	b933      	cbnz	r3, 8001264 <_free_r+0x30>
 8001256:	6063      	str	r3, [r4, #4]
 8001258:	6014      	str	r4, [r2, #0]
 800125a:	b003      	add	sp, #12
 800125c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8001260:	f7ff bfe2 	b.w	8001228 <__malloc_unlock>
 8001264:	42a3      	cmp	r3, r4
 8001266:	d908      	bls.n	800127a <_free_r+0x46>
 8001268:	6825      	ldr	r5, [r4, #0]
 800126a:	1961      	adds	r1, r4, r5
 800126c:	428b      	cmp	r3, r1
 800126e:	bf01      	itttt	eq
 8001270:	6819      	ldreq	r1, [r3, #0]
 8001272:	685b      	ldreq	r3, [r3, #4]
 8001274:	1949      	addeq	r1, r1, r5
 8001276:	6021      	streq	r1, [r4, #0]
 8001278:	e7ed      	b.n	8001256 <_free_r+0x22>
 800127a:	461a      	mov	r2, r3
 800127c:	685b      	ldr	r3, [r3, #4]
 800127e:	b10b      	cbz	r3, 8001284 <_free_r+0x50>
 8001280:	42a3      	cmp	r3, r4
 8001282:	d9fa      	bls.n	800127a <_free_r+0x46>
 8001284:	6811      	ldr	r1, [r2, #0]
 8001286:	1855      	adds	r5, r2, r1
 8001288:	42a5      	cmp	r5, r4
 800128a:	d10b      	bne.n	80012a4 <_free_r+0x70>
 800128c:	6824      	ldr	r4, [r4, #0]
 800128e:	4421      	add	r1, r4
 8001290:	1854      	adds	r4, r2, r1
 8001292:	42a3      	cmp	r3, r4
 8001294:	6011      	str	r1, [r2, #0]
 8001296:	d1e0      	bne.n	800125a <_free_r+0x26>
 8001298:	681c      	ldr	r4, [r3, #0]
 800129a:	685b      	ldr	r3, [r3, #4]
 800129c:	6053      	str	r3, [r2, #4]
 800129e:	440c      	add	r4, r1
 80012a0:	6014      	str	r4, [r2, #0]
 80012a2:	e7da      	b.n	800125a <_free_r+0x26>
 80012a4:	d902      	bls.n	80012ac <_free_r+0x78>
 80012a6:	230c      	movs	r3, #12
 80012a8:	6003      	str	r3, [r0, #0]
 80012aa:	e7d6      	b.n	800125a <_free_r+0x26>
 80012ac:	6825      	ldr	r5, [r4, #0]
 80012ae:	1961      	adds	r1, r4, r5
 80012b0:	428b      	cmp	r3, r1
 80012b2:	bf04      	itt	eq
 80012b4:	6819      	ldreq	r1, [r3, #0]
 80012b6:	685b      	ldreq	r3, [r3, #4]
 80012b8:	6063      	str	r3, [r4, #4]
 80012ba:	bf04      	itt	eq
 80012bc:	1949      	addeq	r1, r1, r5
 80012be:	6021      	streq	r1, [r4, #0]
 80012c0:	6054      	str	r4, [r2, #4]
 80012c2:	e7ca      	b.n	800125a <_free_r+0x26>
 80012c4:	b003      	add	sp, #12
 80012c6:	bd30      	pop	{r4, r5, pc}
 80012c8:	24000088 	.word	0x24000088

080012cc <_printf_common>:
 80012cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80012d0:	4616      	mov	r6, r2
 80012d2:	4699      	mov	r9, r3
 80012d4:	688a      	ldr	r2, [r1, #8]
 80012d6:	690b      	ldr	r3, [r1, #16]
 80012d8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80012dc:	4293      	cmp	r3, r2
 80012de:	bfb8      	it	lt
 80012e0:	4613      	movlt	r3, r2
 80012e2:	6033      	str	r3, [r6, #0]
 80012e4:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80012e8:	4607      	mov	r7, r0
 80012ea:	460c      	mov	r4, r1
 80012ec:	b10a      	cbz	r2, 80012f2 <_printf_common+0x26>
 80012ee:	3301      	adds	r3, #1
 80012f0:	6033      	str	r3, [r6, #0]
 80012f2:	6823      	ldr	r3, [r4, #0]
 80012f4:	0699      	lsls	r1, r3, #26
 80012f6:	bf42      	ittt	mi
 80012f8:	6833      	ldrmi	r3, [r6, #0]
 80012fa:	3302      	addmi	r3, #2
 80012fc:	6033      	strmi	r3, [r6, #0]
 80012fe:	6825      	ldr	r5, [r4, #0]
 8001300:	f015 0506 	ands.w	r5, r5, #6
 8001304:	d106      	bne.n	8001314 <_printf_common+0x48>
 8001306:	f104 0a19 	add.w	sl, r4, #25
 800130a:	68e3      	ldr	r3, [r4, #12]
 800130c:	6832      	ldr	r2, [r6, #0]
 800130e:	1a9b      	subs	r3, r3, r2
 8001310:	42ab      	cmp	r3, r5
 8001312:	dc26      	bgt.n	8001362 <_printf_common+0x96>
 8001314:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8001318:	1e13      	subs	r3, r2, #0
 800131a:	6822      	ldr	r2, [r4, #0]
 800131c:	bf18      	it	ne
 800131e:	2301      	movne	r3, #1
 8001320:	0692      	lsls	r2, r2, #26
 8001322:	d42b      	bmi.n	800137c <_printf_common+0xb0>
 8001324:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001328:	4649      	mov	r1, r9
 800132a:	4638      	mov	r0, r7
 800132c:	47c0      	blx	r8
 800132e:	3001      	adds	r0, #1
 8001330:	d01e      	beq.n	8001370 <_printf_common+0xa4>
 8001332:	6823      	ldr	r3, [r4, #0]
 8001334:	6922      	ldr	r2, [r4, #16]
 8001336:	f003 0306 	and.w	r3, r3, #6
 800133a:	2b04      	cmp	r3, #4
 800133c:	bf02      	ittt	eq
 800133e:	68e5      	ldreq	r5, [r4, #12]
 8001340:	6833      	ldreq	r3, [r6, #0]
 8001342:	1aed      	subeq	r5, r5, r3
 8001344:	68a3      	ldr	r3, [r4, #8]
 8001346:	bf0c      	ite	eq
 8001348:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800134c:	2500      	movne	r5, #0
 800134e:	4293      	cmp	r3, r2
 8001350:	bfc4      	itt	gt
 8001352:	1a9b      	subgt	r3, r3, r2
 8001354:	18ed      	addgt	r5, r5, r3
 8001356:	2600      	movs	r6, #0
 8001358:	341a      	adds	r4, #26
 800135a:	42b5      	cmp	r5, r6
 800135c:	d11a      	bne.n	8001394 <_printf_common+0xc8>
 800135e:	2000      	movs	r0, #0
 8001360:	e008      	b.n	8001374 <_printf_common+0xa8>
 8001362:	2301      	movs	r3, #1
 8001364:	4652      	mov	r2, sl
 8001366:	4649      	mov	r1, r9
 8001368:	4638      	mov	r0, r7
 800136a:	47c0      	blx	r8
 800136c:	3001      	adds	r0, #1
 800136e:	d103      	bne.n	8001378 <_printf_common+0xac>
 8001370:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001374:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001378:	3501      	adds	r5, #1
 800137a:	e7c6      	b.n	800130a <_printf_common+0x3e>
 800137c:	18e1      	adds	r1, r4, r3
 800137e:	1c5a      	adds	r2, r3, #1
 8001380:	2030      	movs	r0, #48	; 0x30
 8001382:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001386:	4422      	add	r2, r4
 8001388:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800138c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8001390:	3302      	adds	r3, #2
 8001392:	e7c7      	b.n	8001324 <_printf_common+0x58>
 8001394:	2301      	movs	r3, #1
 8001396:	4622      	mov	r2, r4
 8001398:	4649      	mov	r1, r9
 800139a:	4638      	mov	r0, r7
 800139c:	47c0      	blx	r8
 800139e:	3001      	adds	r0, #1
 80013a0:	d0e6      	beq.n	8001370 <_printf_common+0xa4>
 80013a2:	3601      	adds	r6, #1
 80013a4:	e7d9      	b.n	800135a <_printf_common+0x8e>
	...

080013a8 <_printf_i>:
 80013a8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80013ac:	7e0f      	ldrb	r7, [r1, #24]
 80013ae:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80013b0:	2f78      	cmp	r7, #120	; 0x78
 80013b2:	4691      	mov	r9, r2
 80013b4:	4680      	mov	r8, r0
 80013b6:	460c      	mov	r4, r1
 80013b8:	469a      	mov	sl, r3
 80013ba:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80013be:	d807      	bhi.n	80013d0 <_printf_i+0x28>
 80013c0:	2f62      	cmp	r7, #98	; 0x62
 80013c2:	d80a      	bhi.n	80013da <_printf_i+0x32>
 80013c4:	2f00      	cmp	r7, #0
 80013c6:	f000 80d4 	beq.w	8001572 <_printf_i+0x1ca>
 80013ca:	2f58      	cmp	r7, #88	; 0x58
 80013cc:	f000 80c0 	beq.w	8001550 <_printf_i+0x1a8>
 80013d0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80013d4:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80013d8:	e03a      	b.n	8001450 <_printf_i+0xa8>
 80013da:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80013de:	2b15      	cmp	r3, #21
 80013e0:	d8f6      	bhi.n	80013d0 <_printf_i+0x28>
 80013e2:	a101      	add	r1, pc, #4	; (adr r1, 80013e8 <_printf_i+0x40>)
 80013e4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80013e8:	08001441 	.word	0x08001441
 80013ec:	08001455 	.word	0x08001455
 80013f0:	080013d1 	.word	0x080013d1
 80013f4:	080013d1 	.word	0x080013d1
 80013f8:	080013d1 	.word	0x080013d1
 80013fc:	080013d1 	.word	0x080013d1
 8001400:	08001455 	.word	0x08001455
 8001404:	080013d1 	.word	0x080013d1
 8001408:	080013d1 	.word	0x080013d1
 800140c:	080013d1 	.word	0x080013d1
 8001410:	080013d1 	.word	0x080013d1
 8001414:	08001559 	.word	0x08001559
 8001418:	08001481 	.word	0x08001481
 800141c:	08001513 	.word	0x08001513
 8001420:	080013d1 	.word	0x080013d1
 8001424:	080013d1 	.word	0x080013d1
 8001428:	0800157b 	.word	0x0800157b
 800142c:	080013d1 	.word	0x080013d1
 8001430:	08001481 	.word	0x08001481
 8001434:	080013d1 	.word	0x080013d1
 8001438:	080013d1 	.word	0x080013d1
 800143c:	0800151b 	.word	0x0800151b
 8001440:	682b      	ldr	r3, [r5, #0]
 8001442:	1d1a      	adds	r2, r3, #4
 8001444:	681b      	ldr	r3, [r3, #0]
 8001446:	602a      	str	r2, [r5, #0]
 8001448:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800144c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001450:	2301      	movs	r3, #1
 8001452:	e09f      	b.n	8001594 <_printf_i+0x1ec>
 8001454:	6820      	ldr	r0, [r4, #0]
 8001456:	682b      	ldr	r3, [r5, #0]
 8001458:	0607      	lsls	r7, r0, #24
 800145a:	f103 0104 	add.w	r1, r3, #4
 800145e:	6029      	str	r1, [r5, #0]
 8001460:	d501      	bpl.n	8001466 <_printf_i+0xbe>
 8001462:	681e      	ldr	r6, [r3, #0]
 8001464:	e003      	b.n	800146e <_printf_i+0xc6>
 8001466:	0646      	lsls	r6, r0, #25
 8001468:	d5fb      	bpl.n	8001462 <_printf_i+0xba>
 800146a:	f9b3 6000 	ldrsh.w	r6, [r3]
 800146e:	2e00      	cmp	r6, #0
 8001470:	da03      	bge.n	800147a <_printf_i+0xd2>
 8001472:	232d      	movs	r3, #45	; 0x2d
 8001474:	4276      	negs	r6, r6
 8001476:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800147a:	485a      	ldr	r0, [pc, #360]	; (80015e4 <_printf_i+0x23c>)
 800147c:	230a      	movs	r3, #10
 800147e:	e012      	b.n	80014a6 <_printf_i+0xfe>
 8001480:	682b      	ldr	r3, [r5, #0]
 8001482:	6820      	ldr	r0, [r4, #0]
 8001484:	1d19      	adds	r1, r3, #4
 8001486:	6029      	str	r1, [r5, #0]
 8001488:	0605      	lsls	r5, r0, #24
 800148a:	d501      	bpl.n	8001490 <_printf_i+0xe8>
 800148c:	681e      	ldr	r6, [r3, #0]
 800148e:	e002      	b.n	8001496 <_printf_i+0xee>
 8001490:	0641      	lsls	r1, r0, #25
 8001492:	d5fb      	bpl.n	800148c <_printf_i+0xe4>
 8001494:	881e      	ldrh	r6, [r3, #0]
 8001496:	4853      	ldr	r0, [pc, #332]	; (80015e4 <_printf_i+0x23c>)
 8001498:	2f6f      	cmp	r7, #111	; 0x6f
 800149a:	bf0c      	ite	eq
 800149c:	2308      	moveq	r3, #8
 800149e:	230a      	movne	r3, #10
 80014a0:	2100      	movs	r1, #0
 80014a2:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80014a6:	6865      	ldr	r5, [r4, #4]
 80014a8:	60a5      	str	r5, [r4, #8]
 80014aa:	2d00      	cmp	r5, #0
 80014ac:	bfa2      	ittt	ge
 80014ae:	6821      	ldrge	r1, [r4, #0]
 80014b0:	f021 0104 	bicge.w	r1, r1, #4
 80014b4:	6021      	strge	r1, [r4, #0]
 80014b6:	b90e      	cbnz	r6, 80014bc <_printf_i+0x114>
 80014b8:	2d00      	cmp	r5, #0
 80014ba:	d04b      	beq.n	8001554 <_printf_i+0x1ac>
 80014bc:	4615      	mov	r5, r2
 80014be:	fbb6 f1f3 	udiv	r1, r6, r3
 80014c2:	fb03 6711 	mls	r7, r3, r1, r6
 80014c6:	5dc7      	ldrb	r7, [r0, r7]
 80014c8:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80014cc:	4637      	mov	r7, r6
 80014ce:	42bb      	cmp	r3, r7
 80014d0:	460e      	mov	r6, r1
 80014d2:	d9f4      	bls.n	80014be <_printf_i+0x116>
 80014d4:	2b08      	cmp	r3, #8
 80014d6:	d10b      	bne.n	80014f0 <_printf_i+0x148>
 80014d8:	6823      	ldr	r3, [r4, #0]
 80014da:	07de      	lsls	r6, r3, #31
 80014dc:	d508      	bpl.n	80014f0 <_printf_i+0x148>
 80014de:	6923      	ldr	r3, [r4, #16]
 80014e0:	6861      	ldr	r1, [r4, #4]
 80014e2:	4299      	cmp	r1, r3
 80014e4:	bfde      	ittt	le
 80014e6:	2330      	movle	r3, #48	; 0x30
 80014e8:	f805 3c01 	strble.w	r3, [r5, #-1]
 80014ec:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 80014f0:	1b52      	subs	r2, r2, r5
 80014f2:	6122      	str	r2, [r4, #16]
 80014f4:	f8cd a000 	str.w	sl, [sp]
 80014f8:	464b      	mov	r3, r9
 80014fa:	aa03      	add	r2, sp, #12
 80014fc:	4621      	mov	r1, r4
 80014fe:	4640      	mov	r0, r8
 8001500:	f7ff fee4 	bl	80012cc <_printf_common>
 8001504:	3001      	adds	r0, #1
 8001506:	d14a      	bne.n	800159e <_printf_i+0x1f6>
 8001508:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800150c:	b004      	add	sp, #16
 800150e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001512:	6823      	ldr	r3, [r4, #0]
 8001514:	f043 0320 	orr.w	r3, r3, #32
 8001518:	6023      	str	r3, [r4, #0]
 800151a:	4833      	ldr	r0, [pc, #204]	; (80015e8 <_printf_i+0x240>)
 800151c:	2778      	movs	r7, #120	; 0x78
 800151e:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8001522:	6823      	ldr	r3, [r4, #0]
 8001524:	6829      	ldr	r1, [r5, #0]
 8001526:	061f      	lsls	r7, r3, #24
 8001528:	f851 6b04 	ldr.w	r6, [r1], #4
 800152c:	d402      	bmi.n	8001534 <_printf_i+0x18c>
 800152e:	065f      	lsls	r7, r3, #25
 8001530:	bf48      	it	mi
 8001532:	b2b6      	uxthmi	r6, r6
 8001534:	07df      	lsls	r7, r3, #31
 8001536:	bf48      	it	mi
 8001538:	f043 0320 	orrmi.w	r3, r3, #32
 800153c:	6029      	str	r1, [r5, #0]
 800153e:	bf48      	it	mi
 8001540:	6023      	strmi	r3, [r4, #0]
 8001542:	b91e      	cbnz	r6, 800154c <_printf_i+0x1a4>
 8001544:	6823      	ldr	r3, [r4, #0]
 8001546:	f023 0320 	bic.w	r3, r3, #32
 800154a:	6023      	str	r3, [r4, #0]
 800154c:	2310      	movs	r3, #16
 800154e:	e7a7      	b.n	80014a0 <_printf_i+0xf8>
 8001550:	4824      	ldr	r0, [pc, #144]	; (80015e4 <_printf_i+0x23c>)
 8001552:	e7e4      	b.n	800151e <_printf_i+0x176>
 8001554:	4615      	mov	r5, r2
 8001556:	e7bd      	b.n	80014d4 <_printf_i+0x12c>
 8001558:	682b      	ldr	r3, [r5, #0]
 800155a:	6826      	ldr	r6, [r4, #0]
 800155c:	6961      	ldr	r1, [r4, #20]
 800155e:	1d18      	adds	r0, r3, #4
 8001560:	6028      	str	r0, [r5, #0]
 8001562:	0635      	lsls	r5, r6, #24
 8001564:	681b      	ldr	r3, [r3, #0]
 8001566:	d501      	bpl.n	800156c <_printf_i+0x1c4>
 8001568:	6019      	str	r1, [r3, #0]
 800156a:	e002      	b.n	8001572 <_printf_i+0x1ca>
 800156c:	0670      	lsls	r0, r6, #25
 800156e:	d5fb      	bpl.n	8001568 <_printf_i+0x1c0>
 8001570:	8019      	strh	r1, [r3, #0]
 8001572:	2300      	movs	r3, #0
 8001574:	6123      	str	r3, [r4, #16]
 8001576:	4615      	mov	r5, r2
 8001578:	e7bc      	b.n	80014f4 <_printf_i+0x14c>
 800157a:	682b      	ldr	r3, [r5, #0]
 800157c:	1d1a      	adds	r2, r3, #4
 800157e:	602a      	str	r2, [r5, #0]
 8001580:	681d      	ldr	r5, [r3, #0]
 8001582:	6862      	ldr	r2, [r4, #4]
 8001584:	2100      	movs	r1, #0
 8001586:	4628      	mov	r0, r5
 8001588:	f7fe fe8a 	bl	80002a0 <memchr>
 800158c:	b108      	cbz	r0, 8001592 <_printf_i+0x1ea>
 800158e:	1b40      	subs	r0, r0, r5
 8001590:	6060      	str	r0, [r4, #4]
 8001592:	6863      	ldr	r3, [r4, #4]
 8001594:	6123      	str	r3, [r4, #16]
 8001596:	2300      	movs	r3, #0
 8001598:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800159c:	e7aa      	b.n	80014f4 <_printf_i+0x14c>
 800159e:	6923      	ldr	r3, [r4, #16]
 80015a0:	462a      	mov	r2, r5
 80015a2:	4649      	mov	r1, r9
 80015a4:	4640      	mov	r0, r8
 80015a6:	47d0      	blx	sl
 80015a8:	3001      	adds	r0, #1
 80015aa:	d0ad      	beq.n	8001508 <_printf_i+0x160>
 80015ac:	6823      	ldr	r3, [r4, #0]
 80015ae:	079b      	lsls	r3, r3, #30
 80015b0:	d413      	bmi.n	80015da <_printf_i+0x232>
 80015b2:	68e0      	ldr	r0, [r4, #12]
 80015b4:	9b03      	ldr	r3, [sp, #12]
 80015b6:	4298      	cmp	r0, r3
 80015b8:	bfb8      	it	lt
 80015ba:	4618      	movlt	r0, r3
 80015bc:	e7a6      	b.n	800150c <_printf_i+0x164>
 80015be:	2301      	movs	r3, #1
 80015c0:	4632      	mov	r2, r6
 80015c2:	4649      	mov	r1, r9
 80015c4:	4640      	mov	r0, r8
 80015c6:	47d0      	blx	sl
 80015c8:	3001      	adds	r0, #1
 80015ca:	d09d      	beq.n	8001508 <_printf_i+0x160>
 80015cc:	3501      	adds	r5, #1
 80015ce:	68e3      	ldr	r3, [r4, #12]
 80015d0:	9903      	ldr	r1, [sp, #12]
 80015d2:	1a5b      	subs	r3, r3, r1
 80015d4:	42ab      	cmp	r3, r5
 80015d6:	dcf2      	bgt.n	80015be <_printf_i+0x216>
 80015d8:	e7eb      	b.n	80015b2 <_printf_i+0x20a>
 80015da:	2500      	movs	r5, #0
 80015dc:	f104 0619 	add.w	r6, r4, #25
 80015e0:	e7f5      	b.n	80015ce <_printf_i+0x226>
 80015e2:	bf00      	nop
 80015e4:	080016f9 	.word	0x080016f9
 80015e8:	0800170a 	.word	0x0800170a

080015ec <_read_r>:
 80015ec:	b538      	push	{r3, r4, r5, lr}
 80015ee:	4d07      	ldr	r5, [pc, #28]	; (800160c <_read_r+0x20>)
 80015f0:	4604      	mov	r4, r0
 80015f2:	4608      	mov	r0, r1
 80015f4:	4611      	mov	r1, r2
 80015f6:	2200      	movs	r2, #0
 80015f8:	602a      	str	r2, [r5, #0]
 80015fa:	461a      	mov	r2, r3
 80015fc:	f7fe fed2 	bl	80003a4 <_read>
 8001600:	1c43      	adds	r3, r0, #1
 8001602:	d102      	bne.n	800160a <_read_r+0x1e>
 8001604:	682b      	ldr	r3, [r5, #0]
 8001606:	b103      	cbz	r3, 800160a <_read_r+0x1e>
 8001608:	6023      	str	r3, [r4, #0]
 800160a:	bd38      	pop	{r3, r4, r5, pc}
 800160c:	24000090 	.word	0x24000090

08001610 <_fstat_r>:
 8001610:	b538      	push	{r3, r4, r5, lr}
 8001612:	4d07      	ldr	r5, [pc, #28]	; (8001630 <_fstat_r+0x20>)
 8001614:	2300      	movs	r3, #0
 8001616:	4604      	mov	r4, r0
 8001618:	4608      	mov	r0, r1
 800161a:	4611      	mov	r1, r2
 800161c:	602b      	str	r3, [r5, #0]
 800161e:	f7fe ff06 	bl	800042e <_fstat>
 8001622:	1c43      	adds	r3, r0, #1
 8001624:	d102      	bne.n	800162c <_fstat_r+0x1c>
 8001626:	682b      	ldr	r3, [r5, #0]
 8001628:	b103      	cbz	r3, 800162c <_fstat_r+0x1c>
 800162a:	6023      	str	r3, [r4, #0]
 800162c:	bd38      	pop	{r3, r4, r5, pc}
 800162e:	bf00      	nop
 8001630:	24000090 	.word	0x24000090

08001634 <_isatty_r>:
 8001634:	b538      	push	{r3, r4, r5, lr}
 8001636:	4d06      	ldr	r5, [pc, #24]	; (8001650 <_isatty_r+0x1c>)
 8001638:	2300      	movs	r3, #0
 800163a:	4604      	mov	r4, r0
 800163c:	4608      	mov	r0, r1
 800163e:	602b      	str	r3, [r5, #0]
 8001640:	f7fe ff05 	bl	800044e <_isatty>
 8001644:	1c43      	adds	r3, r0, #1
 8001646:	d102      	bne.n	800164e <_isatty_r+0x1a>
 8001648:	682b      	ldr	r3, [r5, #0]
 800164a:	b103      	cbz	r3, 800164e <_isatty_r+0x1a>
 800164c:	6023      	str	r3, [r4, #0]
 800164e:	bd38      	pop	{r3, r4, r5, pc}
 8001650:	24000090 	.word	0x24000090

08001654 <_init>:
 8001654:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001656:	bf00      	nop
 8001658:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800165a:	bc08      	pop	{r3}
 800165c:	469e      	mov	lr, r3
 800165e:	4770      	bx	lr

08001660 <_fini>:
 8001660:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001662:	bf00      	nop
 8001664:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001666:	bc08      	pop	{r3}
 8001668:	469e      	mov	lr, r3
 800166a:	4770      	bx	lr
