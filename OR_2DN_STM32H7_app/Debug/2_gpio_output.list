
2_gpio_output.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000298  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000168  08000298  08000298  00010298  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000400  08000408  00010408  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .init_array   00000004  08000400  08000400  00010400  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .fini_array   00000004  08000404  08000404  00010404  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data         00000000  24000000  24000000  00010408  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          0000001c  24000000  08000408  00020000  2**2
                  ALLOC
  7 ._user_heap_stack 00000604  2400001c  08000408  0002001c  2**0
                  ALLOC
  8 .ARM.attributes 0000002e  00000000  00000000  00010408  2**0
                  CONTENTS, READONLY
  9 .debug_info   00000638  00000000  00000000  00010436  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 000001e1  00000000  00000000  00010a6e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_aranges 00000068  00000000  00000000  00010c50  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 0000003f  00000000  00000000  00010cb8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_macro  0002842a  00000000  00000000  00010cf7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_line   00000452  00000000  00000000  00039121  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_str    000e7545  00000000  00000000  00039573  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .comment      0000003c  00000000  00000000  00120ab8  2**0
                  CONTENTS, READONLY
 17 .debug_frame  00000058  00000000  00000000  00120af4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line_str 00000067  00000000  00000000  00120b4c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_loclists 00000044  00000000  00000000  00120bb3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000298 <__do_global_dtors_aux>:
 8000298:	b510      	push	{r4, lr}
 800029a:	4c05      	ldr	r4, [pc, #20]	; (80002b0 <__do_global_dtors_aux+0x18>)
 800029c:	7823      	ldrb	r3, [r4, #0]
 800029e:	b933      	cbnz	r3, 80002ae <__do_global_dtors_aux+0x16>
 80002a0:	4b04      	ldr	r3, [pc, #16]	; (80002b4 <__do_global_dtors_aux+0x1c>)
 80002a2:	b113      	cbz	r3, 80002aa <__do_global_dtors_aux+0x12>
 80002a4:	4804      	ldr	r0, [pc, #16]	; (80002b8 <__do_global_dtors_aux+0x20>)
 80002a6:	f3af 8000 	nop.w
 80002aa:	2301      	movs	r3, #1
 80002ac:	7023      	strb	r3, [r4, #0]
 80002ae:	bd10      	pop	{r4, pc}
 80002b0:	24000000 	.word	0x24000000
 80002b4:	00000000 	.word	0x00000000
 80002b8:	080003e8 	.word	0x080003e8

080002bc <frame_dummy>:
 80002bc:	b508      	push	{r3, lr}
 80002be:	4b03      	ldr	r3, [pc, #12]	; (80002cc <frame_dummy+0x10>)
 80002c0:	b11b      	cbz	r3, 80002ca <frame_dummy+0xe>
 80002c2:	4903      	ldr	r1, [pc, #12]	; (80002d0 <frame_dummy+0x14>)
 80002c4:	4803      	ldr	r0, [pc, #12]	; (80002d4 <frame_dummy+0x18>)
 80002c6:	f3af 8000 	nop.w
 80002ca:	bd08      	pop	{r3, pc}
 80002cc:	00000000 	.word	0x00000000
 80002d0:	24000004 	.word	0x24000004
 80002d4:	080003e8 	.word	0x080003e8

080002d8 <main>:

#define PIN2 				(1U << 2)
#define LED_PIN				PIN2

int main(void)
{
 80002d8:	b480      	push	{r7}
 80002da:	b083      	sub	sp, #12
 80002dc:	af00      	add	r7, sp, #0
	RCC->AHB4ENR |= GPIOJEN;
 80002de:	4b18      	ldr	r3, [pc, #96]	; (8000340 <main+0x68>)
 80002e0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80002e4:	4a16      	ldr	r2, [pc, #88]	; (8000340 <main+0x68>)
 80002e6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80002ea:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0

	GPIOJ->MODER |=  (1U << 4);
 80002ee:	4b15      	ldr	r3, [pc, #84]	; (8000344 <main+0x6c>)
 80002f0:	681b      	ldr	r3, [r3, #0]
 80002f2:	4a14      	ldr	r2, [pc, #80]	; (8000344 <main+0x6c>)
 80002f4:	f043 0310 	orr.w	r3, r3, #16
 80002f8:	6013      	str	r3, [r2, #0]
	GPIOJ->MODER &= ~(1U << 5);
 80002fa:	4b12      	ldr	r3, [pc, #72]	; (8000344 <main+0x6c>)
 80002fc:	681b      	ldr	r3, [r3, #0]
 80002fe:	4a11      	ldr	r2, [pc, #68]	; (8000344 <main+0x6c>)
 8000300:	f023 0320 	bic.w	r3, r3, #32
 8000304:	6013      	str	r3, [r2, #0]

	while(1)
	{
		// GPIOJ->ODR ^= LED_PIN;
		GPIOJ->BSRR = (1U << 2);
 8000306:	4b0f      	ldr	r3, [pc, #60]	; (8000344 <main+0x6c>)
 8000308:	2204      	movs	r2, #4
 800030a:	619a      	str	r2, [r3, #24]

		for(int i = 0; i < 500000; ++i) {}
 800030c:	2300      	movs	r3, #0
 800030e:	607b      	str	r3, [r7, #4]
 8000310:	e002      	b.n	8000318 <main+0x40>
 8000312:	687b      	ldr	r3, [r7, #4]
 8000314:	3301      	adds	r3, #1
 8000316:	607b      	str	r3, [r7, #4]
 8000318:	687b      	ldr	r3, [r7, #4]
 800031a:	4a0b      	ldr	r2, [pc, #44]	; (8000348 <main+0x70>)
 800031c:	4293      	cmp	r3, r2
 800031e:	ddf8      	ble.n	8000312 <main+0x3a>

		GPIOJ->BSRR = (1U << 18);
 8000320:	4b08      	ldr	r3, [pc, #32]	; (8000344 <main+0x6c>)
 8000322:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 8000326:	619a      	str	r2, [r3, #24]

		for(int i = 0; i < 500000; ++i) {}
 8000328:	2300      	movs	r3, #0
 800032a:	603b      	str	r3, [r7, #0]
 800032c:	e002      	b.n	8000334 <main+0x5c>
 800032e:	683b      	ldr	r3, [r7, #0]
 8000330:	3301      	adds	r3, #1
 8000332:	603b      	str	r3, [r7, #0]
 8000334:	683b      	ldr	r3, [r7, #0]
 8000336:	4a04      	ldr	r2, [pc, #16]	; (8000348 <main+0x70>)
 8000338:	4293      	cmp	r3, r2
 800033a:	ddf8      	ble.n	800032e <main+0x56>
		GPIOJ->BSRR = (1U << 2);
 800033c:	e7e3      	b.n	8000306 <main+0x2e>
 800033e:	bf00      	nop
 8000340:	58024400 	.word	0x58024400
 8000344:	58022400 	.word	0x58022400
 8000348:	0007a11f 	.word	0x0007a11f

0800034c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800034c:	480d      	ldr	r0, [pc, #52]	; (8000384 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800034e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000350:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000354:	480c      	ldr	r0, [pc, #48]	; (8000388 <LoopForever+0x6>)
  ldr r1, =_edata
 8000356:	490d      	ldr	r1, [pc, #52]	; (800038c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000358:	4a0d      	ldr	r2, [pc, #52]	; (8000390 <LoopForever+0xe>)
  movs r3, #0
 800035a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800035c:	e002      	b.n	8000364 <LoopCopyDataInit>

0800035e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800035e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000360:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000362:	3304      	adds	r3, #4

08000364 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000364:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000366:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000368:	d3f9      	bcc.n	800035e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800036a:	4a0a      	ldr	r2, [pc, #40]	; (8000394 <LoopForever+0x12>)
  ldr r4, =_ebss
 800036c:	4c0a      	ldr	r4, [pc, #40]	; (8000398 <LoopForever+0x16>)
  movs r3, #0
 800036e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000370:	e001      	b.n	8000376 <LoopFillZerobss>

08000372 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000372:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000374:	3204      	adds	r2, #4

08000376 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000376:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000378:	d3fb      	bcc.n	8000372 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800037a:	f000 f811 	bl	80003a0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800037e:	f7ff ffab 	bl	80002d8 <main>

08000382 <LoopForever>:

LoopForever:
    b LoopForever
 8000382:	e7fe      	b.n	8000382 <LoopForever>
  ldr   r0, =_estack
 8000384:	24080000 	.word	0x24080000
  ldr r0, =_sdata
 8000388:	24000000 	.word	0x24000000
  ldr r1, =_edata
 800038c:	24000000 	.word	0x24000000
  ldr r2, =_sidata
 8000390:	08000408 	.word	0x08000408
  ldr r2, =_sbss
 8000394:	24000000 	.word	0x24000000
  ldr r4, =_ebss
 8000398:	2400001c 	.word	0x2400001c

0800039c <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800039c:	e7fe      	b.n	800039c <ADC1_2_IRQHandler>
	...

080003a0 <__libc_init_array>:
 80003a0:	b570      	push	{r4, r5, r6, lr}
 80003a2:	4d0d      	ldr	r5, [pc, #52]	; (80003d8 <__libc_init_array+0x38>)
 80003a4:	4c0d      	ldr	r4, [pc, #52]	; (80003dc <__libc_init_array+0x3c>)
 80003a6:	1b64      	subs	r4, r4, r5
 80003a8:	10a4      	asrs	r4, r4, #2
 80003aa:	2600      	movs	r6, #0
 80003ac:	42a6      	cmp	r6, r4
 80003ae:	d109      	bne.n	80003c4 <__libc_init_array+0x24>
 80003b0:	4d0b      	ldr	r5, [pc, #44]	; (80003e0 <__libc_init_array+0x40>)
 80003b2:	4c0c      	ldr	r4, [pc, #48]	; (80003e4 <__libc_init_array+0x44>)
 80003b4:	f000 f818 	bl	80003e8 <_init>
 80003b8:	1b64      	subs	r4, r4, r5
 80003ba:	10a4      	asrs	r4, r4, #2
 80003bc:	2600      	movs	r6, #0
 80003be:	42a6      	cmp	r6, r4
 80003c0:	d105      	bne.n	80003ce <__libc_init_array+0x2e>
 80003c2:	bd70      	pop	{r4, r5, r6, pc}
 80003c4:	f855 3b04 	ldr.w	r3, [r5], #4
 80003c8:	4798      	blx	r3
 80003ca:	3601      	adds	r6, #1
 80003cc:	e7ee      	b.n	80003ac <__libc_init_array+0xc>
 80003ce:	f855 3b04 	ldr.w	r3, [r5], #4
 80003d2:	4798      	blx	r3
 80003d4:	3601      	adds	r6, #1
 80003d6:	e7f2      	b.n	80003be <__libc_init_array+0x1e>
 80003d8:	08000400 	.word	0x08000400
 80003dc:	08000400 	.word	0x08000400
 80003e0:	08000400 	.word	0x08000400
 80003e4:	08000404 	.word	0x08000404

080003e8 <_init>:
 80003e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003ea:	bf00      	nop
 80003ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003ee:	bc08      	pop	{r3}
 80003f0:	469e      	mov	lr, r3
 80003f2:	4770      	bx	lr

080003f4 <_fini>:
 80003f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003f6:	bf00      	nop
 80003f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003fa:	bc08      	pop	{r3}
 80003fc:	469e      	mov	lr, r3
 80003fe:	4770      	bx	lr
